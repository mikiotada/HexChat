{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/chat-list/chat-list.component.ts","./src/app/components/chat-list/chat-list.component.html","./src/app/components/chat-msgs/chat-msgs.component.ts","./src/app/components/chat-msgs/chat-msgs.component.html","./src/app/components/chat/chat.component.ts","./src/app/components/chat/chat.component.html","./src/app/components/edit-user/edit-user.component.ts","./src/app/components/edit-user/edit-user.component.html","./src/app/components/front/front.component.ts","./src/app/components/front/front.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/new-user-facebook/new-user-facebook.component.ts","./src/app/components/new-user-facebook/new-user-facebook.component.html","./src/app/components/new-user/new-user.component.ts","./src/app/components/new-user/new-user.component.html","./src/app/components/preference/preference.component.ts","./src/app/components/preference/preference.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/rating/rating.component.ts","./src/app/components/rating/rating.component.html","./src/app/components/showprofile/showprofile.component.ts","./src/app/components/showprofile/showprofile.component.html","./src/app/components/signin/signin.component.ts","./src/app/components/signin/signin.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/material/material.module.ts","./src/app/shared/guard/auth.guard.ts","./src/app/shared/routing/app-routing.module.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/chat.service.ts","./src/app/shared/services/firebase.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,SAAS,CAAC;KACnB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACmD;AACnC;AACE;AACA;AACA;AACJ;AACR;AAG/C,sEAAsE;AACG;AAClB;AAIvD,UAAU;AAC6D;AAExB;AAC/C,yCAAyC;AACS;AACS;AACM;AACP;AAE1D,mBAAmB;AACkD;AAErE,eAAe;AAC8C;AACQ;AAErE,6BAA6B;AACoC;AACM;AACA;AACE;AACU;AACZ;AACQ;AACA;AACd;AACG;AACR;AACJ;AACuB;AACH;AACG;AACuB;AACvC;AACuB;;;AAyD/E,MAAM,SAAS;;wFAAT,SAAS,cAHR,4DAAY;4IAGb,SAAS,mBAZT,CAAC,0EAAW,EAAE,kFAAe;KAOrC,YA7BQ;YACL,sEAAgB;YAChB,uEAAa;YACb,0DAAW;YACX,kEAAmB;YACnB,oFAAgB;YAChB,gEAAiB,CAAC,aAAa,CAAC,sEAAW,CAAC,cAAc,CAAC;YAC3D,yEAAqB;YACrB,+EAAsB;YACtB,yEAAc;YACd,6FAAuB;YACvB,wEAAe;YACf,sEAAc;YACd,wEAAe;YACf,wEAAe;YACf,sFAAoB;YACpB,sEAAc;YACd,uEAAc;YACd,+EAAkB;YAClB,4DAAY;YACZ,mFAA0B;SAC7B;mIAaQ,SAAS,mBApDlB,4DAAY;QACZ,8EAAa;QACb,gGAAmB;QACnB,oFAAe;QACf,oFAAe;QACf,oFAAe;QACf,4FAAiB;QACjB,uFAAgB;QAChB,4FAAiB;QACjB,uFAAgB;QAChB,8EAAa;QACb,iFAAc;QACd,yFAAgB;QAChB,4FAAiB;QACjB,mHAAwB;QACxB,mGAAoB,aAIhB,sEAAgB;QAChB,uEAAa;QACb,0DAAW;QACX,kEAAmB;QACnB,oFAAgB,oEAEhB,yEAAqB;QACrB,+EAAsB;QACtB,yEAAc;QACd,6FAAuB;QACvB,wEAAe;QACf,sEAAc;QACd,wEAAe;QACf,wEAAe;QACf,sFAAoB;QACpB,sEAAc;QACd,uEAAc;QACd,+EAAkB;QAClB,4DAAY;QACZ,mFAA0B;6FAcrB,SAAS;cAtDrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,4DAAY;oBACZ,8EAAa;oBACb,gGAAmB;oBACnB,oFAAe;oBACf,oFAAe;oBACf,oFAAe;oBACf,4FAAiB;oBACjB,uFAAgB;oBAChB,4FAAiB;oBACjB,uFAAgB;oBAChB,8EAAa;oBACb,iFAAc;oBACd,yFAAgB;oBAChB,4FAAiB;oBACjB,mHAAwB;oBACxB,mGAAoB;iBACrB;gBAEC,OAAO,EAAE;oBACL,sEAAgB;oBAChB,uEAAa;oBACb,0DAAW;oBACX,kEAAmB;oBACnB,oFAAgB;oBAChB,gEAAiB,CAAC,aAAa,CAAC,sEAAW,CAAC,cAAc,CAAC;oBAC3D,yEAAqB;oBACrB,+EAAsB;oBACtB,yEAAc;oBACd,6FAAuB;oBACvB,wEAAe;oBACf,sEAAc;oBACd,wEAAe;oBACf,wEAAe;oBACf,sFAAoB;oBACpB,sEAAc;oBACd,uEAAc;oBACd,+EAAkB;oBAClB,4DAAY;oBACZ,mFAA0B;iBAC7B;gBACH,SAAS,EAAE,CAAC,0EAAW,EAAE,kFAAe;iBAOrC;gBAEH,SAAS,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC3GD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;;;;IC0B7E,wEACE;IAAA,wEACE;IADE,qWAA4B;IAC9B,wEACI;IAAA,0EAAuC;IAAA,uDAAmB;IAAA,4DAAO;IACrE,4DAAK;IACL,gEACF;IAAA,4DAAK;IACP,4DAAQ;;;IAJO,0DAA+B;IAA/B,+GAA+B;IAAC,0DAAmB;IAAnB,8FAAmB;;ADhB7D,MAAM,iBAAiB;IA+B5B,YACY,KAAqB,EACtB,WAAwB,EACxB,MAAc,EACd,EAAe;QAHd,UAAK,GAAL,KAAK,CAAgB;QACtB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QA/B1B,aAAQ,GAAG;YACT;gBACA,UAAU,EAAE,mBAAmB;gBAC/B,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,eAAe;gBACzB,OAAO,EAAE,sGAAsG;aAC9G;YACD;gBACA,UAAU,EAAE,kBAAkB;gBAC9B,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,sBAAsB;gBAChC,OAAO,EAAE,sLAAsL;aAC9L;YACD;gBACA,UAAU,EAAE,mBAAmB;gBAC/B,IAAI,EAAE,YAAY;gBAClB,QAAQ,EAAE,aAAa;gBACvB,OAAO,EAAE,2GAA2G;aACnH;SACF,CAAC;QACJ,wBAAwB;QACnB,aAAQ,GAAG,UAAU,EAAE;YACpB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;QACjE,CAAC,CAAC;IAQH,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;IAC3C,CAAC;;kFAxCU,iBAAiB;iGAAjB,iBAAiB;QCG9B,gEACA;QAAA,yEACA;QAAA,2EAEE;QAAA,wEACA;QAAA,qEACI;QAAA,yEAA8B;QAAA,qEAAU;QAAA,4DAAM;QAClD,4DAAK;QACL,4DAAQ;QAER,iHACE;;QAOJ,4DAAQ;QAER,4DAAM;;QAVG,0DAAuC;QAAvC,oJAAuC;;6FDbnC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QAEtB,yEACE;QAAA,oEACA;QAAA,oEAAG;QAAA,oFAAyB;QAAA,4DAAI;QAChC,0EAAyB;QAAA,gEAAK;QAAA,4DAAO;QACvC,4DAAM;QAEN,yEACE;QAAA,oEACA;QAAA,qEAAG;QAAA,6FAAiC;QAAA,4DAAI;QACxC,2EAAwB;QAAA,iEAAK;QAAA,4DAAO;QACtC,4DAAM;QAEN,0EACE;QAAA,qEACA;QAAA,qEAAG;QAAA,kGAAsC;QAAA,4DAAI;QAC7C,2EAAyB;QAAA,iEAAK;QAAA,4DAAO;QACvC,4DAAM;QAEN,0EACE;QAAA,qEACA;QAAA,qEAAG;QAAA,qHAAyD;QAAA,4DAAI;QAChE,2EAAwB;QAAA,iEAAK;QAAA,4DAAO;QACtC,4DAAM;;6FDjBO,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2F;;;;;;;;;;;ICSnF,0EACI;IAAA,0EAAkD;IAA7B,qWAA2B;IAAE,qEAAiC;IAAA,4DAAM;IAEzF,0EACI;IAAA,0EACC;IAAA,2EAAmE;IAAA,uDAAqB;IAAA,4DAAO;IAChG,4DAAM;IACN,0EACI;IAAA,uDACJ;IAAA,4DAAM;IACV,4DAAM;IAEV,4DAAM;;;IAXqD,0DAA0B;IAA1B,iLAA0B;IAIhD,0DAAsC;IAAtC,qHAAsC;IAAC,0DAAqB;IAArB,iHAAqB;IAGrF,0DACJ;IADI,2FACJ;;;;IAlBhB,6EACI;IAAA,4EACI;IAAA,yEACI;IAAA,uDACJ;IAAA,4DAAM;IACV,4DAAS;IAET,2EAA+B;IAC/B,4EACI;IAAA,mHACI;IAYR,4DAAM;IAGN,yEACE;IAAA,2EACA;IAD2E,iVAAoB;IAA/F,4DACA;IAAA,6EAAyD;IAAjD,4VAAyB;IAAwB,gEAAI;IAAA,4DAAS;IACxE,4DAAM;IAEV,4DAAU;;;;IA3BE,0DACJ;IADI,iGACJ;IAKiB,0DAA0D;IAA1D,sFAA0D;IAiBF,0DAAoB;IAApB,mFAAoB;;ADX9F,MAAM,aAAa;IAWxB,YACS,EAAe,EACd,KAAqB,EACtB,MAAc,EACd,WAAwB,EACvB,GAAqB;QAJtB,OAAE,GAAF,EAAE,CAAa;QACd,UAAK,GAAL,KAAK,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACvB,QAAG,GAAH,GAAG,CAAkB;QAV/B,aAAQ,GAAG,UAAU,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,EAAE,CAAC;YACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;QAC5E,CAAC,CAAC;IAQE,CAAC;IACP,EAAE;IACF,aAAa;IACb,8EAA8E;IAC9E,MAAM;IAEJ,QAAQ;QACN,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtD,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAGD,cAAc;QACZ,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS;cACxC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC;IAClD,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAGD,MAAM,CAAC,MAAM;QACX,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO,KAAK,CAAC,6BAA6B,CAAC,CAAC;SAC7C;QACD,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,cAAc,CAAC,CAAC,EAAE,GAAG;QACnB,OAAO,GAAG,CAAC,SAAS,CAAC;IACvB,CAAC;IAEO,YAAY;QAClB,UAAU,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC;IACxE,CAAC;;0EAxDU,aAAa;6FAAb,aAAa;;;;;;QCf1B,kHACI;;;QADmB,4IAA6B;;6FDevC,aAAa;cANzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;kBAGE,uDAAS;mBAAC,UAAU;;;;;;;;;;;;;;AEhBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAC+B;AAOvB;AAIL;AACS;AACA;AACH;AACK;AACN;AACW;;;;;;;;;;;;;;;;;;;ICiBvC,4EAC6J;IAAA,uDAAsB;IAAA,4DAAY;;;IAAlC,0DAAsB;IAAtB,wFAAsB;;;IAFvL,wEACI;IAAA,gJAC6J;IACjK,qEAAe;;;;IADH,0DAAoJ;IAApJ,8OAAoJ;;;IAS5J,uFACI;IAAA,uDACJ;IAAA,4DAAmB;;;IAF0B,2EAAa;IACtD,0DACJ;IADI,oIACJ;;;IAcA,4EACqI;IAAA,uDAAsB;IAAA,4DAAY;;;IAAlC,0DAAsB;IAAtB,wFAAsB;;;IAF/J,wEACI;IAAA,iJACqI;IACzI,qEAAe;;;;IADH,0DAA4H;IAA5H,sNAA4H;;;IA+BxI,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF8C,8EAAgB;IACvE,0DACJ;IADI,uFACJ;;;IAUI,+EAA0C;IAAA,iEAAM;IAAA,4DAAW;;;;IAH/D,+EAEI;IAFM,2ZAAwC;IAE9C,uDACA;IAAA,4JAA0C;IAC9C,4DAAW;;;;IAHD,yFAAuB;IAC7B,0DACA;IADA,qFACA;IAAU,0DAAiB;IAAjB,oFAAiB;;;;IALvC,qFACI;IAAA,wFACI;IAAA,iJAEI;IAGJ,wEACI;IAAA,4EAMJ;IANW,sYAAoD;IAA3D,4DAMJ;IAAA,4DAAQ;IACZ,4DAAgB;IACpB,4DAAiB;;;;IAd0C,0DAAmC;IAAnC,uFAAmC;IAO3E,0DAAmC;IAAnC,qGAAmC;;;IAqB9C,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFmD,8EAAgB;IAC5E,0DACJ;IADI,uFACJ;;;IAUI,+EAA0C;IAAA,iEAAM;IAAA,4DAAW;;;;IAH/D,+EAEI;IAFM,2ZAAwC;IAE9C,uDACA;IAAA,4JAA0C;IAC9C,4DAAW;;;;IAHD,yFAAuB;IAC7B,0DACA;IADA,qFACA;IAAU,0DAAiB;IAAjB,oFAAiB;;;;IALvC,qFACI;IAAA,wFACI;IAAA,iJAEI;IAGJ,wEACI;IAAA,4EAMJ;IANW,sYAAoD;IAA3D,4DAMJ;IAAA,4DAAQ;IACZ,4DAAgB;IACpB,4DAAiB;;;;IAd0C,0DAAmC;IAAnC,uFAAmC;IAO3E,0DAAmC;IAAnC,qGAAmC;;;IAwB9C,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFwD,8EAAgB;IACjF,0DACJ;IADI,uFACJ;;;IAUI,+EAA0C;IAAA,iEAAM;IAAA,4DAAW;;;;IAH/D,+EAEI;IAFM,2ZAAwC;IAE9C,uDACA;IAAA,4JAA0C;IAC9C,4DAAW;;;;IAHD,yFAAuB;IAC7B,0DACA;IADA,qFACA;IAAU,0DAAiB;IAAjB,oFAAiB;;;;IALvC,qFACI;IAAA,wFACI;IAAA,iJAEI;IAGJ,wEACI;IAAA,4EAMJ;IANW,sYAAoD;IAA3D,4DAMJ;IAAA,4DAAQ;IACZ,4DAAgB;IACpB,4DAAiB;;;;IAd0C,0DAAmC;IAAnC,uFAAmC;IAO3E,0DAAmC;IAAnC,qGAAmC;;;IAyB9C,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFmD,8EAAgB;IAC5E,0DACJ;IADI,uFACJ;;;IAeA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFyD,8EAAgB;IAClF,0DACJ;IADI,uFACJ;;;IAwBA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFuD,8EAAgB;IAChF,0DACJ;IADI,uFACJ;;;IAgBA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFuD,8EAAgB;IAChF,0DACJ;IADI,uFACJ;;;IAgBA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFsD,8EAAgB;IAC/E,0DACJ;IADI,uFACJ;;;IAuBA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFuD,8EAAgB;IAChF,0DACJ;IADI,uFACJ;;;IAgBA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFuD,8EAAgB;IAChF,0DACJ;IADI,uFACJ;;;IAeA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFsD,8EAAgB;IAC/E,0DACJ;IADI,uFACJ;;;;IAxUhB,0EAEI;IAFE,yVAAwC;IAE1C,yEAEI;IAAA,yEACI;IAAA,yEACI;IAAA,oFACI;IAAA,sEAEJ;IAAA,4DAAiB;IACjB,sIACI;IAGR,4DAAM;IAEN,yEACI;IAAA,qFAII;IAAA,+IACI;IAER,4DAAkB;IAItB,4DAAM;IAEN,0EACI;IAAA,qFACI;IAAA,wEAGJ;IAAA,4DAAiB;IACjB,wIACI;IAGR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,sEACA;IAAA,iEACA;IAAA,iFASA;IARO,+UAAiC;IADxC,4DASA;IAAA,6EAAkB;IAAA,4EAAgB;IAAA,4DAAQ;IAC9C,4DAAM;IACV,4DAAM;IAEN,0EACI;IAAA,sFACI;IAAA,wEAQA;IAAA,8FACI;IAAA,qIACI;;IAER,4DAAmB;IACvB,4DAAiB;IACjB,8EAA0E;IAAlE,8TAAsB;IAA4C,6DAAC;IAAA,4DAAS;IAEpF,6IACI;IAiBR,4DAAM;IAEN,0EACI;IAAA,sFACI;IAAA,wEAOA;IAAA,8FACI;IAAA,qIACI;;IAER,4DAAmB;IACvB,4DAAiB;IACjB,8EAA2E;IAAnE,+TAAuB;IAA4C,6DAAC;IAAA,4DAAS;IAErF,6IACI;IAgBR,4DAAM;IAEN,iEACA;IAAA,4EAAU;IAAA,qEAAS;IAAA,4DAAW;IAC9B,iEACA;IAAA,0EACI;IAAA,sFACI;IAAA,wEAQA;IAAA,8FACI;IAAA,qIACI;;IAER,4DAAmB;IACvB,4DAAiB;IACjB,8EAA2E;IAAnE,+TAAuB;IAA4C,6DAAC;IAAA,4DAAS;IAErF,6IACI;IAgBR,4DAAM;IAEN,iEACA;IAAA,4EAAU;IAAA,6EAAiB;IAAA,4DAAW;IACtC,uEACI;IAAA,iEAEA;IAAA,2EACA;IAAA,sFACI;IAAA,wEAOA;IAAA,8FACI;IAAA,qIACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACH,gIACA;IAAA,2EACA;IAAA,sFACI;IAAA,wEAOA;IAAA,8FACI;IAAA,qIACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACP,4DAAM;IAEN,iEACA;IAAA,4EAAU;IAAA,6EAAiB;IAAA,4DAAW;IACtC,iEACA;IAAA,qEAAG;IAAA,oFAAwB;IAAA,4DAAI;IAC/B,uEACI;IAAA,iEAEA;IAAA,2EACA;IAAA,sFACI;IAAA,wEAQA;IAAA,8FACI;IAAA,qIACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACH,gIACA;IAAA,2EACA;IAAA,sFACI;IAAA,wEAQA;IAAA,8FACI;IAAA,qIACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACH,gIACA;IAAA,2EACA;IAAA,uFACI;IAAA,yEAQA;IAAA,+FACI;IAAA,uIACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACP,4DAAM;IAEN,kEAEA;IAAA,sEAAG;IAAA,wFAA2B;IAAA,4DAAI;IAClC,wEAEI;IAAA,kEACA;IAAA,4EACA;IAAA,uFACI;IAAA,yEAQA;IAAA,+FACI;IAAA,uIACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACH,iIACA;IAAA,4EACA;IAAA,uFACI;IAAA,yEAQA;IAAA,+FACI;IAAA,uIACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACH,iIACA;IAAA,4EACA;IAAA,uFACI;IAAA,yEAOA;IAAA,+FACI;IAAA,uIACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACP,4DAAM;IAEN,4EACI;IAAA,4EACI;IAAA,+EACsB;IAAA,oEACtB;IAAA,4DAAS;IACb,4DAAM;IACV,4DAAM;IAGV,4DAAO;;;;;;;;;;;;;;IAvV4D,2FAAyB;IAU9D,0DAA0D;IAA1D,6GAA0D;IAWlD,0DAA0B;IAA1B,oFAA0B;IAelC,0DAAkD;IAAlD,qGAAkD;IAOlD,0DAAmF;IAAnF,wNAAmF;IAkB7F,0DAAuB;IAAvB,yFAAuB;IAQf,0DAA8C;IAA9C,gKAA8C;IAOlD,0DAAkC;IAAlC,qIAAkC;IAuBtC,0DAAwB;IAAxB,0FAAwB;IAOhB,0DAAmD;IAAnD,qKAAmD;IAOvD,0DAAkC;IAAlC,qIAAkC;IAyBtC,0DAAwB;IAAxB,0FAAwB;IAQhB,0DAAwD;IAAxD,0KAAwD;IAO5D,0DAAkC;IAAlC,qIAAkC;IA2BtC,0DAAwB;IAAxB,0FAAwB;IAOhB,0DAAmD;IAAnD,qKAAmD;IAU3D,0DAAwB;IAAxB,0FAAwB;IAOhB,0DAAyD;IAAzD,2KAAyD;IAmBjE,2DAA2B;IAA3B,6FAA2B;IAOnB,0DAAuD;IAAvD,yKAAuD;IAW/D,0DAAuB;IAAvB,yFAAuB;IAOf,0DAAuD;IAAvD,yKAAuD;IAW/D,0DAA6B;IAA7B,+FAA6B;IAOrB,0DAAsD;IAAtD,yKAAsD;IAkB9D,0DAA2B;IAA3B,6FAA2B;IAOnB,0DAAuD;IAAvD,0KAAuD;IAW/D,0DAAuB;IAAvB,yFAAuB;IAOf,0DAAuD;IAAvD,0KAAuD;IAU/D,0DAA6B;IAA7B,+FAA6B;IAOrB,0DAAsD;IAAtD,yKAAsD;IAU9D,0DAA+B;IAA/B,iGAA+B;;AD9UpD,MAAM,iBAAiB;IAyF1B,YACW,eAAgC,EAC/B,EAAe,EACf,OAA2B,EAC5B,WAAwB,EACvB,MAAc,EACf,QAAqB;QALrB,oBAAe,GAAf,eAAe,CAAiB;QAC/B,OAAE,GAAF,EAAE,CAAa;QACf,YAAO,GAAP,OAAO,CAAoB;QAC5B,gBAAW,GAAX,WAAW,CAAa;QACvB,WAAM,GAAN,MAAM,CAAQ;QACf,aAAQ,GAAR,QAAQ,CAAa;QAxFhC,qBAAqB;QACrB,UAAK,GAAG,cAAc,CAAC;QACvB,iBAAY,GAAS,IAAI,CAAC;QAI1B,OAAO;QAEP,wBAAmB,GAAG;YAClB,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,EAAC;aACnD;YACD,aAAa,EAAE;gBACX,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,0BAA0B,EAAC;aAC1D;YACD,KAAK,EAAE;gBACH,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,kBAAkB,EAAC;aAClD;SACJ,CAAC;QACF,YAAO,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC5B,YAAO,GAAa,kEAAqB,CAAC;QAC1C,cAAS,GAAa,EAAE,CAAC;QAGzB,aAAQ,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7B,iBAAY,GAAa,mEAAsB,CAAC;QAChD,cAAS,GAAa,EAAE,CAAC;QAEzB,aAAQ,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7B,sBAAiB,GAAa,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACrD,cAAS,GAAa,EAAE,CAAC;QAEzB,aAAQ,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7B,iBAAY,GAAa,kEAAkB,CAAC;QAE5C,aAAQ,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7B,uBAAkB,GAAa,kEAAqB,CAAC;QAErD,gBAAW,GAAG,IAAI,0DAAW,EAAE,CAAC;QAChC,qBAAgB,GAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAE5C,YAAO,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC5B,qBAAgB,GAAa,4DAAe,CAAC;QAE7C,kBAAa,GAAG,IAAI,0DAAW,EAAE,CAAC;QAClC,0BAAqB,GAAa,gEAAoB,CAAC;QAEvD,gBAAW,GAAG,IAAI,0DAAW,EAAE,CAAC;QAChC,qBAAgB,GAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAG5C,YAAO,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC5B,qBAAgB,GAAa,4DAAe,CAAC;QAE7C,kBAAa,GAAG,IAAI,0DAAW,EAAE,CAAC;QAClC,0BAAqB,GAAa,gEAAoB,CAAC;QAGvD,kDAAkD;QAClD,YAAO,GAAG,IAAI,CAAC;QACf,eAAU,GAAG,KAAK,CAAC;QACnB,cAAS,GAAG,IAAI,CAAC;QACjB,cAAS,GAAG,IAAI,CAAC;QACjB,gBAAW,GAAG,IAAI,CAAC;QACV,uBAAkB,GAAa,CAAC,2DAAK,EAAE,2DAAK,CAAC,CAAC;QAavD,oDAAoD;QAEpD,WAAM,GAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IAW/C,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;aAC3C,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAClD,CAAC;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY;aACjD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CACvD,CAAC;QACN,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY;aACtD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAC5D,CAAC;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY;aACjD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CACvD,CAAC;QACN,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY;aACvD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAC7D,CAAC;QACN,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY;aACxD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAC3D,CAAC;QACN,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY;aACxD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAC3D,CAAC;QACN,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;aACpD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAC3D,CAAC;QACN,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;aACpD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAC3D,CAAC;QACN,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY;aACzD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAChE,CAAC;QACN,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY;aACzD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAChE,CAAC;QAGN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpC,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;gBACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;gBAChC,QAAQ;gBACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;gBAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;gBAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;gBACjD,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAClD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAClD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBACnE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBACnE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAC3D,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAC3D,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;gBACvE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;aAC1E;QACL,CAAC,CAAC,CAAC;IAGP,CAAC;IAED,UAAU;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,WAAW,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzD,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,MAAM,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxD,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,QAAQ,EAAE,CAAC,EAAE,CAAC;SAEjB,CAAC,CAAC;IACP,CAAC;IAED,GAAG,CAAC,KAAwB,EAAE,KAAK;QAC/B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,YAAY;QACZ,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;YACtB,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,EAAC,CAAC,CAAC;SACpC;QAED,wBAAwB;QACxB,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;SACpB;IACL,CAAC;IAGD,MAAM,CAAC,GAAc,EAAE,KAAK;QACxB,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAEjC,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC1B;IACL,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC7B,CAAC;IAED,WAAW;QACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC9B,CAAC;IAED,WAAW;QACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC9B,CAAC;IAED,WAAW;QACP,4FAA4F;QAC5F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,kDAAkD;YAClD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChD,CAAC,CAAC;IACP,CAAC;IAGD,kBAAkB,CAAC,QAAQ;QACvB,IAAI,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE;YAC5C,OAAO,EAAE,IAAI,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QACH,OAAO,aAAa,CAAC;IACzB,CAAC;IAGD,QAAQ,CAAC,KAAK;QACV,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC/B,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,IAAE,IAAI,EAAE;YAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAAC;QACvE,IAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAE,IAAI,EAAE;YAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAAC;QACzE,IAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAE,IAAI,EAAE;YAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAAC;QAEzE,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACrC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAErC,KAAK,CAAC,WAAW,GAAG;YAChB,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YAClC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;YAC1B,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK;SACzC,CAAC;QACF,KAAK,CAAC,WAAW,GAAG;YAChB,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YAClC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;YAC1B,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK;SACzC,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;aAChF,IAAI,CACD,GAAG,CAAC,EAAE;YAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,EAAE,SAAS,EAAE;gBAClD,QAAQ,EAAE,IAAI;gBACd,kBAAkB,EAAE,OAAO;aAC9B,CAAC,CAAC;YACH,wCAAwC;YACxC,sBAAsB;QAC1B,CAAC,CACJ;IACT,CAAC;IAGD,cAAc,CAAC,KAAK;QAChB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACnB,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,QAAQ,GAAG,iBAAiB,CAAC,EAAE,CAAC;QACtC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC3C,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI;aACC,eAAe,EAAE;aACjB,IAAI,CACD,+DAAQ,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC7B,IAAI,GAAG,EAAE;oBACL,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;oBACpB,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,GAAG,CAAC;iBAC1C;gBACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE/B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CACL;aACA,SAAS,CAAC,GAAG,CAAC,EAAE;YACb,IAAI,GAAG,EAAE;gBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACpB;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAEO,OAAO,CAAC,KAAa,EAAE,OAAO;QAClC,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,OAAO,EAAE;YACT,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;SAC/E;IAEL,CAAC;;kFAlUQ,iBAAiB;iGAAjB,iBAAiB;QCL9B,yEACI;QAAA,yEAEI;QAAA,kHAEI;QAsVR,4DAAM;QACV,4DAAM;;QAzViD,0DAAmB;QAAnB,iFAAmB;;6FDE7D,iBAAiB;cAL7B,uDAAS;eAAC;gBACP,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aAC3C;;;;;;;;;;;;;;AEzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICuB5C,qEACE;IAAA,uEAAmC;IAAA,uDAAoD;IAAA,4DAAI;IAC7F,4DAAK;;;IADA,0DAA+B;IAA/B,8GAA+B;IAAC,0DAAoD;IAApD,gIAAoD;;;;IApB7F,sEACE;IAAA,oEACA;IAAA,oEACE;IAAA,0EAA0B;IAAA,uDAAsB;IAAA,4DAAO;IACvD,0EAA2B;IAAA,uDAAc;IAAA,4DAAO;IAClD,4DAAI;IAGJ,4EAAgE;IAAhC,8RAAS,6BAAqB,IAAC;IAAC,mEAAQ;IAAA,4DAAS;IACjF,gEAEJ;IACI,6EAAqD;IAAtB,+RAAS,mBAAW,IAAC;IAAC,2EAAe;IAAA,4DAAS;IAE7E,iEAEA;IAAA,sEAAI;IAAA,oEAAQ;IAAA,4DAAK;IAEjB,sEACE;IAAA,gHACE;;IAEJ,4DAAK;IACP,4DAAM;;;;IAtBC,0DAAqB;IAArB,+IAAqB;IAEE,0DAAsB;IAAtB,qFAAsB;IACrB,0DAAc;IAAd,6EAAc;IAerC,2DAAuC;IAAvC,yJAAuC;;;;IAO7C,6EAA4D;IAArC,sSAAS,kCAA0B,IAAC;IAAC,8EAAmB;IAAA,4DAAS;;ADrBrF,MAAM,cAAc;IAEzB,YACS,WAAwB,EACxB,EAAe;QADf,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;IACpB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;IAC3C,CAAC;;4EATU,cAAc;8FAAd,cAAc;QCR3B,qEAAI;QAAA,+EAAoB;QAAA,4DAAK;QAE7B,yEACE;QAAA,2GACE;;QAwBF,sMACE;QAGJ,4DAAM;;;QA7BC,0DAAsD;QAAtD,wJAAsD;;6FDKhD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAQ3C,MAAM,aAAa;IAExB,YACS,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC7B,CAAC;IAEL,QAAQ;IACR,CAAC;;0EAPU,aAAa;6FAAb,aAAa;QCN1B,uEACA;QAAA,qEACA;QAAA,qEACA;QAAA,qEACA;QAAA,qEACA;QAAA,uEACA;QAAA,yEACE;QAAA,iFACA;QAAA,4EAA2D;QAAA,kEAAO;QAAA,4DAAS;QACvE,sEAAgC;QAChC,wEAAM;QAAA,0FAA8B;QAAA,4DAAO;QAC3C,wEAAiE;QAAA,iEAAK;QAAA,4DAAI;QAChF,4DAAc;QAEV,0EAA4B;QAAA,iFAAqB;QAAA,4DAAM;QACvD,yEAA8B;QAAA,8EAC5B;QAAA,yEACF;QAAA,4DAAS;QAAA,4DAAI;QACb,4DAAM;QAGV,2EACE;QAAA,0EAAsB;QAAA,yEAAa;QAAA,4DAAK;QACxC,yEAA8B;QAAA,4EAAgB;QAAA,4DAAI;QAClD,2EACE;QAAA,2EACE;QAAA,oEAAiE;QACjE,yEAAoB;QAAA,iEAAK;QAAA,4DAAI;QAC7B,qEAAG;QAAA,+IAAmF;QAAA,4DAAI;QAC5F,4DAAM;QACN,2EACE;QAAA,oEAAqD;QACrD,yEAAoB;QAAA,mEAAO;QAAA,4DAAI;QAC/B,qEAAG;QAAA,oKAAwG;QAAA,4DAAI;QACjH,4DAAM;QACN,2EACE;QAAA,oEAAuD;QACvD,yEAAoB;QAAA,iEAAK;QAAA,4DAAI;QAC7B,qEAAG;QAAA,wHAA4D;QAAA,4DAAI;QACrE,4DAAM;QACN,2EACE;QAAA,oEAAmD;QACnD,yEAAoB;QAAA,mEAAO;QAAA,4DAAI;QAC/B,qEAAG;QAAA,yJAA6F;QAAA,4DAAI;QACtG,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,qEAAG;QAAA,sQAA0M;QAAA,4DAAI;QAEnN,4DAAM;QAKR,4DAAM;QACR,4DAAM;QAGN,2EACE;QAAA,0EAAsB;QAAA,oEAAQ;QAAA,4DAAK;QACnC,yEAA8B;QAAA,4FAAgC;QAAA,4DAAI;QAClE,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,sEACA;QAAA,2EACE;QAAA,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,yEAAsB;QAAA,6EAAiB;QAAA,4DAAI;QAE3C,qEAAG;QAAA,yEAA4G;QAAA,oEAAqC;QAAC,oEAAO;QAAA,4DAAI;QAAA,4DAAI;QACtK,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,sEACA;QAAA,2EACE;QAAA,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,yEAAsB;QAAA,sFAA0B;QAAA,4DAAI;QAEpD,qEAAG;QAAA,yEAAkH;QAAA,oEAAqC;QAAC,oEAAO;QAAA,4DAAI;QAAA,4DAAI;QAC5K,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,sEACA;QAAA,2EACE;QAAA,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,yEAAsB;QAAA,8EAAkB;QAAA,4DAAI;QAEpC,qEAAG;QAAA,yEAAyG;QAAA,oEAAqC;QAAC,oEAAO;QAAA,4DAAI;QAAA,4DAAI;QAC3K,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,4EACE;QAAA,uEACA;QAAA,4EACE;QAAA,uEAAI;QAAA,qEAAQ;QAAA,4DAAK;QACjB,0EAAsB;QAAA,iFAAoB;QAAA,4DAAI;QAEtC,sEAAG;QAAA,0EAA6G;QAAA,qEAAqC;QAAC,qEAAO;QAAA,4DAAI;QAAA,4DAAI;QAC/K,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,4EACE;QAAA,4EACE;QAAA,4EACE;QAAA,uEACA;QAAA,4EACE;QAAA,uEAAI;QAAA,kEAAK;QAAA,4DAAK;QACd,0EAAsB;QAAA,+EAAkB;QAAA,4DAAI;QAEpC,sEAAG;QAAA,0EAA0G;QAAA,qEAAqC;QAAC,qEAAO;QAAA,4DAAI;QAAA,4DAAI;QAC5K,4DAAM;QACR,4DAAM;QACR,4DAAM;QACF,4EACF;QAAA,4EACE;QAAA,uEACA;QAAA,4EACE;QAAA,uEAAI;QAAA,mEAAM;QAAA,4DAAK;QACf,0EAAsB;QAAA,8EAAiB;QAAA,4DAAI;QAEnC,sEAAG;QAAA,0EAA+G;QAAA,qEAAqC;QAAC,qEAAO;QAAA,4DAAI;QAAA,4DAAI;QACjL,4DAAM;QACR,4DAAM;QACR,4DAAM;QACF,4EACF;QAAA,4EACE;QAAA,uEACA;QAAA,4EACE;QAAA,uEAAI;QAAA,mEAAM;QAAA,4DAAK;QACf,0EAAsB;QAAA,+EAAkB;QAAA,4DAAI;QAEpC,sEAAG;QAAA,0EAA8G;QAAA,qEAAqC;QAAC,qEAAO;QAAA,4DAAI;QAAA,4DAAI;QAChL,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,+EACE;QAAA,0EAAiF;QAAA,qEAAsE;QAAA,uEAAU;QAAA,4DAAI;QAEvK,4DAAS;QACT,4DAAO;QACP,4DAAO;;6FDrJM,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAC+B;AAOvB;AAGL;AACS;AACA;AACH;AACK;AACN;AACW;;;;;;;;;;;;;;;;;;IChB/D,yEAEI;IAAA,oEACA;IAAA,gEACA;IAAA,qEAAI;IAAA,mEAAQ;IAAA,gEAAK;IAAA,uDAAyB;IAAA,4DAAK;IACnD,4DAAM;;;IAHgB,0DAAmF;IAAnF,sNAAmF;IAEpF,0DAAyB;IAAzB,yFAAyB;;;IAY1C,4EAAsC;IAAA,2EAAgB;IAAA,4DAAQ;;;IAiBlD,4EAC6J;IAAA,uDAAc;IAAA,4DAAY;;;IAA1B,0DAAc;IAAd,+EAAc;;;IAF/K,wEACI;IAAA,uJAC6J;IACjK,qEAAe;;;;IADH,0DAAoJ;IAApJ,0OAAoJ;;;IAS5J,uFACI;IAAA,uDACJ;IAAA,4DAAmB;;;IAF0B,2EAAa;IACtD,0DACJ;IADI,oIACJ;;;IAcA,4EACqI;IAAA,uDAAc;IAAA,4DAAY;;;IAA1B,0DAAc;IAAd,gFAAc;;;IAFvJ,wEACI;IAAA,wJACqI;IACzI,qEAAe;;;;IADH,0DAA4H;IAA5H,mNAA4H;;;IAehI,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF8C,8EAAgB;IACvE,0DACJ;IADI,uFACJ;;;IAUI,+EAA0C;IAAA,iEAAM;IAAA,4DAAW;;;;IAH/D,+EAEI;IAFM,kaAAwC;IAE9C,uDACA;IAAA,mKAA0C;IAC9C,4DAAW;;;;IAHD,yFAAuB;IAC7B,0DACA;IADA,qFACA;IAAU,0DAAiB;IAAjB,oFAAiB;;;;IALvC,qFACI;IAAA,wFACI;IAAA,wJAEI;IAGJ,wEACI;IAAA,4EAMJ;IANW,6YAAoD;IAA3D,4DAMJ;IAAA,4DAAQ;IACZ,4DAAgB;IACpB,4DAAiB;;;;IAd0C,0DAAmC;IAAnC,sFAAmC;IAO3E,0DAAmC;IAAnC,oGAAmC;;;IAqB9C,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFmD,8EAAgB;IAC5E,0DACJ;IADI,uFACJ;;;IAUI,+EAA0C;IAAA,iEAAM;IAAA,4DAAW;;;;IAH/D,+EAEI;IAFM,kaAAwC;IAE9C,uDACA;IAAA,mKAA0C;IAC9C,4DAAW;;;;IAHD,yFAAuB;IAC7B,0DACA;IADA,qFACA;IAAU,0DAAiB;IAAjB,oFAAiB;;;;IALvC,qFACI;IAAA,wFACI;IAAA,wJAEI;IAGJ,wEACI;IAAA,4EAMJ;IANW,6YAAoD;IAA3D,4DAMJ;IAAA,4DAAQ;IACZ,4DAAgB;IACpB,4DAAiB;;;;IAd0C,0DAAmC;IAAnC,sFAAmC;IAO3E,0DAAmC;IAAnC,oGAAmC;;;IAwB9C,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFwD,8EAAgB;IACjF,0DACJ;IADI,uFACJ;;;IAUI,+EAA0C;IAAA,iEAAM;IAAA,4DAAW;;;;IAH/D,+EAEI;IAFM,kaAAwC;IAE9C,uDACA;IAAA,mKAA0C;IAC9C,4DAAW;;;;IAHD,yFAAuB;IAC7B,0DACA;IADA,qFACA;IAAU,0DAAiB;IAAjB,oFAAiB;;;;IALvC,qFACI;IAAA,wFACI;IAAA,wJAEI;IAGJ,wEACI;IAAA,4EAMJ;IANW,6YAAoD;IAA3D,4DAMJ;IAAA,4DAAQ;IACZ,4DAAgB;IACpB,4DAAiB;;;;IAd0C,0DAAmC;IAAnC,sFAAmC;IAO3E,0DAAmC;IAAnC,oGAAmC;;;IAyB9C,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFmD,8EAAgB;IAC5E,0DACJ;IADI,uFACJ;;;IAeA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFyD,8EAAgB;IAClF,0DACJ;IADI,uFACJ;;;IAuBA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFuD,8EAAgB;IAChF,0DACJ;IADI,uFACJ;;;IAeA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFuD,8EAAgB;IAChF,0DACJ;IADI,uFACJ;;;IAeA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFsD,8EAAgB;IAC/E,0DACJ;IADI,uFACJ;;;IAsBA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFuD,8EAAgB;IAChF,0DACJ;IADI,uFACJ;;;IAeA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFuD,8EAAgB;IAChF,0DACJ;IADI,uFACJ;;;IAeA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFsD,8EAAgB;IAC/E,0DACJ;IADI,uFACJ;;;;IAlThB,2EAII;IAJE,gWAAwC;IAI1C,0EACI;IAAA,qFACI;IAAA,uEAEJ;IAAA,4DAAiB;IACjB,8IACI;IAGR,4DAAM;IAEN,0EACI;IAAA,sFAII;IAAA,sJACI;IAER,4DAAkB;IAItB,4DAAM;IAEN,0EACI;IAAA,qFACI;IAAA,wEAGJ;IAAA,4DAAiB;IACjB,gJACI;IAGR,4DAAM;IAEN,2EACI;IAAA,sFACI;IAAA,wEAQA;IAAA,8FACI;IAAA,4IACI;;IAER,4DAAmB;IACvB,4DAAiB;IACjB,8EAA0E;IAAlE,qUAAsB;IAA4C,6DAAC;IAAA,4DAAS;IAEpF,oJACI;IAiBR,4DAAM;IAEN,2EACI;IAAA,sFACI;IAAA,wEAOA;IAAA,8FACI;IAAA,4IACI;;IAER,4DAAmB;IACvB,4DAAiB;IACjB,8EAA2E;IAAnE,sUAAuB;IAA4C,6DAAC;IAAA,4DAAS;IAErF,oJACI;IAgBR,4DAAM;IAEN,iEACA;IAAA,4EAAU;IAAA,qEAAS;IAAA,4DAAW;IAC9B,iEACA;IAAA,2EACI;IAAA,sFACI;IAAA,wEAQA;IAAA,8FACI;IAAA,4IACI;;IAER,4DAAmB;IACvB,4DAAiB;IACjB,8EAA2E;IAAnE,sUAAuB;IAA4C,6DAAC;IAAA,4DAAS;IAErF,oJACI;IAgBR,4DAAM;IAEN,iEACA;IAAA,4EAAU;IAAA,6EAAiB;IAAA,4DAAW;IACtC,uEACI;IAAA,iEAEA;IAAA,4EACA;IAAA,sFACI;IAAA,wEAOA;IAAA,8FACI;IAAA,4IACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACH,gIACA;IAAA,4EACA;IAAA,sFACI;IAAA,wEAOA;IAAA,8FACI;IAAA,4IACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACP,4DAAM;IAEN,iEACA;IAAA,4EAAU;IAAA,6EAAiB;IAAA,4DAAW;IACtC,iEACA;IAAA,qEAAG;IAAA,oFAAwB;IAAA,4DAAI;IAC/B,uEACI;IAAA,iEAEA;IAAA,4EACA;IAAA,sFACI;IAAA,wEAOA;IAAA,8FACI;IAAA,4IACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACH,gIACA;IAAA,4EACA;IAAA,sFACI;IAAA,wEAOA;IAAA,8FACI;IAAA,4IACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACH,gIACA;IAAA,4EACA;IAAA,sFACI;IAAA,wEAOA;IAAA,8FACI;IAAA,4IACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACP,4DAAM;IAEN,iEAEA;IAAA,qEAAG;IAAA,uFAA2B;IAAA,4DAAI;IAClC,wEAEI;IAAA,kEACA;IAAA,6EACA;IAAA,uFACI;IAAA,yEAOA;IAAA,+FACI;IAAA,8IACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACH,iIACA;IAAA,6EACA;IAAA,uFACI;IAAA,yEAOA;IAAA,+FACI;IAAA,8IACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACH,iIACA;IAAA,6EACA;IAAA,uFACI;IAAA,yEAOA;IAAA,+FACI;IAAA,8IACI;;IAER,4DAAmB;IACvB,4DAAiB;IACrB,4DAAO;IACP,4DAAM;IAEN,4EACI;IAAA,4EACI;IAAA,+EACsB;IAAA,oEACtB;IAAA,4DAAS;IACb,4DAAM;IACV,4DAAM;IAGV,4DAAO;;;;;;;;;;;;;;IAjU4D,0FAAyB;IAStE,0DAA0D;IAA1D,4GAA0D;IAWlD,0DAA0B;IAA1B,mFAA0B;IAelC,0DAAkD;IAAlD,oGAAkD;IASpD,0DAAuB;IAAvB,wFAAuB;IAQf,0DAA8C;IAA9C,+JAA8C;IAOlD,0DAAkC;IAAlC,mIAAkC;IAuBtC,0DAAwB;IAAxB,yFAAwB;IAOhB,0DAAmD;IAAnD,oKAAmD;IAOvD,0DAAkC;IAAlC,mIAAkC;IAyBtC,0DAAwB;IAAxB,yFAAwB;IAQhB,0DAAwD;IAAxD,yKAAwD;IAO5D,0DAAkC;IAAlC,mIAAkC;IA2BtC,0DAAwB;IAAxB,yFAAwB;IAOhB,0DAAmD;IAAnD,oKAAmD;IAU3D,0DAAwB;IAAxB,yFAAwB;IAOhB,0DAAyD;IAAzD,0KAAyD;IAkBjE,2DAA2B;IAA3B,4FAA2B;IAOnB,0DAAuD;IAAvD,wKAAuD;IAU/D,0DAAuB;IAAvB,wFAAuB;IAOf,0DAAuD;IAAvD,wKAAuD;IAU/D,0DAA6B;IAA7B,8FAA6B;IAOrB,0DAAsD;IAAtD,uKAAsD;IAiB9D,0DAA2B;IAA3B,4FAA2B;IAOnB,0DAAuD;IAAvD,yKAAuD;IAU/D,0DAAuB;IAAvB,wFAAuB;IAOf,0DAAuD;IAAvD,yKAAuD;IAU/D,0DAA6B;IAA7B,8FAA6B;IAOrB,0DAAsD;IAAtD,wKAAsD;IAU9D,0DAA+B;IAA/B,gGAA+B;;ADzTpD,MAAM,wBAAwB;IAwFjC,YACW,eAAgC,EAC/B,EAAe,EACf,OAA2B,EAC5B,WAAwB,EACvB,MAAc;QAJf,oBAAe,GAAf,eAAe,CAAiB;QAC/B,OAAE,GAAF,EAAE,CAAa;QACf,YAAO,GAAP,OAAO,CAAoB;QAC5B,gBAAW,GAAX,WAAW,CAAa;QACvB,WAAM,GAAN,MAAM,CAAQ;QAvF1B,qBAAqB;QACrB,UAAK,GAAG,cAAc,CAAC;QACvB,iBAAY,GAAS,IAAI,CAAC;QAI1B,OAAO;QAEP,wBAAmB,GAAG;YAClB,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,EAAC;aACnD;YACD,aAAa,EAAE;gBACX,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,0BAA0B,EAAC;aAC1D;YACD,KAAK,EAAE;gBACH,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,kBAAkB,EAAC;aAClD;SACJ,CAAC;QACF,YAAO,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC5B,YAAO,GAAa,kEAAqB,CAAC;QAC1C,cAAS,GAAa,EAAE,CAAC;QAGzB,aAAQ,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7B,iBAAY,GAAa,mEAAsB,CAAC;QAChD,cAAS,GAAa,EAAE,CAAC;QAEzB,aAAQ,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7B,sBAAiB,GAAa,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACrD,cAAS,GAAa,EAAE,CAAC;QAEzB,aAAQ,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7B,iBAAY,GAAa,kEAAkB,CAAC;QAE5C,aAAQ,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7B,uBAAkB,GAAa,kEAAqB,CAAC;QAErD,gBAAW,GAAG,IAAI,0DAAW,EAAE,CAAC;QAChC,qBAAgB,GAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAE5C,YAAO,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC5B,qBAAgB,GAAa,4DAAe,CAAC;QAE7C,kBAAa,GAAG,IAAI,0DAAW,EAAE,CAAC;QAClC,0BAAqB,GAAa,gEAAoB,CAAC;QAEvD,gBAAW,GAAG,IAAI,0DAAW,EAAE,CAAC;QAIhC,YAAO,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC5B,qBAAgB,GAAa,4DAAe,CAAC;QAE7C,kBAAa,GAAG,IAAI,0DAAW,EAAE,CAAC;QAClC,0BAAqB,GAAa,gEAAoB,CAAC;QAGvD,kDAAkD;QAClD,YAAO,GAAG,IAAI,CAAC;QACf,eAAU,GAAG,KAAK,CAAC;QACnB,cAAS,GAAG,IAAI,CAAC;QACjB,cAAS,GAAG,IAAI,CAAC;QACjB,gBAAW,GAAG,IAAI,CAAC;QACV,uBAAkB,GAAa,CAAC,2DAAK,EAAE,2DAAK,CAAC,CAAC;QAavD,oDAAoD;QAEpD,WAAM,GAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IAU/C,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;aAC3C,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAClD,CAAC;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY;aACjD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CACvD,CAAC;QACN,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY;aACtD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAC5D,CAAC;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY;aACjD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CACvD,CAAC;QACN,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY;aACvD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAC7D,CAAC;QACN,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY;aACxD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAC3D,CAAC;QACN,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY;aACxD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAC3D,CAAC;QACN,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;aACpD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAC3D,CAAC;QACN,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;aACpD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAC3D,CAAC;QACN,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY;aACzD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAChE,CAAC;QACN,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY;aACzD,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAChE,CAAC;QAGN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpC,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;gBACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;gBAEhC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;gBACjD,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACL,CAAC,CAAC,CAAC;IAGP,CAAC;IAED,UAAU;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,sDAAsD;YACtD,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,GAAG,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9B,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,QAAQ,EAAE,CAAC,EAAE,CAAC;SAEjB,CAAC,CAAC;IACP,CAAC;IAED,GAAG,CAAC,KAAwB,EAAE,KAAK;QAC/B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,YAAY;QACZ,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;YACtB,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,EAAC,CAAC,CAAC;SACpC;QAED,wBAAwB;QACxB,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;SACpB;IACL,CAAC;IAGD,MAAM,CAAC,GAAc,EAAE,KAAK;QACxB,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAEjC,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC1B;IACL,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC7B,CAAC;IAED,WAAW;QACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC9B,CAAC;IAED,WAAW;QACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC9B,CAAC;IAED,WAAW;QACP,4FAA4F;QAC5F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,kDAAkD;YAClD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChD,CAAC,CAAC;IACP,CAAC;IAGD,kBAAkB,CAAC,QAAQ;QAErB,IAAI,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE;YAC1C,OAAO,EAAE,IAAI,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QACL,OAAO,aAAa,CAAC;IACvB,CAAC;IAGL,QAAQ,CAAC,KAAK;QAEV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEzC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACrC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAErC,KAAK,CAAC,WAAW,GAAG,EAAC,UAAU,EAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,EAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;QAC1H,KAAK,CAAC,WAAW,GAAG,EAAC,UAAU,EAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,EAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;QAE1H,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC;aAC/G,IAAI,CACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/B,sBAAsB;QAC1B,CAAC,CACJ;IACT,CAAC;IAGD,cAAc,CAAC,KAAK;QAChB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACnB,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,QAAQ,GAAG,iBAAiB,CAAC,EAAE,CAAC;QACtC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC3C,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI;aACC,eAAe,EAAE;aACjB,IAAI,CACD,+DAAQ,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC7B,IAAI,GAAG,EAAE;oBACL,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;oBACpB,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,GAAG,CAAC;iBAC1C;gBACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE/B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CACL;aACA,SAAS,CAAC,GAAG,CAAC,EAAE;YACb,IAAI,GAAG,EAAE;gBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACpB;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAEO,OAAO,CAAC,KAAa,EAAE,OAAO;QAClC,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,IAAG,OAAO,EAAE;YACR,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;SAC/E;IAEL,CAAC;;gGA5SQ,wBAAwB;wGAAxB,wBAAwB;QCzBrC,yEACI;QAAA,oHAEI;QAIJ,yEACI;QAAA,8EASA;QARO,uJAAU,0BAAsB,IAAC;QADxC,4DASA;QAAA,wHAAsC;QAC1C,4DAAM;QACV,4DAAM;QAGN,yEACI;QAAA,yEACI;QAAA,yHAII;QA8TR,4DAAM;QACV,4DAAM;;QA1VG,0DAAmB;QAAnB,iFAAmB;QAgBb,0DAAmB;QAAnB,iFAAmB;QAOqB,0DAAmB;QAAnB,iFAAmB;;6FDC7D,wBAAwB;cALpC,uDAAS;eAAC;gBACP,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACnD;;;;;;;;;;;;;;AExBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAE+B;AAEvB;AACI;;;;;;;;;;;;;;;ICYhD,4EACwI;IAAA,uDAAc;IAAA,4DAAY;;;IAA1B,0DAAc;IAAd,+EAAc;;;IAF1J,wEACI;IAAA,wIACwI;IAC5I,qEAAe;;;;IADH,0DAA+H;IAA/H,qNAA+H;;;IASvI,uFACI;IAAA,uDACJ;IAAA,4DAAmB;;;IAF0B,0EAAa;IACtD,0DACJ;IADI,mFACJ;;;IAsBA,4EACqI;IAAA,uDAAc;IAAA,4DAAY;;;IAA1B,0DAAc;IAAd,+EAAc;;;IAFvJ,wEACI;IAAA,yIACqI;IACzI,qEAAe;;;;IADH,0DAA4H;IAA5H,kNAA4H;;;IAehI,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF8C,6EAAgB;IACvE,0DACJ;IADI,sFACJ;;AD1DhB,mCAAmC;AAO5B,MAAM,gBAAgB;IA0BzB,YACW,eAAgC,EAC/B,EAAe,EACf,OAA2B,EAC5B,WAAwB,EACvB,MAAc;QAJf,oBAAe,GAAf,eAAe,CAAiB;QAC/B,OAAE,GAAF,EAAE,CAAa;QACf,YAAO,GAAP,OAAO,CAAoB;QAC5B,gBAAW,GAAX,WAAW,CAAa;QACvB,WAAM,GAAN,MAAM,CAAQ;QA5B1B,wBAAmB,GAAG;YAClB,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,EAAC;aACnD;YAED,KAAK,EAAE;gBACH,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,kBAAkB,EAAC;aAClD;SACJ,CAAC;QAEF,qBAAqB;QACrB,UAAK,GAAG,cAAc,CAAC;QACvB,iBAAY,GAAS,IAAI,CAAC;QAI1B,OAAO;QAEP,YAAO,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC5B,YAAO,GAAa,kEAAqB,CAAC;QAE1C,WAAM,GAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IAS/C,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;aAC3C,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CACpC,CAAC;QAEN,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;QAC/D,6CAA6C;QAC7C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAED,UAAU;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,GAAG,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9B,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACtC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACP,4FAA4F;QAC5F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,qDAAqD;YACrD,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChD,CAAC,CAAC;IACP,CAAC;IAED,QAAQ,CAAC,KAAK;QACV,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;aACnE,IAAI,CACD,GAAG,CAAC,EAAE;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,WAAW,EAAE,CAAC;QAEvB,CAAC,CACJ;IACT,CAAC;IAED,cAAc,CAAC,KAAK;QAChB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACnB,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,QAAQ,GAAG,iBAAiB,CAAC,EAAE,CAAC;QACtC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC3C,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI;aACC,eAAe,EAAE;aACjB,IAAI,CACD,+DAAQ,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC7B,IAAI,GAAG,EAAE;oBACL,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;iBACvB;gBACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE/B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CACL;aACA,SAAS,CAAC,GAAG,CAAC,EAAE;YACb,IAAI,GAAG,EAAE;gBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACpB;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAEO,OAAO,CAAC,KAAa;QACzB,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACrF,CAAC;;gFA7GQ,gBAAgB;gGAAhB,gBAAgB;QClB7B,yEACI;QAAA,8EAOJ;QANW,+IAAU,0BAAsB,IAAC;QADxC,4DAOJ;QAAA,4DAAM;QAEN,0EAEI;QAFE,4IAAY,mCAA2B,IAAC;QAE1C,yEACI;QAAA,oFACI;QAAA,sEACJ;QAAA,4DAAiB;QACjB,8HACI;QAGR,4DAAM;QAEN,yEACI;QAAA,qFAII;QAAA,wIACI;QAER,4DAAkB;QAItB,4DAAM;QAWN,0EACI;QAAA,qFACI;QAAA,wEAEJ;QAAA,4DAAiB;QACjB,gIACI;QAGR,4DAAM;QAEN,0EACI;QAAA,sFACI;QAAA,wEAQA;QAAA,8FACI;QAAA,6HACI;;QAER,4DAAmB;QACvB,4DAAiB;QACrB,4DAAM;QAEN,2EACI;QAAA,2EACI;QAAA,8EACsB;QAAA,mEACtB;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QAEV,4DAAO;;;QAxEwC,0DAAyB;QAAzB,sFAAyB;QAMlD,0DAAmD;QAAnD,iGAAmD;QAW3C,0DAA0B;QAA1B,+EAA0B;QAuBlC,0DAAkD;QAAlD,gGAAkD;QASpD,0DAAuB;QAAvB,oFAAuB;QAQf,0DAA8C;QAA9C,0JAA8C;QAStD,0DAA+B;QAA/B,4FAA+B;;6FD1DtC,gBAAgB;cAL5B,uDAAS;eAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aAC1C;;;;;;;;;;;;;;AEjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;;;;;;;;;;;;ICGtD,sEACI;IAAA,iFACI;IAAA,yEACI;IAAA,uEACI;IAAA,oEAGJ;IAAA,4DAAI;IAOR,4DAAM;IAEN,0EAAqB;IAAA,uDAAoB;IAAA,4DAAO;IAChD,6EAEE;IAAA,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAChC,4DAAS;IACT,sFACE;IAAA,8EACE;IADoB,8TAA4B;IAChD,4EAAU;IAAA,gEAAI;IAAA,4DAAW;IACzB,wEAAM;IAAA,mEAAO;IAAA,4DAAO;IACtB,4DAAS;IACT,8EACE;IADoB,kSAAS,4BAAqB,IAAC;IACnD,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,wEAAM;IAAA,kEAAM;IAAA,4DAAO;IACrB,4DAAS;IACX,4DAAW;IACf,4DAAc;IAClB,4DAAM;;;;IA5Be,0DAA0B;IAA1B,+FAA0B;IAE1B,+OAA4G;IAUpG,0DAAoB;IAApB,oFAAoB;IACjB,0DAA0B;IAA1B,kFAA0B;;ADVvD,MAAM,mBAAmB;IAO9B,YACU,KAAqB,EACtB,WAAwB,EACxB,MAAc,EACd,MAAc;QAHb,UAAK,GAAL,KAAK,CAAgB;QACtB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAQ;QATtB,oBAAe,GAAG;YACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;QACtE,CAAC,CAAC;IAQI,CAAC;IAEL,QAAQ;IACR,CAAC;;sFAfU,mBAAmB;mGAAnB,mBAAmB;QCVhC,uEACA;QAAA,uEACA;QAAA,yEACI;QAAA,gHACI;;QAgCA,4EAGA;QAAA,oEACA;QAAA,4DAAS;QACb,2EAA+B;QACnC,4DAAM;QAEN,yEACQ;QAAA,yEACI;QAAA,4EAA+B;QACnC,4DAAM;QACd,4DAAM;QACN,4DAAO;QACP,4DAAO;;QA/CE,0DAAyC;QAAzC,wJAAyC;;6FDOrC,mBAAmB;cAN/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;;;;;;;ICaxD,0EACE;IAAA,0EACE;IAAA,0EACE;IAAA,0EACE;IAAA,qEAEF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IALO,0DAA0B;IAA1B,gGAA0B;IACZ,yMAAoE;;ADTxF,MAAM,gBAAgB;IAQ3B,YACW,WAAwB,EACxB,MAAc,EACd,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAQ;QARzB,YAAO,GAAG,KAAK,CAAC;IAQY,CAAC;IAN3B,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAMH,QAAQ;IACR,CAAC;;gFAdU,gBAAgB;gGAAhB,gBAAgB;QCG7B,wEAAe;QAAA,uEAAY;QAAA,4DAAK;QAChC,4GACE;;QAWF,yEACE;QAAA,2EACE;QAAA,iFACF;QAAA,4DAAQ;QACR,sEACF;QAAA,4DAAM;QAEN,uEACE;QACA,yEACE;QAAA,4EAAmB;QAAA,4EAAgB;QAAA,4DAAQ;QAC3C,uEAEF;QAAA,4DAAM;QAGN,4EAAoB;QAAA,2EAAc;QAAA,4DAAQ;QAC1C,0EACE;QAAA,uEACA;QAAA,4EAAkD;QAAA,kEAAM;QAAA,4DAAQ;QAClE,4DAAM;QACN,0EACE;QAAA,wEACA;QAAA,6EAAkD;QAAA,gEAAI;QAAA,4DAAQ;QAChE,4DAAM;QACN,0EACE;QAAA,wEACA;QAAA,6EAAkD;QAAA,iEAAK;QAAA,4DAAQ;QACjE,4DAAM;QACN,0EACE;QAAA,wEACA;QAAA,6EAAkD;QAAA,kEAAM;QAAA,4DAAQ;QAClE,4DAAM;QAGN,0EACE;QAAA,6EAAqB;QAAA,0FAA8B;QAAA,4DAAQ;QAC3D,8EACE;QAAA,0EAAQ;QAAA,iEAAK;QAAA,4DAAS;QACtB,0EAAQ;QAAA,iEAAK;QAAA,4DAAS;QACtB,0EAAQ;QAAA,iEAAK;QAAA,4DAAS;QACtB,0EAAQ;QAAA,iEAAK;QAAA,4DAAS;QACtB,0EAAQ;QAAA,iEAAK;QAAA,4DAAS;QACtB,0EAAQ;QAAA,iEAAK;QAAA,4DAAS;QACtB,0EAAQ;QAAA,iEAAK;QAAA,4DAAS;QACtB,0EAAQ;QAAA,+DAAG;QAAA,4DAAS;QACtB,4DAAS;QACX,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,6EAAsB;QAAA,sEAAU;QAAA,4DAAQ;QACxC,wEACF;QAAA,4DAAM;QAEN,2EACE;QAAA,6EAAuB;QAAA,iEAAK;QAAA,4DAAQ;QACpC,8EACE;QAAA,8EAAmC;QAAA,qEAAS;QAAA,4DAAS;QACrD,0EAAQ;QAAA,+DAAG;QAAA,4DAAS;QACtB,4DAAS;QACX,4DAAM;QAGN,2EACE;QAAA,6EAAyB;QAAA,+DAAG;QAAA,4DAAQ;QACpC,wEACF;QAAA,4DAAM;QACR,4DAAM;QAGN,0EACE;QAAA,2EACE;QAAA,wEACA;QAAA,6EACE;QAAA,uGACF;QAAA,4DAAQ;QACV,4DAAM;QACR,4DAAM;QAGN,0EACE;QAAA,6EAAsB;QAAA,sFACtB;QAAA,4DAAQ;QACR,2EAE8B;QAChC,4DAAM;QAEN,8EACE;QAAA,8EACF;QAAA,4DAAS;QAEX,4DAAO;;QAzGF,0DAAyC;QAAzC,wJAAyC;;6FDJjC,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;;;;;;;;;;;;;;AER+C;AAGG;AAGd;;;;;;;;;;ICM/B,8EAEE;IADQ,uWAA4B,OAAO,KAAE;IAC7C,uDACF;IAAA,4DAAW;;;;IAH4B,+GAA0C;IAE/E,0DACF;IADE,sFACF;;;;IAkBA,8EAEE;IADQ,wWAA4B,OAAO,KAAE;IAC7C,uDACF;IAAA,4DAAW;;;;IAH4B,+GAA0C;IAE/E,0DACF;IADE,sFACF;;;;IAgBA,8EAGE;IADQ,wWAA4B,OAAO,KAAE;IAC7C,uDACF;IAAA,4DAAW;;;;IAJ4B,+GAA0C;IAG/E,0DACF;IADE,sFACF;;ADtCC,MAAM,eAAe;IAsB1B,YAAmB,eAAgC,EAChC,WAAwB,EACvB,EAAe;QAFhB,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACvB,OAAE,GAAF,EAAE,CAAa;QAvBnC,mBAAc,GAAG,KAAK,CAAC;QAEvB,kDAAkD;QAClD,YAAO,GAAG,IAAI,CAAC;QACf,eAAU,GAAG,KAAK,CAAC;QACnB,cAAS,GAAG,IAAI,CAAC;QACjB,cAAS,GAAG,IAAI,CAAC;QACjB,gBAAW,GAAG,IAAI,CAAC;QACnB,4DAA4D;QACnD,uBAAkB,GAAa,CAAC,2DAAK,EAAE,2DAAK,CAAC,CAAC;QAIvD,YAAO,GAAgB,EAAE,CAAC;QAC1B,YAAO,GAAgB,EAAE,CAAC;QAC1B,YAAO,GAAgB,EAAE,CAAC;QAE1B,gBAAW,GAAG,EAAC,KAAK,EAAE,IAAI,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,GAAG,EAAE,EAAC,CAAC;QACrE,cAAS,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QA+C9B,eAAU,GAAG,CAAC,IAAS,EAAE,QAAQ,EAAE,EAAE;YACnC,MAAM,OAAO,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAChE,MAAM,UAAU,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAEtE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QAClE,CAAC;IA/CqC,CAAC;IAEjC,QAAQ;;YACZ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACtC,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;YACjD,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACzE,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACzE,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAEzE,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;aAC1C;YAED,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;aAC1C;YAED,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;aAC1C;QAGH,CAAC;KAAA;IAEK,UAAU;;YACV,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,EAAE;iBAC9D,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;QAEhD,CAAC;KAAA;IAGH,QAAQ,CAAC,GAAG,EAAE,IAAI;QACZ,mCAAmC;QACnC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACvE,CAAC;;8EAhEQ,eAAe;+FAAf,eAAe;QClB5B,qEAAI;QAAA,2FAAgC;QAAA,4DAAK;QACzC,gEAGA;QAAA,gFACA;QACA,sFACE;QAAA,6FACE;QAAA,4EACF;QAAA,4DAA6B;QAE3B,sFACE;QAAA,qHAEE;QAEJ,4DAAgB;QAElB,kFACF;QAAA,6EACmD;QAAzC,wIAAS,aAAS,CAAC,wBAAoB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAChE,4DAAiB;QACnB,4DAAsB;QAEtB,iEAGE;QAAA,uFACA;QAAA,8FACE;QAAA,6EACF;QAAA,4DAA6B;QAE3B,uFACE;QAAA,uHAEE;QAEJ,4DAAgB;QAElB,kFACA;QAAA,6EACiD;QAAzC,wIAAS,aAAS,CAAC,wBAAoB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAChE,4DAAiB;QACnB,4DAAsB;QACpB,iEAEF;QAAA,uFACE;QAAA,8FACE;QAAA,2EACF;QAAA,4DAA6B;QAE3B,uFACE;QAAA,uHAGE;QAEJ,4DAAgB;QAElB,kFACE;QAAA,6EAC+C;QAAzC,wIAAS,aAAS,CAAC,wBAAoB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAChE,4DAAiB;QACnB,4DAAsB;QAKtB,4DAAgB;QAYhB,iEAGA;;QAxE+D,0DAAiB;QAAjB,0EAAiB;QAChE,0DAA4B;QAA5B,8EAA4B;QAoBmB,0DAAiB;QAAjB,0EAAiB;QAChE,0DAA4B;QAA5B,8EAA4B;QAkBmB,0DAAiB;QAAjB,0EAAiB;QAChE,0DAA4B;QAA5B,8EAA4B;;6FDlC/B,eAAe;cAN3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2F;;;;;;;ICA3F,sEACI;IAAA,2EACI;IAAA,kFACI;IAAA,iFAAgB;IAAA,oEAAiF;IAAjG,4DAAgB;IAChB,sEAAK;IAAA,uDAA4B;IAAA,4DAAM;IAC3C,4DAAkB;IAClB,mFACI;IAAA,sEAAK;IAAA,uDAAgC;IAAA,4DAAM;IAC3C,uEAAK;IAAA,wDAA0B;IAAA,4DAAM;IACrC,uEAAK;IAAA,wDAAkC;IAAA,4DAAM;IACjD,4DAAmB;IACvB,4DAAW;IAEf,4DAAM;;;IAV2B,0DAAqC;IAArC,+JAAqC;IACrD,0DAA4B;IAA5B,sGAA4B;IAG5B,0DAAgC;IAAhC,0GAAgC;IAChC,0DAA0B;IAA1B,oGAA0B;IAC1B,0DAAkC;IAAlC,4GAAkC;;ADK5C,MAAM,oBAAoB;IAG/B,YACU,KAAqB,EACtB,EAAe;QADd,UAAK,GAAL,KAAK,CAAgB;QACtB,OAAE,GAAF,EAAE,CAAa;IACnB,CAAC;IAEN,QAAQ;QACN,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;;wFAZU,oBAAoB;oGAApB,oBAAoB;QCdjC,iHACI;;;QADC,6IAA+B;;6FDcvB,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAoBT;AACY;AACE;AACE;;;;;;;;;AAdlD,MAAM,eAAe;IAE1B;IACE,sGAAsG;IAC/F,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC3B,CAAC;IAEP,QAAQ,KAAK,CAAC;;8EAPH,eAAe;+FAAf,eAAe;;QCT5B,uEAGE;QAAA,0EACE;QAAA,iFACF;QAAA,4EAA2D;QAAA,kEAAO;QAAA,4DAAS;QAE7E,4DAAc;QAGd,2EACE;QAAA,mFAEI;QAAA,oFAAwC;QAAA,sEAAW;QAAA,4DAAiB;QACpE,4EAEQ;QAFqC,uIAAS,mCAA+B,IAAC;QAE9E,gFAAmB;QAAA,4DAAS;QAClC,4DAAmB;QAC3B,4DAAW;QACL,4EACJ;QAAA,oFACI;QAAA,qFAAwC;QAAA,uEAAW;QAAA,4DAAiB;QACpE,kFACE;QAAA,0EACF;QAAA,4DAAiB;QAEjB,kFACE;QAAA,+EAGF;QAFE,2WAAe,4CAAuD,IAAC;QADvE,4DAGF;QAAA,4DAAiB;QACjB,8EAEQ;QADA,gWAAS,4CAAuD,IAAC;QACjE,kEAAK;QAAA,4DAAS;QACtB,oFAEI;QAAA,8EAAsD;QAAA,2EAAe;QAAA,4DAAS;QAClF,4DAAmB;QACvB,4DAAmB;QACrB,4DAAW;QAGX,4DAAO;QACP,4DAAO;;6FDlCM,eAAe;cAN3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;AAkBD,MAAM,OAAO,GAAG;IACd,oEAAa;IACb,sEAAc;IACd,wEAAe;CAChB,CAAC;AAMK,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAHhB,OAAO;QANhB,oEAAa;QACb,sEAAc;QACd,wEAAe;mIAOJ,cAAc,cATzB,oEAAa;QACb,sEAAc;QACd,wEAAe,aAFf,oEAAa;QACb,sEAAc;QACd,wEAAe;6FAOJ,cAAc;cAJ1B,sDAAQ;eAAC;gBACR,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;aACjB;;;;;;;;;;;;;;AElCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;AAQ3C,MAAM,eAAe;IAE1B,YACS,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC7B,CAAC;IAEL,QAAQ;IACR,CAAC;;8EAPU,eAAe;+FAAf,eAAe;;QCR5B,uEAEE;QAAA,0EACE;QAAA,iFACF;QAAA,4EAA2D;QAAA,kEAAO;QAAA,4DAAS;QAC7E,4DAAc;QAGd,2EACE;QAAA,mFACI;QAAA,oFAAwC;QAAA,sEAAW;QAAA,4DAAiB;QACpE,4EACQ;QADqC,uIAAS,8BAA0B,IAAC;QACzE,kFAAqB;QAAA,4DAAS;QACpC,4DAAmB;QAC3B,4DAAW;QACL,4EACJ;QAAA,oFACI;QAAA,qFAAwC;QAAA,8EAAkB;QAAA,4DAAiB;QAC3E,kFACE;QAAA,0EACF;QAAA,4DAAiB;QAElB,kFACG;QAAA,+EAGF;QAFG,6WAAe,6CAAuD,IAAC;QADxE,4DAGF;QAAA,4DAAiB;QACjB,6EAEQ;QADA,kWAAS,6CAAuD,IAAC;QACjE,oEAAO;QAAA,4DAAS;QACxB,oFAEI;QAAA,8EAAwD;QAAA,oFAAwB;QAAA,4DAAS;QAC7F,4DAAmB;QACvB,4DAAmB;QACrB,4DAAW;QAGX,4DAAO;QACP,4DAAO;;6FD/BM,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,EAAE,gCAAgC,CAAC;aACxE;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACmB;AACT;AACE;AACN;AACA;AACE;AACI;AACiB;AACrB;AACF;AACe;AACX;AACY;AAChB;AACQ;;AAE7D,4DAA4D;AAE5D,MAAM,QAAQ,GAAG;IACf,0DAAW;IACX,kEAAmB;IACnB,0EAAgB;IAChB,uEAAc;IACd,qEAAa;IACb,oEAAa;IACb,oEAAa;IACb,wEAAe;IACf,sEAAc;IACd,0EAAgB;IAChB,oFAAoB;IACpB,yEAAe;IACf,qFAAqB;IACrB,qEAAa;IACb,8EAAiB;IACjB,mBAAmB;IACnB,2FAAwB;CAAC,CAAC;AAQrB,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAJhB,CAAC,4DAAY;YAClB,QAAQ;SACX;QAtBD,0DAAW;QACX,kEAAmB;QACnB,0EAAgB;QAChB,uEAAc;QACd,qEAAa;QACb,oEAAa;QACb,oEAAa;QACb,wEAAe;QACf,sEAAc;QACd,0EAAgB;QAChB,oFAAoB;QACpB,yEAAe;QACf,qFAAqB;QACrB,qEAAa;QACb,8EAAiB;QACjB,mBAAmB;QACnB,2FAAwB;mIAQb,cAAc,cAJf,4DAAY;QApBtB,0DAAW;QACX,kEAAmB;QACnB,0EAAgB;QAChB,uEAAc;QACd,qEAAa;QACb,oEAAa;QACb,oEAAa;QACb,wEAAe;QACf,sEAAc;QACd,0EAAgB;QAChB,oFAAoB;QACpB,yEAAe;QACf,qFAAqB;QACrB,qEAAa;QACb,8EAAiB;QACjB,mBAAmB;QACnB,2FAAwB,aAhBxB,0DAAW;QACX,kEAAmB;QACnB,0EAAgB;QAChB,uEAAc;QACd,qEAAa;QACb,oEAAa;QACb,oEAAa;QACb,wEAAe;QACf,sEAAc;QACd,0EAAgB;QAChB,oFAAoB;QACpB,yEAAe;QACf,qFAAqB;QACrB,qEAAa;QACb,8EAAiB;QACjB,mBAAmB;QACnB,2FAAwB;6FAQb,cAAc;cAN1B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,QAAQ,CAAC;gBACnB,OAAO,EAAE,CAAC,4DAAY;oBAClB,QAAQ;iBACX;aACF;;;;;;;;;;;;;;AC5CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAQK;;;;AAKzC,MAAM,SAAS;IAEpB,YACS,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACnB,CAAC;IAEL,WAAW,CAAC,IAAI,EAAE,KAAK;QACrB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAChC,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,qBAAqB;QAC1C,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACb,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;kEAlBU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEvD,aAAa;AACwD;AACiB;AACX;AACA;AAEA;AAEG;AAET;AACqB;AAClB;AAGkC;AACvB;AAEnF,oCAAoC;AACsB;;;AAE1D,sCAAsC;AACtC,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACpD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,mFAAe,EAAE,WAAW,EAAE,EAAE,EAAC;IAC5D,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,mFAAe,EAAE,WAAW,EAAE,EAAE,EAAC;IAC9D,8EAA8E;IAC9E,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,mHAAwB,EAAE,WAAW,EAAE,CAAC,mEAAS,CAAC,EAAC;IAClF,6EAA6E;IAE7E,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,iFAAc,EAAC;IAC3C,4EAA4E;IAE5E,EAAE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,+FAAmB;QAC9B,WAAW,EAAE,CAAC,mEAAS,CAAC;QACxB,QAAQ,EAAC;YACP,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAe,EAAC;YACvC,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sFAAgB,EAAC;YAC/C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4FAAiB,EAAC;YAClD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,6EAAa;gBAC3C,QAAQ,EAAC;oBACL,EAAE,IAAI,EAAE,kBAAkB;wBACxB,SAAS,EAAE,kGAAoB;qBAChC;iBACJ;aACD;SACH;KACF;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DkD;AAGd;AAKC;AACgB;;;;;AAM/C,MAAM,WAAW;IAIpB,iBAAiB;IAEnB,YACU,MAAuB,EAAE,+BAA+B;IACxD,GAAqB,EAAG,2BAA2B;IACnD,MAAc,EACf,MAAc,CAAU,iDAAiD;;QAHxE,WAAM,GAAN,MAAM,CAAiB;QACvB,QAAG,GAAH,GAAG,CAAkB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACf,WAAM,GAAN,MAAM,CAAQ;QAErB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CACrC,gEAAS,CAAC,IAAI,CAAC,EAAE;YACf,IAAI,IAAI,EAAE;gBACR,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAO,SAAS,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC;aAC/D;iBAAM;gBACL,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;aACjB;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAC9C,CAAC;IAED,8BAA8B;IACxB,MAAM,CAAC,KAAK,EAAE,QAAQ;;YAC1B,MAAM,QAAQ,GAAG,MAAM,6CAAa,EAAE,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC;iBAC/E,KAAK,CAAC,UAAS,KAAK;gBACnB,IAAI,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;gBACjC,KAAK,CAAC,YAAY,CAAC,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YACL,kDAAkD;YAClD,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;YAC1C,uCAAuC;YACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC;YACnD,kCAAkC;QACpC,CAAC;KAAA;IAED,8BAA8B;IACxB,MAAM,CAAC,KAAK,EAAE,QAAQ;;YAC1B,MAAM,QAAQ,GAAG,MAAM,6CAAa,EAAE,CAAC,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC;iBACnF,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC;iBACD,KAAK,CAAC,UAAS,KAAK;gBACnB,IAAI,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;gBACjC,KAAK,CAAC,YAAY,CAAC,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YACL,kDAAkD;YAClD,6CAA6C;YAC7C,uCAAuC;YACvC,sCAAsC;YACtC,sDAAsD;YACtD,kCAAkC;QACpC,CAAC;KAAA;IAED,wBAAwB;IAClB,YAAY;;YAChB,0CAA0C;YAC1C,MAAM,QAAQ,GAAG,IAAI,6CAAa,CAAC,oBAAoB,EAAE,CAAC;YAC1D,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC7B,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;KAAA;IAEC,wBAAwB;IACpB,iBAAiB;;YACrB,0CAA0C;YAC1C,MAAM,QAAQ,GAAG,IAAI,6CAAa,CAAC,oBAAoB,EAAE,CAAC;YAC1D,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/B,4CAA4C;QAC9C,CAAC;KAAA;IAED,2BAA2B;IACnB,WAAW,CAAC,IAAI;QACtB,MAAM,OAAO,GAAkC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACjF,MAAM,QAAQ,GAAS;YACrB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,OAAO,EAAE;gBACP,eAAe,EAAE,IAAI,CAAC,QAAQ;gBAC9B,IAAI,EAAE,IAAI,CAAC,WAAW;aACvB;YACD,UAAU,EAAE,EAAE;SACf,CAAC;QACF,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE;YAC3B,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;IACL,CAAC;IAEK,OAAO;;YACX,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpC,CAAC;KAAA;;sEA1GU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAHV,MAAM;6FAGP,WAAW;cAJvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;;;;;;ACb0C;AAIF;AACO;AACK;;;;;AAK9C,MAAM,WAAW;IAEtB,YACU,GAAqB,EACrB,IAAiB,EACjB,MAAc;QAFd,QAAG,GAAH,GAAG,CAAkB;QACrB,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAQ;IACrB,CAAC;IAEJ,GAAG,CAAC,MAAM;QACR,OAAO,IAAI,CAAC,GAAG;aACZ,UAAU,CAAM,OAAO,CAAC;aACxB,GAAG,CAAC,MAAM,CAAC;aACX,eAAe,EAAE;aACjB,IAAI,CACH,0DAAG,CAAC,GAAG,CAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC1C,2BAA2B;YAC3B,uBAAS,EAAE,EAAE,GAAG,CAAC,OAAO,CAAC,EAAE,IACf,GAAG,CAAC,OAAO,CAAC,IAAI,EAAQ,EACjC;QACL,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,gBAAgB,CAAC,MAAM;QACnB,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC,GAAG;aACd,UAAU,CAAM,OAAO,CAAC;aACxB,GAAG,CAAC,MAAM,CAAC;aACX,eAAe,EAAE;aACjB,IAAI,CACH,0DAAG,CAAC,GAAG,CAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC1C,2BAA2B;YAC3B,uBAAS,EAAE,EAAE,GAAG,CAAC,OAAO,CAAC,EAAE,IACf,GAAG,CAAC,OAAO,CAAC,IAAI,EAAQ,EACjC;QACL,CAAC,CAAC,CACH,CAAC;IACL,CAAC;IAGF,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CACzB,gEAAS,CAAC,IAAI,CAAC,EAAE;YACf,OAAO,IAAI,CAAC,GAAG;iBACZ,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;iBACxE,eAAe,EAAE;iBACjB,IAAI,CACH,0DAAG,CAAC,OAAO,CAAC,EAAE;gBACZ,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;oBACrB,MAAM,IAAI,GAAW,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;oBAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;oBAC5B,uBAAS,EAAE,IAAK,IAAI,EAAG;gBACzB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CACH,CAAC;QACN,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEK,MAAM;;YACV,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAE1C,MAAM,IAAI,GAAG;gBACX,GAAG;gBACH,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;gBACrB,YAAY,EAAE,CAAC;gBACf,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,UAAU,EAAE,EAAE;gBACd,aAAa,EAAE,EAAE;aAClB,CAAC;YAEF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QACpD,CAAC;KAAA;IAEK,WAAW,CAAC,MAAM,EAAE,OAAO;;YAC/B,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAE1C,MAAM,IAAI,GAAG;gBACX,GAAG;gBACH,OAAO;gBACP,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;aACtB,CAAC;YAEF,IAAI,GAAG,EAAE;gBACP,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACrD,OAAO,GAAG,CAAC,MAAM,CAAC;oBAChB,QAAQ,EAAE,sDAAS,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC;iBAChD,CAAC,CAAC;aACJ;QACH,CAAC;KAAA;IAEK,aAAa,CAAC,IAAI,EAAE,GAAG;;YAC3B,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAE1C,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACtD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE;gBACvC,oBAAoB;gBACpB,OAAO,GAAG,CAAC,IAAI,CAAC;gBAChB,OAAO,GAAG,CAAC,MAAM,CAAC;oBAChB,QAAQ,EAAE,sDAAS,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC;iBAChD,CAAC,CAAC;aACJ;QACH,CAAC;KAAA;IAED,SAAS,CAAC,KAAsB;QAC9B,IAAI,IAAI,CAAC;QACT,MAAM,QAAQ,GAAG,EAAE,CAAC;QAEpB,OAAO,KAAK,CAAC,IAAI,CACf,gEAAS,CAAC,CAAC,CAAC,EAAE;YACZ,kBAAkB;YAClB,IAAI,GAAG,CAAC,CAAC;YACT,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAE7D,2BAA2B;YAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,YAAY,EAAE,CAC1C,CAAC;YAEF,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,0DAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,+CAAE,CAAC,EAAE,CAAC,CAAC;QAC5D,CAAC,CAAC,EACF,0DAAG,CAAC,GAAG,CAAC,EAAE;YACR,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAO,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;gBACpC,uCAAY,CAAC,KAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAG;YACzC,CAAC,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;sEAxIU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;;;ACVwC;AAGL;AACY;;;;AAUzC,MAAM,eAAe;IAIxB,YAAmB,EAAoB,EACnB,MAAuB;QADxB,OAAE,GAAF,EAAE,CAAkB;QACnB,WAAM,GAAN,MAAM,CAAiB;QACvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CACnC,gEAAS,CAAC,IAAI,CAAC,EAAE;YACb,IAAI,IAAI,EAAE;gBACN,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,CAAO,4BAA4B,CAAC,CAAC,YAAY,EAAE,CAAC;aACzE;iBAAM;gBACH,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;aACnB;QACL,CAAC,CAAC,CACL,CAAC;IAEN,CAAC;IAGK,OAAO;;YACT,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,EAAE;iBAClD,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC3B,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC3C,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzC,OAAO,CAAC,GAAG,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;YACnC,OAAO,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC;QAEjC,CAAC;KAAA;IAED,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,GAAG;QAC3B,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;YAC/C,OAAO,EAAE;gBACL,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,MAAM,EAAE,KAAK,CAAC,MAAM;gBACpB,OAAO,EAAE,KAAK,CAAC,OAAO;gBACtB,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;gBACxB,eAAe,EAAE,QAAQ;aAC5B;YACD,UAAU,EAAE,EAAE;SACjB,CAAC,CAAC,IAAI,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,kBAAkB,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG;QACzC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;YAE/C,OAAO,EAAE;gBACL,IAAI,EAAE,KAAK,CAAC,WAAW;gBACvB,MAAM,EAAE,KAAK,CAAC,MAAM;gBACpB,0CAA0C;gBAC1C,UAAU,EAAE,IAAI;gBAChB,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;gBACxB,eAAe,EAAE,QAAQ;gBACzB,OAAO,EAAE,KAAK,CAAC,SAAS;gBACxB,SAAS,EAAE,KAAK,CAAC,SAAS;gBAC1B,SAAS,EAAE,KAAK,CAAC,SAAS;gBAC1B,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,WAAW,EAAE,KAAK,CAAC,WAAW;gBAC9B,WAAW,EAAE,KAAK,CAAC,WAAW;aAGjC;YACD,UAAU,EAAE,EAAE;SACjB,CAAC,CAAC,IAAI,CAAC;YAEJ,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IAEP,CAAC;IAGD,UAAU,CAAC,OAAO,EAAC,KAAK,EAAC,eAAe;QACpC,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;YACnD,OAAO,EAAE;gBACL,IAAI,EAAE,KAAK,CAAC,WAAW;gBACvB,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;gBACxB,MAAM,EAAE,KAAK,CAAC,MAAM;gBACpB,OAAO,EAAE,KAAK,CAAC,SAAS;gBACxB,SAAS,EAAE,KAAK,CAAC,SAAS;gBAC1B,SAAS,EAAE,KAAK,CAAC,SAAS;gBAC1B,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,WAAW,EAAE,KAAK,CAAC,WAAW;gBAC9B,WAAW,EAAE,KAAK,CAAC,WAAW;gBAC9B,eAAe,EAAE,eAAe;aACnC;SACJ,CAAC,CAAC,IAAI,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,8DAA8D;IAClE,CAAC;IAGD,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI;QAC/B,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;YACnD,UAAU,EAAE;gBACR,KAAK,EAAE,GAAG;gBACV,aAAa,EAAE,IAAI;aACtB;SAEJ,CAAC,CAAC;QACH,8DAA8D;IAClE,CAAC;;8EA3GQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAJZ,MAAM;6FAIT,eAAe;cAL3B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,cAAc,EAAE;QAChB,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,+BAA+B;QAC3C,WAAW,EAAE,sCAAsC;QACnD,SAAS,EAAE,eAAe;QAC1B,aAAa,EAAE,2BAA2B;QAC1C,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,2CAA2C;QAClD,aAAa,EAAE,cAAc;KAC5B;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACzBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hexchat';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {  FormGroup, FormControl, FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatRadioModule} from '@angular/material/radio';\nimport { CommonModule } from '@angular/common';\n\n\n// import { SelectAutocompleteModule } from 'mat-select-autocomplete';\nimport { MultiSelectAllModule } from '@syncfusion/ej2-angular-dropdowns';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MAT_CHIPS_DEFAULT_OPTIONS} from '@angular/material/chips';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\n\n// routing\nimport { AppRoutingModule } from './shared/routing/app-routing.module';\n\nimport { AppComponent } from './app.component';\n// Firebase services + environment module\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\n// Google Analytics\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\n\n// Auth service\nimport { AuthService } from './shared/services/auth.service';\nimport { FirebaseService } from './shared/services/firebase.service';\n\n// Components that we created\nimport { HomeComponent } from './components/home/home.component';\nimport { SignInComponent } from './components/signin/signin.component';\nimport { SignUpComponent } from './components/signup/signup.component';\nimport { ProfileComponent} from './components/profile/profile.component';\nimport { PreferenceComponent } from './components/preference/preference.component';\nimport { RatingComponent } from './components/rating/rating.component';\nimport { ChatListComponent } from './components/chat-list/chat-list.component';\nimport { ChatMsgsComponent } from './components/chat-msgs/chat-msgs.component';\nimport { ChatComponent } from './components/chat/chat.component';\nimport { FrontComponent } from './components/front/front.component';\nimport { MaterialModule } from './material/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NewUserComponent } from './components/new-user/new-user.component';\nimport { EditUserComponent } from './components/edit-user/edit-user.component';\nimport { NewUserFacebookComponent } from './components/new-user-facebook/new-user-facebook.component';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { ShowProfileComponent } from './components/showprofile/showprofile.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PreferenceComponent,\n    SignInComponent,\n    SignUpComponent,\n    RatingComponent,\n    ChatListComponent,\n    ProfileComponent,\n    ChatMsgsComponent,\n    ProfileComponent,\n    ChatComponent,\n    FrontComponent,\n    NewUserComponent,\n    EditUserComponent,\n    NewUserFacebookComponent,\n    ShowProfileComponent\n  ],\n\n    imports: [\n        FlexLayoutModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppRoutingModule,\n        AngularFireModule.initializeApp(environment.firebaseConfig),\n        AngularFireAuthModule,\n        AngularFirestoreModule,\n        MaterialModule,\n        BrowserAnimationsModule,\n        MatButtonModule,\n        MatInputModule,\n        MatSliderModule,\n        MatDialogModule,\n        MultiSelectAllModule,\n        MatRadioModule,\n        MatChipsModule,\n        MatExpansionModule,\n        CommonModule,\n        AngularFireAnalyticsModule\n    ],\n  providers: [AuthService, FirebaseService,\n  // {\n  //     provide: MAT_CHIPS_DEFAULT_OPTIONS,\n  //     useValue: {\n  //       separatorKeyCodes: [ENTER, COMMA]\n  //     }\n  //   }\n    ],\n\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from \"@angular/router\";\nimport {AuthService} from \"../../shared/services/auth.service\";\n\nimport { ChatService } from '../../shared/services/chat.service';\n\n\n\n@Component({\n  selector: 'app-chat-list',\n  templateUrl: './chat-list.component.html',\n  styleUrls: ['./chat-list.component.css']\n})\nexport class ChatListComponent implements OnInit {\n\n  userChats$;\n\n  chatList = [\n    {\n    group_name: 'USF MSDS Students',\n    time: '9:30 AM',\n    last_msg: 'meeting at 10',\n    img_url: 'https://img.freepik.com/free-vector/group-young-people-posing-photo_52683-18823.jpg?size=338&ext=jpg'\n    },\n    {\n    group_name: 'fast.ai Cohort 4',\n    time: 'yesterday',\n    last_msg: 'nice to meet you all',\n    img_url: 'https://cdn.aarp.net/content/dam/aarp/travel/destination-guides/2018/04/1140-travel-destination-san-francisco-main-page.imgcache.rev2e8bf9592b441099e8e7efb70e1c1e4b.web.650.370.jpg'\n    },\n    {\n    group_name: 'Python developers',\n    time: '04/03/2020',\n    last_msg: 'great work!',\n    img_url: 'https://image.shutterstock.com/image-photo/positive-skilled-young-multiethnic-coders-260nw-1145542748.jpg'\n    }\n  ];\n//       id = userChats.\n     showChat = function (id) {\n        console.log(id)\n        this.router.navigate(['chats/', id], {relativeTo: this.route});\n      };\n\n\n  constructor(\n      private route: ActivatedRoute,\n      public authService: AuthService,\n      public router: Router,\n      public cs: ChatService\n  ) {}\n\n  ngOnInit(): void {\n    this.userChats$ = this.cs.getUserChats();\n  }\n\n}\n","<!--import google api icon just to use person icon-->\n<!--<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">-->\n<style>\nchat-list-header {\n  color: #4d2c91;\n}\n\ntd {\n  padding-top: 11.25px;\n  padding-right: 11.25px;\n  padding-bottom: 11.25px;\n  padding-left: 30px;\n}\n\n\n</style>\n<br>\n<div class=\"group-list\">\n<table class=\"table table-hover\">\n\n  <thead>\n  <tr>\n      <div class=\"chat-list-header\">Chat Rooms</div>\n  </tr>\n  </thead>\n\n  <tbody *ngFor=\"let chat of userChats$ | async\">\n    <tr (click)=\"showChat(chat.id);\">\n      <td scope=\"col\">\n          <span  routerLink=\"/chats/{{chat.id}}\">ChatId: {{chat.id}}</span>\n      </td>\n      <hr>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat-msgs',\n  templateUrl: './chat-msgs.component.html',\n  styleUrls: ['./chat-msgs.component.css']\n})\nexport class ChatMsgsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Chat Messages</h2>\n\n<div class=\"container\">\n  <img src=\"https://img.freepik.com/free-vector/group-young-people-posing-photo_52683-18823.jpg?size=338&ext=jpg\" alt=\"Avatar\" style=\"width:100%;\">\n  <p>Hello. How are you today?</p>\n  <span class=\"time-right\">11:00</span>\n</div>\n\n<div class=\"container darker\">\n  <img src=\"https://www.guampassportrenewal.com/sites/default/files/sage-2_o.jpg\" alt=\"Avatar\" class=\"right\" style=\"width:100%;\">\n  <p>Hey! I'm fine. Thanks for asking!</p>\n  <span class=\"time-left\">11:01</span>\n</div>\n\n<div class=\"container\">\n  <img src=\"https://img.freepik.com/free-vector/group-young-people-posing-photo_52683-18823.jpg?size=338&ext=jpg\" alt=\"Avatar\" style=\"width:100%;\">\n  <p>Sweet! So, what do you wanna do today?</p>\n  <span class=\"time-right\">11:02</span>\n</div>\n\n<div class=\"container darker\">\n  <img src=\"https://www.guampassportrenewal.com/sites/default/files/sage-2_o.jpg\" alt=\"Avatar\" class=\"right\" style=\"width:100%;\">\n  <p>Nah, I dunno. Play soccer.. or learn more coding perhaps?</p>\n  <span class=\"time-left\">11:05</span>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\nimport { ChatService } from '../../shared/services/chat.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\n\nexport class ChatComponent implements OnInit, AfterViewChecked {\n  @ViewChild('scroller') private chatContainer: ElementRef;\n  chat$: Observable<any>;\n  newMsg: string;\n  users$: Observable<any>;\n\n  showUser = function (id) {\n        console.log(\"user id on showUser\", id)\n        this.router.navigate(['user-profile/', id], {relativeTo: this.route});\n  };\n\n  constructor(\n    public cs: ChatService,\n    private route: ActivatedRoute,\n    public router: Router,\n    public authService: AuthService,\n    private afs: AngularFirestore,\n  ) { }\n//\n//   test() {\n//     const docRef = this.afs.collection(\"chats\").doc(\"2jC0rOg3gH4U4UKvb5ni\")\n//   }\n\n  ngOnInit() {\n    const chatId = this.route.snapshot.paramMap.get('id');\n    const source = this.cs.get(chatId);\n    this.chat$ = this.cs.joinUsers(source);\n    this.scrollBottom();\n  }\n\n\n  scrollToBottom(): void {\n    this.chatContainer.nativeElement.scrollTop\n    = this.chatContainer.nativeElement.scrollHeight;\n  }\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n\n\n  submit(chatId) {\n    if (!this.newMsg) {\n      return alert('you need to enter something');\n    }\n    this.cs.sendMessage(chatId, this.newMsg);\n    this.newMsg = '';\n    this.scrollBottom();\n  }\n\n  trackByCreated(i, msg){\n    return msg.createdAt;\n  }\n\n  private scrollBottom() {\n    setTimeout(() => window.scrollTo(0, document.body.scrollHeight), 500);\n  }\n\n}\n","<section class=\"msger\" *ngIf=\"chat$ | async as chat\">\n    <header class=\"msger-header\">\n        <div class=\"chat-header-title\">\n            Group Id: {{chat.id}}\n        </div>\n    </header>\n\n    <router-outlet></router-outlet>\n    <div class=\"msger-chat\" #scroller>\n        <div class=\"msg\" *ngFor=\"let msg of chat.messages; trackBy: trackByCreated\">\n            <div class=\"msg-img\" (click)=\"showUser(msg.uid)\"> <img [src]=\"msg.user?.photoURL\"> </div>\n  \n            <div class=\"msg-bubble\">\n                <div class=\"msg-info\">\n                 <span class=\"msg-info-name\" routerLink=\"/user-profile/{{msg.uid}}\">{{ msg.user?.email }}</span>\n                </div>\n                <div class=\"msg-text\">\n                    {{ msg.content }}\n                </div>\n            </div>\n  \n        </div>\n    </div>\n  \n\n    <div class=\"msger-inputarea\">\n      <input type=\"text\" class=\"msger-input\" placeholder=\"Enter your message...\" [(ngModel)]=\"newMsg\" (keydown.enter)=\"submit(chat.id)\">\n      <button (click)=\"submit(chat.id)\" class=\"msger-send-btn\">Send</button>\n    </div>\n\n</section>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {FirebaseService} from \"../../shared/services/firebase.service\";\n//for image:\nimport {AngularFireStorage} from \"@angular/fire/storage\";\nimport {AuthService} from \"../../shared/services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {finalize, map, startWith} from 'rxjs/operators';\nimport {MatChipInputEvent} from \"@angular/material/chips\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Category1} from \"../rating/rating.component\";\nimport {COMMA, ENTER} from \"@angular/cdk/keycodes\";\nimport * as countries from '../../../assets/Countries.json';\nimport * as languages from '../../../assets/Languages.json';\nimport * as titles from '../../../assets/JobTitles.json';\nimport * as industries from '../../../assets/Industries.json';\nimport * as degrees from '../../../assets/Degrees.json';\nimport * as fieldsOfStudy from '../../../assets/FieldOfStudy.json';\n\n\n@Component({\n    selector: 'app-edit-user',\n    templateUrl: './edit-user.component.html',\n    styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n    exampleForm: FormGroup;\n    userId;\n    userProfile;\n\n\n    //variables for image\n    title = \"cloudsSorage\";\n    selectedFile: File = null;\n    fb_image;\n    downloadURL: Observable<string>;\n    userInfo;\n    //-----\n\n    validation_messages = {\n        'name': [\n            {type: 'required', message: 'Name is required.'}\n        ],\n        'userAppName': [\n            {type: 'required', message: 'userAppName is required.'}\n        ],\n        'age': [\n            {type: 'required', message: 'Age is required.'},\n        ]\n    };\n    country = new FormControl();\n    options: string[] = countries.countryList;\n    countries: string[] = [];\n\n\n    language = new FormControl();\n    options_lang: string[] = languages.languageList;\n    languages: string[] = [];\n\n    interest = new FormControl();\n    options_interests: string[] = [\"singing\", \"dancing\"];\n    interests: string[] = [];\n\n    jobTitle = new FormControl();\n    options_jobs: string[] = titles.occupations;\n\n    industry = new FormControl();\n    options_industries: string[] = industries.industries;\n\n    schoolName1 = new FormControl();\n    options_schools1: string[] = [\"GSB\", \"MIT\"];\n\n    degree1 = new FormControl();\n    options_degrees1: string[] = degrees.degrees;\n\n    fieldOfStudy1 = new FormControl();\n    options_fieldOfStudy1: string[] = fieldsOfStudy.fields;\n\n    schoolName2 = new FormControl();\n    options_schools2: string[] = [\"GSB\", \"MIT\"];\n\n\n    degree2 = new FormControl();\n    options_degrees2: string[] = degrees.degrees;\n\n    fieldOfStudy2 = new FormControl();\n    options_fieldOfStudy2: string[] = fieldsOfStudy.fields;\n\n\n    // These are environment variables for chips/tags.\n    visible = true;\n    selectable = false;\n    removable = true;\n    addOnBlur = true;\n    isUserInput = true;\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n    filteredOptions: Observable<string[]>;\n    filteredOptions_lang: Observable<string[]>;\n    filteredOptions_interests: Observable<string[]>;\n    filteredOptions_jobs: Observable<string[]>;\n    filteredOptions_industries: Observable<string[]>;\n    filteredOptions_schools1: Observable<string[]>;\n    filteredOptions_schools2: Observable<string[]>;\n    filteredOptions_degrees1: Observable<string[]>;\n    filteredOptions_degrees2: Observable<string[]>;\n    filteredOptions_fields1: Observable<string[]>;\n    filteredOptions_fields2: Observable<string[]>;\n    // filteredOptions_industries: Observable<string[]>;\n\n    gender: string[] = ['Male', 'Female', 'Other'];\n\n\n    constructor(\n        public firebaseService: FirebaseService,\n        private fb: FormBuilder,\n        private storage: AngularFireStorage,\n        public authService: AuthService,\n        private router: Router,\n        public snackBar: MatSnackBar\n    ) {\n    }\n\n    ngOnInit() {\n\n        this.filteredOptions = this.country.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options))\n            );\n        this.filteredOptions_lang = this.language.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_lang))\n            );\n        this.filteredOptions_interests = this.interest.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_interests))\n            );\n        this.filteredOptions_jobs = this.jobTitle.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_jobs))\n            );\n        this.filteredOptions_industries = this.industry.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_industries))\n            );\n        this.filteredOptions_schools1 = this.schoolName1.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_schools1))\n            );\n        this.filteredOptions_schools2 = this.schoolName2.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_schools2))\n            );\n        this.filteredOptions_degrees1 = this.degree1.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_degrees1))\n            );\n        this.filteredOptions_degrees2 = this.degree2.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_degrees2))\n            );\n        this.filteredOptions_fields1 = this.fieldOfStudy1.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_fieldOfStudy1))\n            );\n        this.filteredOptions_fields2 = this.fieldOfStudy2.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_fieldOfStudy2))\n            );\n\n\n        this.authService.user$.subscribe(user => {\n            if (user) {\n                this.userId = user.uid;\n                this.userProfile = user.profile;\n                // this.\n                this.countries = this.userProfile.country;\n                this.languages = this.userProfile.languages;\n                this.interests = this.userProfile.interests;\n                this.fb_image = this.userProfile.profileImageUrl;\n                this.createForm();\n                this.jobTitle.setValue(this.userProfile.jobTitle);\n                this.industry.setValue(this.userProfile.industry);\n                this.schoolName1.setValue(this.userProfile.school1Info.schoolName);\n                this.schoolName2.setValue(this.userProfile.school2Info.schoolName);\n                this.degree1.setValue(this.userProfile.school1Info.degree);\n                this.degree2.setValue(this.userProfile.school2Info.degree);\n                this.fieldOfStudy1.setValue(this.userProfile.school1Info.fieldOfStudy);\n                this.fieldOfStudy2.setValue(this.userProfile.school2Info.fieldOfStudy);\n            }\n        });\n\n\n    }\n\n    createForm() {\n        this.exampleForm = this.fb.group({\n            userAppName: [this.userProfile.name, Validators.required],\n            age: [this.userProfile.age, Validators.required],\n            country: [''],\n            gender: [this.userProfile.gender, [Validators.required]],\n            language: [''],\n            interest: ['']\n\n        });\n    }\n\n    add(event: MatChipInputEvent, thing): void {\n        const input = event.input;\n        const value = event.value;\n        // Add a tag\n        if ((value || '').trim()) {\n            thing.push({name: value.trim()});\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n\n    remove(exp: Category1, thing): void {\n        const index = thing.indexOf(exp);\n\n        if (index >= 0) {\n            thing.splice(index, 1);\n        }\n    }\n\n    addCountry() {\n        this.countries.push(this.country.value);\n        this.country.setValue(\"\")\n    }\n\n    addLanguage() {\n        this.languages.push(this.language.value);\n        this.language.setValue(\"\")\n    }\n\n    addInterest() {\n        this.interests.push(this.interest.value);\n        this.interest.setValue(\"\")\n    }\n\n    resetFields() {\n        // this.avatarLink = \"https://s3.amazonaws.com/uifaces/faces/twitter/adellecharles/128.jpg\";\n        this.exampleForm = this.fb.group({\n            // name: new FormControl('', Validators.required),\n            userAppName: new FormControl('', Validators.required),\n            age: new FormControl('', Validators.required),\n        });\n    }\n\n\n    removeEmptyStrings(variable) {\n        var filteredArray = variable.filter(function (el) {\n            return el != \"\";\n        });\n        return filteredArray;\n    }\n\n\n    onSubmit(value) {\n        console.log(this.country.value)\n        if(this.country.value!=null) {this.countries.push(this.country.value);}\n        if(this.language.value!=null) {this.languages.push(this.language.value);}\n        if(this.interest.value!=null) {this.interests.push(this.interest.value);}\n\n        value.countries = this.removeEmptyStrings(this.countries);\n        value.languages = this.removeEmptyStrings(this.languages);\n        value.interests = this.removeEmptyStrings(this.interests);\n        value.jobTitle = this.jobTitle.value;\n        value.industry = this.industry.value;\n\n        value.school1Info = {\n            schoolName: this.schoolName1.value,\n            degree: this.degree1.value,\n            fieldOfStudy: this.fieldOfStudy1.value\n        };\n        value.school2Info = {\n            schoolName: this.schoolName2.value,\n            degree: this.degree2.value,\n            fieldOfStudy: this.fieldOfStudy2.value\n        };\n\n        this.firebaseService.updateUser(this.userId, value, this.userProfile.profileImageUrl)\n            .then(\n                res => {\n\n                    this.snackBar.open(\"Update successful !!\", \"Dismiss\", {\n                        duration: 2000,\n                        horizontalPosition: 'right'\n                    });\n                    // this.router.navigate(['preference']);\n                    // this.resetFields();\n                }\n            )\n    }\n\n\n    onFileSelected(event) {\n        var n = Date.now();\n        const file = event.target.files[0];\n        const filePath = `ProfileImages/${n}`;\n        const fileRef = this.storage.ref(filePath);\n        const task = this.storage.upload(`ProfileImages/${n}`, file);\n        task\n            .snapshotChanges()\n            .pipe(\n                finalize(() => {\n                    this.downloadURL = fileRef.getDownloadURL();\n                    this.downloadURL.subscribe(url => {\n                        if (url) {\n                            this.fb_image = url;\n                            this.userProfile.profileImageUrl = url;\n                        }\n                        console.log(this.fb_image);\n\n                    });\n                })\n            )\n            .subscribe(url => {\n                if (url) {\n                    console.log(url);\n                }\n            });\n    }\n\n    private _filter(value: string, options): string[] {\n        const filterValue = value.toLowerCase();\n        if (options) {\n            return options.filter(option => option.toLowerCase().includes(filterValue));\n        }\n\n    }\n\n\n}\n","<!--<div class=\"split left\">-->\n<!--    <div *ngIf=\"exampleForm\" class=\"centered\">-->\n<!--        <img class=\"user\" src={{this.fb_image}}>-->\n<!--        <br/>-->\n<!--        <h2>Welcome <br/>{{this.userProfile.name}}</h2>-->\n<!--    </div>-->\n<!--    <div class=\"form-group col-12\">-->\n<!--        <input #userPhoto-->\n<!--               (change)=\"onFileSelected($event)\"-->\n<!--               autocomplete=\"off\"-->\n<!--               id=\"file\"-->\n<!--               name=\"image\"-->\n<!--               style=\"display: none;\"-->\n<!--               title=\"Choose a file please\"-->\n<!--               type=\"file\"-->\n<!--        />-->\n<!--        <label for=\"file\">Upload new image</label>-->\n<!--    </div>-->\n<!--</div>-->\n\n\n<div class=\"\">\n    <div class=\"\">\n\n        <form (ngSubmit)=\"onSubmit(exampleForm.value)\" *ngIf=\"exampleForm\" [formGroup]=\"exampleForm\" class=\"create-form\"\n              novalidate>\n            <div class=\"row\">\n\n                <div class=\"col-12 col-md-8\">\n                    <div class=\"form-group\">\n                        <mat-form-field class=\"input-style\">\n                            <input class=\"form-control\" formControlName=\"userAppName\" matInput\n                                   placeholder=\"What should we call you?\">\n                        </mat-form-field>\n                        <ng-container *ngFor=\"let validation of validation_messages.userAppName\">\n                            <mat-error\n                                    *ngIf=\"exampleForm.get('userAppName').hasError(validation.type) && (exampleForm.get('userAppName').dirty || exampleForm.get('userAppName').touched)\">{{validation.message}}</mat-error>\n                        </ng-container>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <mat-radio-group\n                                aria-labelledby=\"example-radio-group-label\"\n                                class=\"input-style\"\n                                formControlName=\"gender\">\n                            <mat-radio-button *ngFor=\"let gen of gender\" [value]=\"gen\" class=\"example-radio-button\">\n                                {{gen}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            </mat-radio-button>\n                        </mat-radio-group>\n                        <!--                <div *ngIf=\"exampleForm.get('gender').hasError('required')\" class=\"error\">-->\n                        <!--                    Gender is required-->\n                        <!--                </div>-->\n                    </div>\n\n                    <div class=\"form-group\">\n                        <mat-form-field class=\"input-style\">\n                            <input class=\"form-control\" formControlName=\"age\" matInput max=\"100\" min=\"0\"\n                                   placeholder=\"How old are you?\"\n                                   type=\"number\">\n                        </mat-form-field>\n                        <ng-container *ngFor=\"let validation of validation_messages.age\">\n                            <mat-error\n                                    *ngIf=\"exampleForm.get('age').hasError(validation.type) && (exampleForm.get('age').dirty || exampleForm.get('age').touched)\">{{validation.message}}</mat-error>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group col-6 col-md-4\">\n                    <img class=\"user\" src=\"{{(this.fb_image) ? this.fb_image : '../../assets/images/dummy_profile.png'}}\">\n                    <br/>\n                    <input #userPhoto\n                           (change)=\"onFileSelected($event)\"\n                           autocomplete=\"off\"\n                           id=\"file\"\n                           name=\"image\"\n                           style=\"display: none;\"\n                           title=\"Choose a file please\"\n                           type=\"file\"\n                    />\n                    <label for=\"file\">Upload new image</label>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"country\"\n                            [matAutocomplete]=\"auto\"\n                            aria-label=\"Number\"\n                            matInput\n\n                            placeholder=\"Country\"\n                            type=\"text\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button (click)=\"addCountry()\" color=\"primary\" mat-mini-fab type=\"button\">+</button>\n\n                <mat-form-field *ngIf=\"this.countries?.length > 0\" class=\"example-chip-list\">\n                    <mat-chip-list #chipList aria-label=\"Background selection\">\n                        <mat-chip (removed)=\"remove(exp1, this.countries)\" *ngFor=\"let exp1 of this.countries\"\n                                  [removable]=\"removable\" [selectable]=\"selectable\">\n                            {{exp1}}\n                            <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                        </mat-chip>\n                        <label>\n                            <input (matChipInputTokenEnd)=\"add($event, this.countries)\"\n                                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                                   [matChipInputFor]=\"chipList\"\n                                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                   [multiple]=true\n                                   placeholder=\"Added countries\">\n                        </label>\n                    </mat-chip-list>\n                </mat-form-field>\n\n            </div>\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"language\"\n                            [matAutocomplete]=\"auto1\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Language\"\n                            type=\"text\">\n                    <mat-autocomplete #auto1=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_lang | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button (click)=\"addLanguage()\" color=\"primary\" mat-mini-fab type=\"button\">+</button>\n\n                <mat-form-field *ngIf=\"this.languages?.length > 0\" class=\"example-chip-list\">\n                    <mat-chip-list #chipList aria-label=\"Background selection\">\n                        <mat-chip (removed)=\"remove(exp1, this.languages)\" *ngFor=\"let exp1 of this.languages\"\n                                  [removable]=\"removable\" [selectable]=\"selectable\">\n                            {{exp1}}\n                            <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                        </mat-chip>\n                        <label>\n                            <input (matChipInputTokenEnd)=\"add($event, this.languages)\"\n                                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                                   [matChipInputFor]=\"chipList\"\n                                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                   [multiple]=true\n                                   placeholder=\"Added languages\">\n                        </label>\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n\n            <br/>\n            <mat-card>Interests</mat-card>\n            <br/>\n            <div class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"interest\"\n                            [matAutocomplete]=\"auto_interest\"\n                            aria-label=\"Number\"\n                            matInput\n\n                            placeholder=\"Interest\"\n                            type=\"text\">\n                    <mat-autocomplete #auto_interest=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_interests | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button (click)=\"addInterest()\" color=\"primary\" mat-mini-fab type=\"button\">+</button>\n\n                <mat-form-field *ngIf=\"this.interests?.length > 0\" class=\"example-chip-list\">\n                    <mat-chip-list #chipList aria-label=\"Background selection\">\n                        <mat-chip (removed)=\"remove(exp1, this.interests)\" *ngFor=\"let exp1 of this.interests\"\n                                  [removable]=\"removable\" [selectable]=\"selectable\">\n                            {{exp1}}\n                            <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                        </mat-chip>\n                        <label>\n                            <input (matChipInputTokenEnd)=\"add($event, this.interests)\"\n                                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                                   [matChipInputFor]=\"chipList\"\n                                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                   [multiple]=true\n                                   placeholder=\"Added interests\">\n                        </label>\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n\n            <br/>\n            <mat-card>Career networking</mat-card>\n            <div>\n                <br/>\n\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"jobTitle\"\n                            [matAutocomplete]=\"auto2\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Job Title\"\n                            type=\"text\">\n                    <mat-autocomplete #auto2=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_jobs | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"industry\"\n                            [matAutocomplete]=\"auto3\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Industry\"\n                            type=\"text\">\n                    <mat-autocomplete #auto3=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_industries | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n            </div>\n\n            <br/>\n            <mat-card>Education details</mat-card>\n            <br/>\n            <p>Latest education detail:</p>\n            <div>\n                <br/>\n\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n\n                            [formControl]=\"schoolName1\"\n                            [matAutocomplete]=\"auto4\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"School Name\"\n                            type=\"text\">\n                    <mat-autocomplete #auto4=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_schools1 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n\n                            [formControl]=\"degree1\"\n                            [matAutocomplete]=\"auto5\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Degree\"\n                            type=\"text\">\n                    <mat-autocomplete #auto5=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_degrees1 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n\n                            [formControl]=\"fieldOfStudy1\"\n                            [matAutocomplete]=\"auto6\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Field of Study\"\n                            type=\"text\">\n                    <mat-autocomplete #auto6=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_fields1 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n            </div>\n\n            <br/>\n\n            <p>Any other education detail:</p>\n            <div>\n\n                <br/>\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n\n                            [formControl]=\"schoolName2\"\n                            [matAutocomplete]=\"auto7\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"School Name\"\n                            type=\"text\">\n                    <mat-autocomplete #auto7=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_schools2 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n\n                            [formControl]=\"degree2\"\n                            [matAutocomplete]=\"auto8\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Degree\"\n                            type=\"text\">\n                    <mat-autocomplete #auto8=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_degrees2 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"fieldOfStudy2\"\n                            [matAutocomplete]=\"auto9\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Field of Study\"\n                            type=\"text\">\n                    <mat-autocomplete #auto9=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_fields2 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n            </div>\n\n            <div class=\"row submit-button-container\">\n                <div class=\"col-md-4\">\n                    <button [disabled]=\"!exampleForm.valid\" class=\"submit-button\" color=\"primary\" mat-raised-button\n                            type=\"submit\">Update\n                    </button>\n                </div>\n            </div>\n\n\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../../shared/services/chat.service';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-front',\n  templateUrl: './front.component.html',\n  styleUrls: ['./front.component.css']\n})\nexport class FrontComponent implements OnInit {\n  userChats$;\n  constructor(\n    public authService: AuthService,\n    public cs: ChatService\n  ) { }\n\n  ngOnInit() {\n    this.userChats$ = this.cs.getUserChats();\n  }\n}","\n<h1>Welcome to Mega Chat</h1>\n\n<div class=\"login\">\n  <div *ngIf=\" authService.user$ | async as user; else login\">\n    <img [src]=\"user.photoURL\" width=\"50px\">\n    <p>\n      <span class=\"tag is-dark\">{{ user.displayName }}</span>\n      <span class=\"tag is-light\">{{ user.uid }}</span>\n    </p>\n\n\n    <button class=\"button is-small\" (click)=\"authService.SignOut()\">Sign Out</button>\n    <hr>\n\n<!--    <button class=\"button\" routerLink=\"'/chats/' + chat.id\">Join Mega Chat 🎪</button>-->\n    <button class=\"button is-info\" (click)=\"cs.create()\">Create New Chat</button>\n\n    <hr>\n\n    <h3>My Chats</h3>\n\n    <ul>\n      <li *ngFor=\"let chat of userChats$ | async\">\n        <a routerLink=\"/chats/{{chat.id}}\">{{ chat.id }} - {{ chat.messages.length }} Messages </a>\n      </li>\n    </ul>\n  </div>\n\n  <ng-template #login>\n    <button class=\"button\" (click)=\"authService.FacebookAuth()\">Login with Facebook</button>\n  </ng-template>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../shared/services/auth.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Header with full-height image -->\n<!DOCTYPE html>\n<html>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Raleway\">\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<body>\n<div class=\"bgimg-1\" id=\"top\">\n  <mat-toolbar color=\"primary\" style=\"font-size: 17px; color:white\" class=\"baloo\">\n  <button mat-button class=\"hexchat-text\" routerLink=\"/home\">Hexchat</button>\n      <span class=\"fill-space\"></span>\n      <span>Already have an account?&ensp;</span>\n      <a mat-raised-button class=\"toolbar-button\" routerLink=\"/signin\">Login</a>\n</mat-toolbar>\n\n    <div class=\"firstsentecne\" >Rediscover Friendship</div>\n    <p style=\"text-align: center\"><button mat-raised-button color=\"primary\" class=\"button-shape baloo\" routerLink=\"/join\" type=\"submit\" >\n      Get Started\n    </button></p>\n    </div>\n\n<!-- About Section -->\n<div class=\"w3-container\" style=\"padding:128px 16px; min-height: 100%\" id=\"about\">\n  <h3 class=\"w3-center\">ABOUT HEXCHAT</h3>\n  <p class=\"w3-center w3-large\">Product Features</p>\n  <div class=\"w3-row-padding w3-center\" style=\"margin-top:64px\">\n    <div class=\"w3-quarter\">\n      <i class=\"fa fa-desktop w3-margin-bottom w3-jumbo w3-center\"></i>\n      <p class=\"w3-large\">Smart</p>\n      <p>Hexchat develops smart matching algorithms that know deeper about your preferences.</p>\n    </div>\n    <div class=\"w3-quarter\">\n      <i class=\"fa fa-heart w3-margin-bottom w3-jumbo\"></i>\n      <p class=\"w3-large\">Connect</p>\n      <p>Hexchat matches you to another 5 and creates a small chat room for you to find friends who think alike. </p>\n    </div>\n    <div class=\"w3-quarter\">\n      <i class=\"fa fa-diamond w3-margin-bottom w3-jumbo\"></i>\n      <p class=\"w3-large\">Share</p>\n      <p>Hexchat discovers interesting topics to spark conversations.</p>\n    </div>\n    <div class=\"w3-quarter\">\n      <i class=\"fa fa-cog w3-margin-bottom w3-jumbo\"></i>\n      <p class=\"w3-large\">Support</p>\n      <p>Hexchat is planning icebreaker bots, chat rooms with limited time and an invitation function.</p>\n    </div>\n  </div>\n</div>\n\n<!-- Promo Section - \"We know\" -->\n<div class=\"w3-container w3-light-grey\" style=\"padding:128px 16px\">\n  <div class=\"w3-row-padding\">\n    <div class=\"w3-col m6\">\n      <h3>Our Mission</h3>\n      <p>The modern world makes us closer physically yet separated. Closeness is meaningless if we are not connected. Hexchat aims to be a product to help users to create their connections, quickly and in scale!</p>\n<!--      <p><a href=\"#work\" class=\"w3-button w3-black\"><i class=\"fa fa-th\">&nbsp;</i> View Our Works</a></p>-->\n    </div>\n<!--    <div class=\"w3-col m6\">-->\n<!--        picture placeholder-->\n<!--&lt;!&ndash;      <img class=\"w3-image w3-round-large\" src=\"/\" alt=\"Buildings\" width=\"700\" height=\"394\">&ndash;&gt;-->\n<!--    </div>-->\n  </div>\n</div>\n\n<!-- Team Section -->\n<div class=\"w3-container\" style=\"padding:128px 16px\" id=\"team\">\n  <h3 class=\"w3-center\">THE TEAM</h3>\n  <p class=\"w3-center w3-large\">The ones who create this miracle</p>\n  <div class=\"w3-row-padding\" style=\"margin-top:64px\">\n    <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/akanksha.jpg\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Akanksha</h3>\n          <p class=\"w3-opacity\">Back End Engineer</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n          <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/akanksha130/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n    <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/annette.jpg\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Annette</h3>\n          <p class=\"w3-opacity\">Designer & Product Manager</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n          <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/zijun-annette-lin/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n    <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/daren_ma.jpg\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Daren</h3>\n          <p class=\"w3-opacity\">Front End Engineer</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n                  <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/daren-ma/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n    <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/geoffrey.png\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Geoffrey</h3>\n          <p class=\"w3-opacity\">Lead Product Manager</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n                  <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/geoffreyhung/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"w3-row-padding\">\n    <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/mikio_tada.jpg\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Mikio</h3>\n          <p class=\"w3-opacity\">Front End Engineer</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n                  <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/mikiotada/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n        <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/nishat_parveen.jpg\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Nishat</h3>\n          <p class=\"w3-opacity\">Back End Engineer</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n                  <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/nishat-parveen/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n        <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/sakshi_singla.jpg\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Sakshi</h3>\n          <p class=\"w3-opacity\">Front End Engineer</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n                  <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/sakshi-singla/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<footer class=\"w3-center w3-padding-64\" style=\"background-color: #9877d1; color: white\">\n  <a href=\"#top\" class=\"w3-button\" style=\"background-color: white;color: #60468f;\"><i class=\"fa fa-arrow-up w3-margin-right\" style=\"color: #60468f;\"></i>To the top</a>\n<!--  <p>Powered by <a href=\"https://www.w3schools.com/w3css/default.asp\" title=\"W3.CSS\" target=\"_blank\" class=\"w3-hover-text-green\">w3.css</a></p>-->\n</footer>\n</body>\n</html>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {FirebaseService} from \"../../shared/services/firebase.service\";\n//for image:\nimport {AngularFireStorage} from \"@angular/fire/storage\";\nimport {AuthService} from \"../../shared/services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {finalize, map, startWith} from 'rxjs/operators';\nimport {MatChipInputEvent} from \"@angular/material/chips\";\nimport {Category1} from \"../rating/rating.component\";\nimport {COMMA, ENTER} from \"@angular/cdk/keycodes\";\nimport * as countries from '../../../assets/Countries.json';\nimport * as languages from '../../../assets/Languages.json';\nimport * as titles from '../../../assets/JobTitles.json';\nimport * as industries from '../../../assets/Industries.json';\nimport * as degrees from '../../../assets/Degrees.json';\nimport * as fieldsOfStudy from '../../../assets/FieldOfStudy.json';\n\n\n@Component({\n    selector: 'app-new-user-facebook',\n    templateUrl: './new-user-facebook.component.html',\n    styleUrls: ['./new-user-facebook.component.css']\n})\nexport class NewUserFacebookComponent implements OnInit {\n\n    exampleForm: FormGroup;\n    userId;\n    userProfile;\n\n    //variables for image\n    title = \"cloudsSorage\";\n    selectedFile: File = null;\n    fb_image;\n    downloadURL: Observable<string>;\n    userInfo;\n    //-----\n\n    validation_messages = {\n        'name': [\n            {type: 'required', message: 'Name is required.'}\n        ],\n        'userAppName': [\n            {type: 'required', message: 'userAppName is required.'}\n        ],\n        'age': [\n            {type: 'required', message: 'Age is required.'},\n        ]\n    };\n    country = new FormControl();\n    options: string[] = countries.countryList;\n    countries: string[] = [];\n\n\n    language = new FormControl();\n    options_lang: string[] = languages.languageList;\n    languages: string[] = [];\n\n    interest = new FormControl();\n    options_interests: string[] = [\"singing\", \"dancing\"];\n    interests: string[] = [];\n\n    jobTitle = new FormControl();\n    options_jobs: string[] = titles.occupations;\n\n    industry = new FormControl();\n    options_industries: string[] = industries.industries;\n\n    schoolName1 = new FormControl();\n    options_schools1: string[] = [\"GSB\", \"MIT\"];\n\n    degree1 = new FormControl();\n    options_degrees1: string[] = degrees.degrees;\n\n    fieldOfStudy1 = new FormControl();\n    options_fieldOfStudy1: string[] = fieldsOfStudy.fields;\n\n    schoolName2 = new FormControl();\n    options_schools2: string[];\n\n\n    degree2 = new FormControl();\n    options_degrees2: string[] = degrees.degrees;\n\n    fieldOfStudy2 = new FormControl();\n    options_fieldOfStudy2: string[] = fieldsOfStudy.fields;\n\n\n    // These are environment variables for chips/tags.\n    visible = true;\n    selectable = false;\n    removable = true;\n    addOnBlur = true;\n    isUserInput = true;\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n    filteredOptions: Observable<string[]>;\n    filteredOptions_lang: Observable<string[]>;\n    filteredOptions_interests: Observable<string[]>;\n    filteredOptions_jobs: Observable<string[]>;\n    filteredOptions_industries: Observable<string[]>;\n    filteredOptions_schools1: Observable<string[]>;\n    filteredOptions_schools2: Observable<string[]>;\n    filteredOptions_degrees1: Observable<string[]>;\n    filteredOptions_degrees2: Observable<string[]>;\n    filteredOptions_fields1: Observable<string[]>;\n    filteredOptions_fields2: Observable<string[]>;\n    // filteredOptions_industries: Observable<string[]>;\n\n    gender: string[] = ['Male', 'Female', 'Other'];\n\n\n    constructor(\n        public firebaseService: FirebaseService,\n        private fb: FormBuilder,\n        private storage: AngularFireStorage,\n        public authService: AuthService,\n        private router: Router,\n    ) {\n    }\n\n    ngOnInit() {\n\n        this.filteredOptions = this.country.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options))\n            );\n        this.filteredOptions_lang = this.language.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_lang))\n            );\n        this.filteredOptions_interests = this.interest.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_interests))\n            );\n        this.filteredOptions_jobs = this.jobTitle.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_jobs))\n            );\n        this.filteredOptions_industries = this.industry.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_industries))\n            );\n        this.filteredOptions_schools1 = this.schoolName1.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_schools1))\n            );\n        this.filteredOptions_schools2 = this.schoolName2.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_schools2))\n            );\n        this.filteredOptions_degrees1 = this.degree1.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_degrees1))\n            );\n        this.filteredOptions_degrees2 = this.degree2.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_degrees2))\n            );\n        this.filteredOptions_fields1 = this.fieldOfStudy1.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_fieldOfStudy1))\n            );\n        this.filteredOptions_fields2 = this.fieldOfStudy2.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_fieldOfStudy2))\n            );\n\n\n        this.authService.user$.subscribe(user => {\n            if (user) {\n                this.userId = user.uid;\n                this.userProfile = user.profile;\n\n                this.fb_image = this.userProfile.profileImageUrl;\n                this.createForm();\n            }\n        });\n\n\n    }\n\n    createForm() {\n        this.exampleForm = this.fb.group({\n            // name: [this.userProfile.name, Validators.required],\n            userAppName: ['', Validators.required],\n            age: ['', Validators.required],\n            country: [''],\n            gender: ['', [Validators.required]],\n            language: [''],\n            jobTitle: [''],\n            industry: [''],\n            interest: ['']\n\n        });\n    }\n\n    add(event: MatChipInputEvent, thing): void {\n        const input = event.input;\n        const value = event.value;\n        // Add a tag\n        if ((value || '').trim()) {\n            thing.push({name: value.trim()});\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n\n    remove(exp: Category1, thing): void {\n        const index = thing.indexOf(exp);\n\n        if (index >= 0) {\n            thing.splice(index, 1);\n        }\n    }\n\n    addCountry() {\n        this.countries.push(this.country.value);\n        this.country.setValue(\"\")\n    }\n\n    addLanguage() {\n        this.languages.push(this.language.value);\n        this.language.setValue(\"\")\n    }\n\n    addInterest() {\n        this.interests.push(this.interest.value);\n        this.interest.setValue(\"\")\n    }\n\n    resetFields() {\n        // this.avatarLink = \"https://s3.amazonaws.com/uifaces/faces/twitter/adellecharles/128.jpg\";\n        this.exampleForm = this.fb.group({\n            // name: new FormControl('', Validators.required),\n            userAppName: new FormControl('', Validators.required),\n            age: new FormControl('', Validators.required),\n        });\n    }\n\n\n    removeEmptyStrings(variable)\n        {\n          var filteredArray=  variable.filter(function (el) {\n                return el != \"\";\n            });\n          return filteredArray;\n        }\n\n\n    onSubmit(value) {\n\n        this.countries.push(this.country.value);\n        this.languages.push(this.language.value);\n        this.interests.push(this.interest.value);\n\n        value.countries = this.removeEmptyStrings(this.countries);\n        value.languages = this.removeEmptyStrings(this.languages);\n        value.interests = this.removeEmptyStrings(this.interests);\n        value.jobTitle = this.jobTitle.value;\n        value.industry = this.industry.value;\n\n        value.school1Info = {schoolName:this.schoolName1.value, degree:this.degree1.value,fieldOfStudy: this.fieldOfStudy1.value }\n        value.school2Info = {schoolName:this.schoolName2.value, degree:this.degree2.value,fieldOfStudy: this.fieldOfStudy2.value }\n\n        this.firebaseService.createUserFacebook(value, this.userProfile.name, this.userProfile.profileImageUrl, this.userId)\n            .then(\n                res => {\n                    this.router.navigate(['user']);\n                    // this.resetFields();\n                }\n            )\n    }\n\n\n    onFileSelected(event) {\n        var n = Date.now();\n        const file = event.target.files[0];\n        const filePath = `ProfileImages/${n}`;\n        const fileRef = this.storage.ref(filePath);\n        const task = this.storage.upload(`ProfileImages/${n}`, file);\n        task\n            .snapshotChanges()\n            .pipe(\n                finalize(() => {\n                    this.downloadURL = fileRef.getDownloadURL();\n                    this.downloadURL.subscribe(url => {\n                        if (url) {\n                            this.fb_image = url;\n                            this.userProfile.profileImageUrl = url;\n                        }\n                        console.log(this.fb_image);\n\n                    });\n                })\n            )\n            .subscribe(url => {\n                if (url) {\n                    console.log(url);\n                }\n            });\n    }\n\n    private _filter(value: string, options): string[] {\n        const filterValue = value.toLowerCase();\n        if(options) {\n            return options.filter(option => option.toLowerCase().includes(filterValue));\n        }\n\n    }\n\n\n}\n","<div class=\"split left\">\n    <div *ngIf=\"exampleForm\" class=\"centered\">\n\n        <img class=\"user\" src=\"{{(this.fb_image) ? this.fb_image : '../../assets/images/dummy_profile.png'}}\">\n        <br/>\n        <h2>Welcome <br/>{{this.userProfile.name}}</h2>\n    </div>\n    <div class=\"form-group col-12\">\n        <input #userPhoto\n               (change)=\"onFileSelected($event)\"\n               autocomplete=\"off\"\n               id=\"file\"\n               name=\"image\"\n               type=\"file\"\n               title=\"Choose a file please\"\n               style=\"display: none;\"\n        />\n        <label *ngIf=\"exampleForm\" for=\"file\">Upload new image</label>\n    </div>\n</div>\n\n\n<div class=\"split right\">\n    <div class=\"centered\">\n        <form (ngSubmit)=\"onSubmit(exampleForm.value)\" *ngIf=\"exampleForm\" [formGroup]=\"exampleForm\" class=\"create-form\"\n              novalidate>\n\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"input-style\">\n                    <input class=\"form-control\" formControlName=\"userAppName\" matInput\n                           placeholder=\"What should we call you?\">\n                </mat-form-field>\n                <ng-container *ngFor=\"let validation of validation_messages.userAppName\">\n                    <mat-error\n                            *ngIf=\"exampleForm.get('userAppName').hasError(validation.type) && (exampleForm.get('userAppName').dirty || exampleForm.get('userAppName').touched)\">{{validation}}</mat-error>\n                </ng-container>\n            </div>\n\n            <div class=\"form-group\">\n                <mat-radio-group\n                        aria-labelledby=\"example-radio-group-label\"\n                        class=\"input-style\"\n                        formControlName=\"gender\">\n                    <mat-radio-button *ngFor=\"let gen of gender\" [value]=\"gen\" class=\"example-radio-button\">\n                        {{gen}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    </mat-radio-button>\n                </mat-radio-group>\n                <!--                <div *ngIf=\"exampleForm.get('gender').hasError('required')\" class=\"error\">-->\n                <!--                    Gender is required-->\n                <!--                </div>-->\n            </div>\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"input-style\">\n                    <input class=\"form-control\" formControlName=\"age\" matInput max=\"100\" min=\"0\"\n                           placeholder=\"How old are you?\"\n                           type=\"number\">\n                </mat-form-field>\n                <ng-container *ngFor=\"let validation of validation_messages.age\">\n                    <mat-error\n                            *ngIf=\"exampleForm.get('age').hasError(validation.type) && (exampleForm.get('age').dirty || exampleForm.get('age').touched)\">{{validation}}</mat-error>\n                </ng-container>\n            </div>\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"country\"\n                            [matAutocomplete]=\"auto\"\n                            aria-label=\"Number\"\n                            matInput\n\n                            placeholder=\"Country\"\n                            type=\"text\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button (click)=\"addCountry()\" color=\"primary\" mat-mini-fab type=\"button\">+</button>\n\n                <mat-form-field *ngIf=\"this.countries?.length > 0\" class=\"example-chip-list\">\n                    <mat-chip-list #chipList aria-label=\"Background selection\">\n                        <mat-chip (removed)=\"remove(exp1, this.countries)\" *ngFor=\"let exp1 of this.countries\"\n                                  [removable]=\"removable\" [selectable]=\"selectable\">\n                            {{exp1}}\n                            <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                        </mat-chip>\n                        <label>\n                            <input (matChipInputTokenEnd)=\"add($event, this.countries)\"\n                                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                                   [matChipInputFor]=\"chipList\"\n                                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                   [multiple]=true\n                                   placeholder=\"Added countries\">\n                        </label>\n                    </mat-chip-list>\n                </mat-form-field>\n\n            </div>\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"language\"\n                            [matAutocomplete]=\"auto1\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Language\"\n                            type=\"text\">\n                    <mat-autocomplete #auto1=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_lang | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button (click)=\"addLanguage()\" color=\"primary\" mat-mini-fab type=\"button\">+</button>\n\n                <mat-form-field *ngIf=\"this.languages?.length > 0\" class=\"example-chip-list\">\n                    <mat-chip-list #chipList aria-label=\"Background selection\">\n                        <mat-chip (removed)=\"remove(exp1, this.languages)\" *ngFor=\"let exp1 of this.languages\"\n                                  [removable]=\"removable\" [selectable]=\"selectable\">\n                            {{exp1}}\n                            <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                        </mat-chip>\n                        <label>\n                            <input (matChipInputTokenEnd)=\"add($event, this.languages)\"\n                                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                                   [matChipInputFor]=\"chipList\"\n                                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                   [multiple]=true\n                                   placeholder=\"Added languages\">\n                        </label>\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n\n            <br/>\n            <mat-card>Interests</mat-card>\n            <br/>\n            <div class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"interest\"\n                            [matAutocomplete]=\"auto_interest\"\n                            aria-label=\"Number\"\n                            matInput\n\n                            placeholder=\"Interest\"\n                            type=\"text\">\n                    <mat-autocomplete #auto_interest=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_interests | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button (click)=\"addInterest()\" color=\"primary\" mat-mini-fab type=\"button\">+</button>\n\n                <mat-form-field *ngIf=\"this.interests?.length > 0\" class=\"example-chip-list\">\n                    <mat-chip-list #chipList aria-label=\"Background selection\">\n                        <mat-chip (removed)=\"remove(exp1, this.interests)\" *ngFor=\"let exp1 of this.interests\"\n                                  [removable]=\"removable\" [selectable]=\"selectable\">\n                            {{exp1}}\n                            <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                        </mat-chip>\n                        <label>\n                            <input (matChipInputTokenEnd)=\"add($event, this.interests)\"\n                                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                                   [matChipInputFor]=\"chipList\"\n                                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                   [multiple]=true\n                                   placeholder=\"Added interests\">\n                        </label>\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n\n            <br/>\n            <mat-card>Career networking</mat-card>\n            <div>\n                <br/>\n\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"jobTitle\"\n                            [matAutocomplete]=\"auto2\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Job Title\"\n                            type=\"text\">\n                    <mat-autocomplete #auto2=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_jobs | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"industry\"\n                            [matAutocomplete]=\"auto3\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Industry\"\n                            type=\"text\">\n                    <mat-autocomplete #auto3=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_industries | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n            </div>\n\n            <br/>\n            <mat-card>Education details</mat-card>\n            <br/>\n            <p>Latest education detail:</p>\n            <div>\n                <br/>\n\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"schoolName1\"\n                            [matAutocomplete]=\"auto4\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"School Name\"\n                            type=\"text\">\n                    <mat-autocomplete #auto4=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_schools1 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"degree1\"\n                            [matAutocomplete]=\"auto5\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Degree\"\n                            type=\"text\">\n                    <mat-autocomplete #auto5=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_degrees1 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"fieldOfStudy1\"\n                            [matAutocomplete]=\"auto6\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Field of Study\"\n                            type=\"text\">\n                    <mat-autocomplete #auto6=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_fields1 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n            </div>\n\n            <br/>\n\n            <p>Any other education detail:</p>\n            <div>\n\n                <br/>\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"schoolName2\"\n                            [matAutocomplete]=\"auto7\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"School Name\"\n                            type=\"text\">\n                    <mat-autocomplete #auto7=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_schools2 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"degree2\"\n                            [matAutocomplete]=\"auto8\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Degree\"\n                            type=\"text\">\n                    <mat-autocomplete #auto8=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_degrees2 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"fieldOfStudy2\"\n                            [matAutocomplete]=\"auto9\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Field of Study\"\n                            type=\"text\">\n                    <mat-autocomplete #auto9=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_fields2 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n            </div>\n\n            <div class=\"row submit-button-container\">\n                <div class=\"col-md-4\">\n                    <button [disabled]=\"!exampleForm.valid\" class=\"submit-button\" color=\"primary\" mat-raised-button\n                            type=\"submit\">Create\n                    </button>\n                </div>\n            </div>\n\n\n        </form>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FirebaseService} from '../../shared/services/firebase.service';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from \"../../shared/services/auth.service\";\nimport {finalize, map, startWith} from 'rxjs/operators';\nimport * as countries from '../../../assets/Countries.json';\n//for image:\nimport {AngularFireStorage} from \"@angular/fire/storage\";\nimport {Observable} from \"rxjs\";\nimport {Router} from \"@angular/router\";\n\n// import {Observable} from \"rxjs\";\n\n@Component({\n    selector: 'app-new-user',\n    templateUrl: './new-user.component.html',\n    styleUrls: ['./new-user.component.css']\n})\nexport class NewUserComponent implements OnInit {\n\n    exampleForm: FormGroup;\n    validation_messages = {\n        'name': [\n            {type: 'required', message: 'Name is required.'}\n        ],\n\n        'age': [\n            {type: 'required', message: 'Age is required.'},\n        ]\n    };\n\n    //variables for image\n    title = \"cloudsSorage\";\n    selectedFile: File = null;\n    fb_image;\n    downloadURL: Observable<string>;\n    userInfo;\n    //-----\n\n    country = new FormControl();\n    options: string[] = countries.countryList;\n    filteredOptions: Observable<string[]>;\n    gender: string[] = ['Male', 'Female', 'Other'];\n\n    constructor(\n        public firebaseService: FirebaseService,\n        private fb: FormBuilder,\n        private storage: AngularFireStorage,\n        public authService: AuthService,\n        private router: Router,\n    ) {\n    }\n\n    ngOnInit() {\n        this.filteredOptions = this.country.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value))\n            );\n\n        this.createForm();\n        this.authService.user$.subscribe(user => this.userInfo = user);\n        // this.user=getValue(this.authService.user$)\n        console.log(this.userInfo)\n    }\n\n    createForm() {\n        this.exampleForm = this.fb.group({\n            name: ['', Validators.required],\n            age: ['', Validators.required],\n            imageurl: [''],\n            country: [''],\n            gender: ['', [Validators.required]],\n        });\n    }\n\n    resetFields() {\n        // this.avatarLink = \"https://s3.amazonaws.com/uifaces/faces/twitter/adellecharles/128.jpg\";\n        this.exampleForm = this.fb.group({\n            name: new FormControl('', Validators.required),\n            // surname: new FormControl('', Validators.required),\n            age: new FormControl('', Validators.required),\n        });\n    }\n\n    onSubmit(value) {\n        value.country = this.country.value;\n        this.firebaseService.createUser(value, this.fb_image, this.userInfo.uid)\n            .then(\n                res => {\n                    this.router.navigate(['preference']);\n                    this.resetFields();\n\n                }\n            )\n    }\n\n    onFileSelected(event) {\n        var n = Date.now();\n        const file = event.target.files[0];\n        const filePath = `ProfileImages/${n}`;\n        const fileRef = this.storage.ref(filePath);\n        const task = this.storage.upload(`ProfileImages/${n}`, file);\n        task\n            .snapshotChanges()\n            .pipe(\n                finalize(() => {\n                    this.downloadURL = fileRef.getDownloadURL();\n                    this.downloadURL.subscribe(url => {\n                        if (url) {\n                            this.fb_image = url;\n                        }\n                        console.log(this.fb_image);\n\n                    });\n                })\n            )\n            .subscribe(url => {\n                if (url) {\n                    console.log(url);\n                }\n            });\n    }\n\n    private _filter(value: string): string[] {\n        const filterValue = value.toLowerCase();\n        return this.options.filter(option => option.toLowerCase().includes(filterValue));\n    }\n\n\n}\n","<div class=\"form-group col-12\">\n    <input #userPhoto\n           (change)=\"onFileSelected($event)\"\n           autocomplete=\"off\"\n           id=\"file\"\n           name=\"image\"\n           type=\"file\"\n    />\n</div>\n<!--<app-upload-image></app-upload-image>-->\n<form (ngSubmit)=\"onSubmit(exampleForm.value)\" [formGroup]=\"exampleForm\" class=\"create-form\" novalidate>\n\n    <div class=\"form-group\">\n        <mat-form-field class=\"input-style\">\n            <input class=\"form-control\" formControlName=\"name\" matInput placeholder=\"Name\">\n        </mat-form-field>\n        <ng-container *ngFor=\"let validation of validation_messages.name\">\n            <mat-error\n                    *ngIf=\"exampleForm.get('name').hasError(validation.type) && (exampleForm.get('name').dirty || exampleForm.get('name').touched)\">{{validation}}</mat-error>\n        </ng-container>\n    </div>\n\n    <div class=\"form-group\">\n        <mat-radio-group\n                aria-labelledby=\"example-radio-group-label\"\n                class=\"input-style\"\n                formControlName=\"gender\">\n            <mat-radio-button *ngFor=\"let gen of gender\" [value]=\"gen\" class=\"example-radio-button\">\n                {{gen}}\n            </mat-radio-button>\n        </mat-radio-group>\n        <!--                <div *ngIf=\"exampleForm.get('gender').hasError('required')\" class=\"error\">-->\n        <!--                    Gender is required-->\n        <!--                </div>-->\n    </div>\n\n    <!--  <div class=\"form-group\">-->\n    <!--    <mat-form-field class=\"input-style\">-->\n    <!--      <input matInput placeholder=\"Surname\" class=\"form-control\" formControlName=\"surname\">-->\n    <!--    </mat-form-field>-->\n    <!--    <ng-container *ngFor=\"let validation of validation_messages.surname\">-->\n    <!--      <mat-error *ngIf=\"exampleForm.get('surname').hasError(validation.type) && (exampleForm.get('surname').dirty || exampleForm.get('surname').touched)\">{{validation}}</mat-error>-->\n    <!--    </ng-container>-->\n    <!--  </div>-->\n\n    <div class=\"form-group\">\n        <mat-form-field class=\"input-style\">\n            <input class=\"form-control\" formControlName=\"age\" matInput max=\"100\" min=\"0\" placeholder=\"Age\"\n                   type=\"number\">\n        </mat-form-field>\n        <ng-container *ngFor=\"let validation of validation_messages.age\">\n            <mat-error\n                    *ngIf=\"exampleForm.get('age').hasError(validation.type) && (exampleForm.get('age').dirty || exampleForm.get('age').touched)\">{{validation}}</mat-error>\n        </ng-container>\n    </div>\n\n    <div class=\"form-group\">\n        <mat-form-field class=\"example-full-width\">\n            <input\n                    [formControl]=\"country\"\n                    [matAutocomplete]=\"auto\"\n                    aria-label=\"Number\"\n                    matInput\n\n                    placeholder=\"Country\"\n                    type=\"text\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                    {{option}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n    </div>\n\n    <div class=\"row submit-button-container\">\n        <div class=\"col-md-4\">\n            <button [disabled]=\"!exampleForm.valid\" class=\"submit-button\" color=\"primary\" mat-raised-button\n                    type=\"submit\">Create\n            </button>\n        </div>\n    </div>\n\n</form>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-preference',\n  templateUrl: './preference.component.html',\n  styleUrls: ['./preference.component.css']\n})\n\nexport class PreferenceComponent implements OnInit {\n\n   profileBtnClick = function() {\n        this.router.navigate(['edit-user'], {relativeTo: this.route});\n};\n\n\n  constructor(\n    private route: ActivatedRoute,\n    public authService: AuthService,\n    public router: Router,\n    public ngZone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<html>\n<body>\n<div class=\"split left\">\n    <div *ngIf=\"authService.user$ | async as user\">\n        <mat-toolbar color=\"primary\">\n            <div class=\"media\">\n                <a routerLink=\"/user\">\n                    <img alt=\"{{user.displayName}}\"\n                         class=\"align-self-start mr-5 img-thumbnail rounded-circle\"\n                         src=\"{{(user.profile.profileImageUrl) ? user.profile.profileImageUrl : '/assets/images/dummy_profile.png'}}\">\n                </a>\n<!--                <div class=\"media-body\">-->\n<!--                    <h1>Hello: <strong>{{(user.displayName) ? user.displayName : 'User'}}</strong></h1>-->\n<!--                    <p>User ID: <strong>{{user.uid}}</strong></p>-->\n<!--                    <p>Email: <strong>{{user.email}}</strong></p>-->\n                    <!-- <p>Email Verified: <strong>{{user.emailVerified}}</strong></p> -->\n<!--                </div>-->\n            </div>\n\n            <span class=\"spacer\">{{user.displayName}}</span>\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"menu button\"\n            style=\"color: antiquewhite\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n              <button mat-menu-item (click)=\"profileBtnClick();\">\n                <mat-icon>face</mat-icon>\n                <span>Profile</span>\n              </button>\n              <button mat-menu-item (click)=\"authService.SignOut()\">\n                <mat-icon>logout</mat-icon>\n                <span>Logout</span>\n              </button>\n            </mat-menu>\n        </mat-toolbar>\n    </div>\n        <button color=#b2fef7\n                class=\"preference-btn\"\n            routerLink=\"/preference\">\n        My Tags\n        </button>\n    <app-chat-list></app-chat-list>\n</div>\n\n<div class=\"split right\">\n        <div class=\"centered\">\n            <router-outlet></router-outlet>\n        </div>\n</div>\n</body>\n</html>","import {Component, NgZone, OnInit} from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n\n  channel = false;\n\n    countChange(event) {\n      this.channel = event;\n    }\n  constructor(\n      public authService: AuthService,\n      public router: Router,\n      public ngZone: NgZone) {}\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Left Navbar -->\n<!--<div class=\"split left\">-->\n<!--    <app-chat-list (update)=\"countChange($event)\" [channel]=false></app-chat-list>-->\n<!--    <div class=\"text-center\" style=\"position: absolute; bottom: 5%; right:40%\">-->\n<!--        <button (click)=\"authService.SignOut()\" class=\"btn btn-primary btn-lg\" style=\"margin-top: auto;\" type=\"button\">-->\n<!--            Log out-->\n<!--        </button>-->\n<!--    </div>-->\n<!--</div>-->\n\n<!-- Upload Headshot -->\n\n<h1 class=\"h2\">User Profile</h1>\n<div *ngIf=\"authService.user$ | async as user\" class=\"row\">\n  <div class=\"text-center\">\n    <div class=\"col-md-12\">\n      <div class=\"media\">\n        <img alt=\"{{user.displayName}}\"\n             class=\"small\" src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\">\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"form-group\">\n  <label for=\"userPhoto1\">\n    Upload my photo here\n  </label>\n  <input class=\"form-control-file\" id=\"userPhoto1\" type=\"file\">\n</div>\n\n<form>\n  <!-- Personal Email -->\n  <div class=\"form-group\">\n    <label class=\"tab\">My Email Address</label>\n    <input class=\"form-control\" id=\"exampleFormControlInput1\"\n           placeholder=\"robot@hexchat.com\" type=\"email\">\n  </div>\n\n  <!-- Gender Info -->\n  <label class=\"tab\"> My gender is: </label>\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" id=\"userGender1\" name=\"inlineRadioOptions\" type=\"radio\" value=\"option1\">\n    <label class=\"form-check-label\" for=\"userGender1\">Female</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" id=\"userGender2\" name=\"inlineRadioOptions\" type=\"radio\" value=\"option2\">\n    <label class=\"form-check-label\" for=\"userGender2\">Male</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" id=\"userGender3\" name=\"inlineRadioOptions\" type=\"radio\" value=\"option3\">\n    <label class=\"form-check-label\" for=\"userGender3\">Other</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" id=\"userGender4\" name=\"inlineRadioOptions\" type=\"radio\" value=\"option4\">\n    <label class=\"form-check-label\" for=\"userGender4\">Secret</label>\n  </div>\n\n  <!-- Age Info -->\n  <div class=\"form-group\">\n    <label for=\"userAge\">I belong to this range of age.</label>\n    <select class=\"form-control\" id=\"userAge\">\n      <option>18-20</option>\n      <option>21-25</option>\n      <option>26-30</option>\n      <option>31-35</option>\n      <option>36-40</option>\n      <option>41-50</option>\n      <option>51-60</option>\n      <option>60+</option>\n    </select>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"col-md-6 mb-3\">\n      <label for=\"userCity\">I live in </label>\n      <input class=\"form-control\" id=\"userCity\" required type=\"text\">\n    </div>\n\n    <div class=\"col-md-3 mb-3\">\n      <label for=\"userState\">State</label>\n      <select class=\"custom-select\" id=\"userState\" required>\n        <option disabled selected value=\"\">Choose...</option>\n        <option>...</option>\n      </select>\n    </div>\n\n    <!-- Zipcode div-->\n    <div class=\"col-md-3 mb-3\">\n      <label for=\"userZipcode\">Zip</label>\n      <input class=\"form-control\" id=\"userZipcode\" required type=\"text\">\n    </div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input class=\"form-check-input\" id=\"userCheck\" required type=\"checkbox\" value=\"\">\n      <label class=\"form-check-label\" for=\"userCheck\">\n        Click to protect my personal information.\n      </label>\n    </div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <label for=\"userText\">Things I want to share...\n    </label>\n    <textarea class=\"form-control\" id=\"userText\"\n              placeholder=\"E.g. I like skiing and skating in my leisure time./I have a dog named Lambda.\"\n              rows=\"3\"></textarea>\n  </div>\n\n  <button class=\"btn btn-primary btn-lg\" type=\"button\" type=\"submit\">\n    Renew my profile\n  </button>\n\n</form>\n\n<!-- Borrow -->\n","import {Component, OnInit} from '@angular/core';\nimport {FirebaseService} from '../../shared/services/firebase.service';\nimport {AuthService} from '../../shared/services/auth.service';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport {first} from \"rxjs/operators\";\n\nexport interface Category1 {\n  name: string;\n}\n\n@Component({\n  selector: 'app-rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.css']\n})\n\nexport class RatingComponent implements OnInit {\n  showSuccessMsg = false;\n  userId;\n  // These are environment variables for chips/tags.\n  visible = true;\n  selectable = false;\n  removable = true;\n  addOnBlur = true;\n  isUserInput = true;\n  // userTags = this.firebaseService.getUserTags(this.userId);\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  tags1;\n  tags2;\n  tags3;\n  drawer1: Category1[] = [];\n  drawer2: Category1[] = [];\n  drawer3: Category1[] = [];\n  private tags;\n  chipControl = {tags1: new Set(), tags2: new Set(), tags3: new Set()};\n  submitted = this.alreadySub();\n\n\n  constructor(public firebaseService: FirebaseService,\n              public authService: AuthService,\n              private fb: FormBuilder) {}\n\n  async ngOnInit() {\n    this.authService.user$.subscribe(user => {\n      if (user) {\n        this.userId = user.uid;\n      }\n    });\n    this.tags = await this.firebaseService.getTest();\n    this.tags1 = await this.firebaseService.getTest().then(aws => aws.tags1);\n    this.tags2 = await this.firebaseService.getTest().then(aws => aws.tags2);\n    this.tags3 = await this.firebaseService.getTest().then(aws => aws.tags3);\n\n    for (const item of this.tags1) {\n    this.drawer1.push({name: item.toString()});\n    }\n\n    for (const item of this.tags2) {\n    this.drawer2.push({name: item.toString()});\n    }\n\n    for (const item of this.tags3) {\n    this.drawer3.push({name: item.toString()});\n    }\n\n\n  }\n\n  async alreadySub() {\n        const pref = await this.authService.user$.pipe(first()).toPromise()\n            .then(ams => ams.preference);\n        console.log(\"hi\", Object.keys(pref).length);\n\n    }\n\n\n  onSubmit(sth, tags) {\n        // value.avatar = this.item.avatar;\n        console.log('vali', [...tags]);\n        this.firebaseService.updatePreference(this.userId, sth, [...tags]);\n    }\n\n  toggleChip = (chip: any, tagField) => {\n    const addChip = () => { this.chipControl[tagField].add(chip); };\n    const removeChip = () => { this.chipControl[tagField].delete(chip); };\n\n    this.chipControl[tagField].has(chip) ? removeChip() : addChip();\n  }\n\n\n  // chips(tagField: string) {\n  //   const field = this.chipControl;\n  //   return field.tagField.value;\n  //    }\n\n  //   add(event: MatChipInputEvent, thing): void {\n  //   const input = event.input;\n  //   const value = event.value;\n  //   // Add a tag\n  //   if ((value || '').trim()) {\n  //     thing.push({name: value.trim()});\n  //   }\n  //\n  //   // Reset the input value\n  //   if (input) {\n  //     input.value = '';\n  //   }\n  // }\n  //\n  //\n  // remove(exp: Category1, thing): void {\n  //   const index = thing.indexOf(exp);\n  //\n  //   if (index >= 0) {\n  //     thing.splice(index, 1);\n  //   }\n  // }\n\n\n\n\n}\n","<h2>Choose one field of preferences.</h2>\n<br/>\n\n\n<mat-accordion>\n<!--  Template for one group of tags.-->\n<mat-expansion-panel>\n  <mat-expansion-panel-header>\n    Background Tags\n  </mat-expansion-panel-header>\n\n    <mat-chip-list #chipList aria-label=\"Background selection\" [multiple]=\"true\" selectable>\n      <mat-chip *ngFor=\"let option of tags1\" [selected]=\"chipControl.tags1.has(option)\"\n                (click)=\"toggleChip(option, 'tags1')\">\n        {{option}}\n      </mat-chip>\n    </mat-chip-list>\n\n  <mat-action-row>\n<button type=\"button\" class=\"btn btn-primary\" color=\"primary\"\n          (click)=\"onSubmit(1, chipControl.tags1)\">Submit</button>\n  </mat-action-row>\n</mat-expansion-panel>\n\n<br/>\n\n\n  <mat-expansion-panel>\n  <mat-expansion-panel-header>\n    Industrial Tags\n  </mat-expansion-panel-header>\n\n    <mat-chip-list #Chiplist aria-label=\"Background selection\" [multiple]=\"true\" selectable>\n      <mat-chip *ngFor=\"let option of tags2\" [selected]=\"chipControl.tags2.has(option)\"\n                (click)=\"toggleChip(option, 'tags2')\">\n        {{option}}\n      </mat-chip>\n    </mat-chip-list>\n\n  <mat-action-row>\n  <button type=\"button\" class=\"btn btn-primary\" color=\"primary\"\n          (click)=\"onSubmit(2, chipControl.tags2)\">Submit</button>\n  </mat-action-row>\n</mat-expansion-panel>\n  <br/>\n\n<mat-expansion-panel>\n  <mat-expansion-panel-header>\n    Interest Tags\n  </mat-expansion-panel-header>\n\n    <mat-chip-list #Chiplist aria-label=\"Background selection\" [multiple]=\"true\" selectable>\n      <mat-chip *ngFor=\"let option of tags3\" [selected]=\"chipControl.tags3.has(option)\"\n\n                (click)=\"toggleChip(option, 'tags3')\">\n        {{option}}\n      </mat-chip>\n    </mat-chip-list>\n\n  <mat-action-row>\n    <button type=\"button\" class=\"btn btn-primary\" color=\"primary\"\n          (click)=\"onSubmit(3, chipControl.tags3)\">Submit</button>\n  </mat-action-row>\n</mat-expansion-panel>\n\n\n\n\n</mat-accordion>\n\n\n\n<!--<h4 *ngIf=\"submitted>1\">-->\n<!--  Thank you! You have already submitted your preference.-->\n\n<!--  We are hurrying to match you to a group.-->\n<!--</h4>-->\n\n\n\n<br/>\n\n\n<!--Below here is the function to add and remove tags.-->\n<!--<mat-expansion-panel>-->\n<!--  <mat-expansion-panel-header>-->\n<!--    Customized Tags-->\n<!--  </mat-expansion-panel-header>-->\n\n<!--<mat-form-field class=\"example-chip-list\">-->\n<!--  <mat-chip-list #chipList3 aria-label=\"Hobby selection\">-->\n<!--    <mat-chip *ngFor=\"let exp2 of drawer3\" [selectable]=\"selectable\"-->\n<!--              [removable]=\"removable\" (removed)=\"remove(exp2, this.drawer3)\">-->\n<!--      {{exp2.name}}-->\n<!--      <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>-->\n<!--    </mat-chip>-->\n<!--    <label>-->\n<!--      <input (matChipInputTokenEnd)=\"add($event, this.drawer3)\"-->\n<!--             [matChipInputAddOnBlur]=\"addOnBlur\"-->\n<!--             [matChipInputFor]=\"chipList3\"-->\n<!--             [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"-->\n<!--             [multiple]=true-->\n<!--             placeholder=\"Add your own specific interests and find mates.\">-->\n<!--    </label>-->\n<!--  </mat-chip-list>-->\n<!--</mat-form-field>-->\n\n<!--  <mat-action-row>-->\n<!--    <button type=\"button\" class=\"btn btn-primary\" color=\"primary\"-->\n<!--          (click)=\"onSubmit(drawer1, drawer2, drawer3)\">Submit</button>-->\n<!--  </mat-action-row>-->\n<!--</mat-expansion-panel>-->\n\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\nimport { ChatService } from '../../shared/services/chat.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-showprofile',\n  templateUrl: './showprofile.component.html',\n  styleUrls: ['./showprofile.component.css']\n})\nexport class ShowProfileComponent implements OnInit {\n  users$: Observable<any>;\n\n  constructor(\n    private route: ActivatedRoute,\n    public cs: ChatService,\n   ) { }\n\n  ngOnInit() {\n    const userID = this.route.snapshot.paramMap.get('id');\n    console.log(\"userid on paramMap\" ,userID)\n    this.users$ = this.cs.userID2usermail_(userID);\n  }\n\n}\n","<div *ngIf=\"users$ | async as users\">\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title><img [src]=\"users.profile.profileImageUrl\" class=\"header-image\"></mat-card-title>\n            <div>Name: {{users.profile.name}}</div>\n        </mat-card-header>\n        <mat-card-content>\n            <div>Gender: {{users.profile.gender}}</div>\n            <div>Age: {{users.profile.age}}</div>\n            <div>Country: {{users.profile.country}}</div>\n        </mat-card-content>\n    </mat-card>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\n\nexport class SignInComponent implements OnInit {\n\n  constructor(\n    // Inject AuthService class here so that these services will be available throughout the same template\n    public authService: AuthService\n    ) { }\n\n  ngOnInit() { }\n\n}\n\nimport { NgModule } from '@angular/core';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\n\nconst modules = [\n  MatCardModule,\n  MatInputModule,\n  MatButtonModule\n];\n\n@NgModule({\n  imports: modules,\n  exports: modules,\n})\nexport class MaterialModule {}\n","<html>\n\n\n  <body class=\"bgimg-1\">\n    <mat-toolbar color=\"primary\">\n  <button mat-button class=\"hexchat-text\" routerLink=\"/home\">Hexchat</button>\n<!--    <span style=\"padding-right: 1rem\">Home</span>-->\n</mat-toolbar>\n\n\n<mat-card>\n  <mat-card-content>\n\n      <mat-card-title style=\"color: #8161ba;\">Recommended</mat-card-title>\n      <button mat-raised-button class=\"fb connect\" (click)=\"authService.FacebookAuthLogin()\" >\n\n              Login with Facebook</button>\n        </mat-card-content>\n</mat-card>\n      <mat-card>\n  <mat-card-content>\n      <mat-card-title style=\"color: #9877d1;\">Email Login</mat-card-title>\n      <mat-form-field>\n        <input matInput placeholder=\"Email\" #userEmail required>\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput type=\"password\" placeholder=\"Password\" \n        (keyup.enter)=\"authService.SignIn(userEmail.value, userPassword.value)\"\n        #userPassword required>\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" style=\"color: white;\"\n              (click)=\"authService.SignIn(userEmail.value, userPassword.value)\">\n              Login</button>\n      <mat-card-actions>\n\n          <button mat-button color=\"primary\" routerLink=\"/join\">Not a user yet?</button>\n      </mat-card-actions>\n  </mat-card-content>\n</mat-card>\n\n\n</body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css', '../signin/signin.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<html>\n\n  <body class=\"bgimg-1\">\n    <mat-toolbar color=\"primary\">\n  <button mat-button class=\"hexchat-text\" routerLink=\"/home\">Hexchat</button>\n</mat-toolbar>\n\n\n<mat-card>\n  <mat-card-content>\n      <mat-card-title style=\"color: #9877d1;\">Recommended</mat-card-title>\n      <button mat-raised-button class=\"fb connect\" (click)=\"authService.FacebookAuth()\" >\n              Sign Up with Facebook</button>\n        </mat-card-content>\n</mat-card>\n      <mat-card>\n  <mat-card-content>\n      <mat-card-title style=\"color: #9877d1;\">Sign Up with Email</mat-card-title>\n      <mat-form-field>\n        <input matInput placeholder=\"Email\" #userEmail required>\n      </mat-form-field>\n\n     <mat-form-field>\n        <input matInput type=\"password\" placeholder=\"Password\"\n         (keyup.enter)=\"authService.SignUp(userEmail.value, userPassword.value)\"\n         #userPassword required>\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" style=\"color: white;\"\n              (click)=\"authService.SignUp(userEmail.value, userPassword.value)\">\n              Sign Up</button>\n      <mat-card-actions>\n\n          <button mat-button color=\"primary\" routerLink=\"/signin\">Already have an account?</button>\n      </mat-card-actions>\n  </mat-card-content>\n</mat-card>\n\n\n</body>\n</html>\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSnackBarModule} from '@angular/material/snack-bar'\n\n// import {MatOptionModule} from '@angular/material/option';\n\nconst material = [\n  FormsModule,\n  ReactiveFormsModule,\n  MatToolbarModule,\n  MatInputModule,\n  MatCardModule,\n  MatMenuModule,\n  MatIconModule,\n  MatButtonModule,\n  MatTableModule,\n  MatDividerModule,\n  MatSlideToggleModule,\n  MatSelectModule,\n  MatAutocompleteModule,\n  MatListModule,\n  MatSnackBarModule,\n  // MatOptionModule,\n  MatProgressSpinnerModule];\n\n@NgModule({\n  exports: [material],\n  imports: [CommonModule,\n      material\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n} from '@angular/router';\n\nimport { AuthService } from '../services/auth.service';\nimport { Observable } from 'rxjs';\nimport { tap, map, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ) { }\n\n  canActivate(next, state): Observable<boolean> {\n    return this.authService.user$.pipe(\n      take(1),\n      map(user => !!user), // <-- map to boolean\n      tap(loggedIn => {\n        if (!loggedIn) {\n          console.log('access denied');\n          this.router.navigate(['/']);\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// components\nimport { HomeComponent } from '../../components/home/home.component';\nimport { PreferenceComponent} from '../../components/preference/preference.component';\nimport { SignInComponent } from '../../components/signin/signin.component';\nimport { SignUpComponent } from '../../components/signup/signup.component';\n\nimport { RatingComponent } from '../../components/rating/rating.component';\nimport { ChatMsgsComponent } from '../../components/chat-msgs/chat-msgs.component';\nimport { ProfileComponent } from '../../components/profile/profile.component';\n\nimport { ChatComponent } from '../../components/chat/chat.component';\nimport { ShowProfileComponent } from '../../components/showprofile/showprofile.component';\nimport { FrontComponent } from '../../components/front/front.component';\n\nimport { NewUserComponent } from '../../components/new-user/new-user.component';\nimport { NewUserFacebookComponent } from '../../components/new-user-facebook/new-user-facebook.component';\nimport { EditUserComponent } from '../../components/edit-user/edit-user.component';\n\n// Import canActivate guard services\nimport { AuthGuard } from '../../shared/guard/auth.guard';\n\n// Include route guard in routes array\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'join', component: SignUpComponent, canActivate: []},\n  { path: 'signin', component: SignInComponent, canActivate: []},\n  // { path: 'new-user', component: NewUserComponent, canActivate: [AuthGuard]},\n  { path: 'new-user', component: NewUserFacebookComponent, canActivate: [AuthGuard]},\n  // { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n\n  { path: 'front', component: FrontComponent},\n  // { path: 'chats/:id', component: ChatComponent, canActivate: [AuthGuard]},\n\n  { path: 'user',\n    component: PreferenceComponent,\n    canActivate: [AuthGuard],\n    children:[\n      { path: '', component: RatingComponent},\n      { path: 'profile', component: ProfileComponent},\n      { path: 'edit-user', component: EditUserComponent},\n      { path: 'chats/:id', component: ChatComponent,\n        children:[\n            { path: 'user-profile/:id',\n              component: ShowProfileComponent,\n            }\n        ]\n       }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase/app';\nimport * as firebase from 'firebase';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { User } from './user.model';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, first, map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n//    user$: Observable<User>;\n    user$: Observable<any>;\n    // userData: any;\n\n  constructor(\n    private afAuth: AngularFireAuth, // Inject Firebase auth service\n    private afs: AngularFirestore,  // Inject FIrestore service\n    private router: Router,\n    public ngZone: NgZone          // NgZone service to remove outside scope warning\n  ) {\n    this.user$ = this.afAuth.authState.pipe(\n      switchMap(user => {\n        if (user) {\n          return this.afs.doc<User>(`users/${user.uid}`).valueChanges();\n        } else {\n          return of(null);\n        }\n      })\n    );\n  }\n\n  getUser() {\n    return this.user$.pipe(first()).toPromise();\n  }\n\n  // Sign in with email/password\n  async SignIn(email, password) {\n    const response = await firebase.auth().signInWithEmailAndPassword(email, password)\n      .catch(function(error) {\n        var errorMessage = error.message;\n        alert(errorMessage);\n        console.log(error);\n      });\n    // const token = await response.user.getIdToken();\n    console.log('THIS IS RESPONSE', response);\n    // console.log('THIS IS TOKEN', token);\n    this.router.navigate(['user']);\n    console.log('finish login and route to preference')\n    // this.SetUserData(response.user)\n  }\n\n  // Sign up with email/password\n  async SignUp(email, password) {\n    const response = await firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then(response => {\n        this.SetUserData(response.user)\n        console.log('THIS IS RESPONSE', response);\n        this.router.navigate(['new-user']);\n      })\n      .catch(function(error) {\n        var errorMessage = error.message;\n        alert(errorMessage);\n        console.log(error);\n      });\n    // const token = await response.user.getIdToken();\n    // console.log('THIS IS RESPONSE', response);\n    // console.log('THIS IS TOKEN', token);\n    // this.router.navigate(['new-user']);\n    // console.log('finish login and route to preference')\n    // this.SetUserData(response.user)\n  }\n\n  // Sign up with Facebook\n  async FacebookAuth() {\n    // return new auth.FacebookAuthProvider();\n    const provider = new firebase.auth.FacebookAuthProvider();\n    const credential = await this.afAuth.signInWithPopup(provider);\n    this.router.navigate(['new-user']);\n    console.log(credential.user);\n    return this.SetUserData(credential.user);\n  }\n\n    // Sign in with Facebook\n  async FacebookAuthLogin() {\n    // return new auth.FacebookAuthProvider();\n    const provider = new firebase.auth.FacebookAuthProvider();\n    const credential = await this.afAuth.signInWithPopup(provider);\n    this.router.navigate(['user']);\n    // return this.SetUserData(credential.user);\n  }\n\n  // Update data in Firestore\n  private SetUserData(user){\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      photoURL: user.photoURL,\n      displayName: user.displayName,\n      emailVerified: user.emailVerified,\n      profile: {\n        profileImageUrl: user.photoURL,\n        name: user.displayName\n      },\n      preference: {}\n    };\n    return userRef.set(userData, {\n      merge: true\n    });\n  }\n\n  async SignOut() {\n    await this.afAuth.signOut();\n    return this.router.navigate(['']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { firestore } from 'firebase/app';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Observable, combineLatest, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor(\n    private afs: AngularFirestore,\n    private auth: AuthService,\n    private router: Router\n  ) {}\n\n  get(chatId) {\n    return this.afs\n      .collection<any>('chats')\n      .doc(chatId)\n      .snapshotChanges()\n      .pipe(\n        map(doc => {\n          console.log('payload id', doc.payload.id);\n          // doc.payload.id is chatId\n          return { id: doc.payload.id,\n                   ...doc.payload.data() as {}\n           };\n        })\n      );\n  }\n\n  userID2usermail_(userID){\n      console.log(\"clicked userID is \", userID);\n      return this.afs\n      .collection<any>('users')\n      .doc(userID)\n      .snapshotChanges()\n      .pipe(\n        map(doc => {\n          console.log('payload id', doc.payload.id);\n          // doc.payload.id is chatId\n          return { id: doc.payload.id,\n                   ...doc.payload.data() as {}\n           };\n        })\n      );\n   }\n\n\n  getUserChats() {\n    return this.auth.user$.pipe(\n      switchMap(user => {\n        return this.afs\n          .collection('chats', ref => ref.where('uid', 'array-contains', user.uid))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data: Object = a.payload.doc.data();\n                const id = a.payload.doc.id;\n                return { id, ...data };\n              });\n            })\n          );\n      })\n    );\n  }\n\n  async create() {\n    const { uid } = await this.auth.getUser();\n\n    const data = {\n      uid,\n      createdAt: Date.now(),\n      messages_cnt: 0,\n      messages: [],\n      metadata: {},\n      connection: {},\n      questionnaire: {}\n    };\n\n    const docRef = await this.afs.collection('chats').add(data);\n\n    return this.router.navigate(['chats', docRef.id]);\n  }\n\n  async sendMessage(chatId, content) {\n    const { uid } = await this.auth.getUser();\n\n    const data = {\n      uid,\n      content,\n      createdAt: Date.now()\n    };\n\n    if (uid) {\n      const ref = this.afs.collection('chats').doc(chatId);\n      return ref.update({\n        messages: firestore.FieldValue.arrayUnion(data)\n      });\n    }\n  }\n\n  async deleteMessage(chat, msg) {\n    const { uid } = await this.auth.getUser();\n\n    const ref = this.afs.collection('chats').doc(chat.id);\n    console.log(msg);\n    if (chat.uid === uid || msg.uid === uid) {\n      // Allowed to delete\n      delete msg.user;\n      return ref.update({\n        messages: firestore.FieldValue.arrayRemove(msg)\n      });\n    }\n  }\n\n  joinUsers(chat$: Observable<any>) {\n    let chat;\n    const joinKeys = {};\n\n    return chat$.pipe(\n      switchMap(c => {\n        // Unique User IDs\n        chat = c;\n        const uids = Array.from(new Set(c.messages.map(v => v.uid)));\n\n        // Firestore User Doc Reads\n        const userDocs = uids.map(u =>\n          this.afs.doc(`users/${u}`).valueChanges()\n        );\n\n        return userDocs.length ? combineLatest(userDocs) : of([]);\n      }),\n      map(arr => {\n        arr.forEach(v => (joinKeys[(<any>v).uid] = v));\n        chat.messages = chat.messages.map(v => {\n          return { ...v, user: joinKeys[v.uid] };\n        });\n\n        return chat;\n      })\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {AngularFirestore} from '@angular/fire/firestore';\nimport {Observable, of} from 'rxjs';\nimport {first, switchMap} from 'rxjs/operators';\nimport {Test} from './user.model';\nimport {AngularFireAuth} from '@angular/fire/auth';\n\n\n@Injectable({\n    providedIn: 'root'\n})\n\n\nexport class FirebaseService {\n\n    test$: Observable<any>;\n\n    constructor(public db: AngularFirestore,\n                private afAuth: AngularFireAuth) {\n        this.test$ = this.afAuth.authState.pipe(\n            switchMap(user => {\n                if (user) {\n                    return this.db.doc<Test>(`group/1YsYSkVW2lZGUXynAI8l`).valueChanges();\n                } else {\n                    return of(null);\n                }\n            })\n        );\n\n    }\n\n\n    async getTest() {\n        const tags = await this.test$.pipe(first()).toPromise()\n            .then(ams => ams.tags);\n        const tags1 = Object.keys(tags.background);\n        const tags2 = Object.keys(tags.career);\n        const tags3 = Object.keys(tags.interest);\n        console.log({tags1, tags2, tags3});\n        return {tags1, tags2, tags3};\n\n    }\n\n    createUser(value, imageurl, uid) {\n        return this.db.collection('users').doc(uid).update({\n            profile: {\n                name: value.name,\n                gender: value.gender,\n                country: value.country,\n                age: parseInt(value.age),\n                profileImageUrl: imageurl\n            },\n            preference: {}\n        }).then(function () {\n            console.log('User profile created');\n        });\n\n    }\n\n    createUserFacebook(value, name, imageurl, uid) {\n        console.log(value.countries);\n        return this.db.collection('users').doc(uid).update({\n\n            profile: {\n                name: value.userAppName,\n                gender: value.gender,\n                // nameToSearch: value.name.toLowerCase(),\n                userFbName: name,\n                age: parseInt(value.age),\n                profileImageUrl: imageurl,\n                country: value.countries,\n                languages: value.languages,\n                interests: value.interests,\n                jobTitle: value.jobTitle,\n                industry: value.industry,\n                school1Info: value.school1Info,\n                school2Info: value.school2Info\n\n\n            },\n            preference: {}\n        }).then(function () {\n\n            console.log('User profile created');\n        });\n\n    }\n\n\n    updateUser(userKey,value,profileImageUrl) {\n        return this.db.collection('users').doc(userKey).update({\n            profile: {\n                name: value.userAppName,\n                age: parseInt(value.age),\n                gender: value.gender,\n                country: value.countries,\n                languages: value.languages,\n                interests: value.interests,\n                jobTitle: value.jobTitle,\n                industry: value.industry,\n                school1Info: value.school1Info,\n                school2Info: value.school2Info,\n                profileImageUrl: profileImageUrl\n            }\n        }).then(function () {\n            console.log('User profile updated');\n        });\n        // return this.db.collection('users').doc(userKey).set(value);\n    }\n\n\n    updatePreference(userKey, sth, tags) {\n        return this.db.collection('users').doc(userKey).update({\n            preference: {\n                major: sth,\n                selected_tags: tags\n            },\n            // tslint:disable-next-line:only-arrow-functions\n        });\n        // return this.db.collection('users').doc(userKey).set(value);\n    }\n\n    // getTags() {\n    //\n    //     const groupRef = this.db.collection('group',\n    //         ref => ref.orderBy('tags', 'asc'));\n    //     const secondRef = this.db.collection('group').doc('1YsYSkVW2lZGUXynAI8l');\n    //     // console.log('test-get', secondRef.get());\n    //     return secondRef.snapshotChanges().pipe(\n    //     map(doc => {\n    //       console.log('payload id', doc.payload.doc.id);\n    //       console.log('tryit', doc.payload.doc.data().tags);\n    //       return { id: doc.payload.doc.id,\n    //                ...doc.payload.doc.data() as {}\n    //        };\n    //     })\n    //     );\n    //\n    // }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n  apiKey: \"AIzaSyDRB2-4d-joGKpmSGWW3r2NsY1UeuMdN2Q\",\n  authDomain: \"msds603-85328.firebaseapp.com\",\n  databaseURL: \"https://msds603-85328.firebaseio.com\",\n  projectId: \"msds603-85328\",\n  storageBucket: \"msds603-85328.appspot.com\",\n  messagingSenderId: \"516534688358\",\n  appId: \"1:516534688358:web:a26ea92c106aa4ada9eba7\",\n  measurementId: \"G-FS6SEZ8M5X\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}