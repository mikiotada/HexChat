{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chat-list/chat-list.component.ts","webpack:///src/app/components/chat-list/chat-list.component.html","webpack:///src/app/components/chat-msgs/chat-msgs.component.ts","webpack:///src/app/components/chat-msgs/chat-msgs.component.html","webpack:///src/app/components/chat/chat.component.ts","webpack:///src/app/components/chat/chat.component.html","webpack:///src/app/components/edit-user/edit-user.component.ts","webpack:///src/app/components/edit-user/edit-user.component.html","webpack:///src/app/components/front/front.component.ts","webpack:///src/app/components/front/front.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/new-user-facebook/new-user-facebook.component.ts","webpack:///src/app/components/new-user-facebook/new-user-facebook.component.html","webpack:///src/app/components/new-user/new-user.component.ts","webpack:///src/app/components/new-user/new-user.component.html","webpack:///src/app/components/preference/preference.component.ts","webpack:///src/app/components/preference/preference.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/rating/rating.component.html","webpack:///src/app/components/rating/rating.component.ts","webpack:///src/app/components/showprofile/showprofile.component.ts","webpack:///src/app/components/showprofile/showprofile.component.html","webpack:///src/app/components/signin/signin.component.ts","webpack:///src/app/components/signin/signin.component.html","webpack:///src/app/components/signup/signup.component.ts","webpack:///src/app/components/signup/signup.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/shared/guard/auth.guard.ts","webpack:///src/app/shared/routing/app-routing.module.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/chat.service.ts","webpack:///src/app/shared/services/firebase.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","imports","providers","bootstrap","ChatListComponent","route","authService","router","cs","chatList","group_name","time","last_msg","img_url","showChat","console","log","navigate","relativeTo","userChats$","getUserChats","ChatMsgsComponent","ChatComponent","afs","showUser","chatId","snapshot","paramMap","get","source","chat$","joinUsers","scrollBottom","chatContainer","nativeElement","scrollTop","scrollHeight","scrollToBottom","newMsg","alert","sendMessage","i","msg","createdAt","setTimeout","window","scrollTo","document","body","EditUserComponent","firebaseService","fb","storage","snackBar","selectedFile","validation_messages","type","message","country","options","countries","language","options_lang","languages","interest","options_interests","interests","jobTitle","options_jobs","industry","options_industries","schoolName1","options_schools1","degree1","options_degrees1","fieldOfStudy1","options_fieldOfStudy1","schoolName2","options_schools2","degree2","options_degrees2","fieldOfStudy2","options_fieldOfStudy2","visible","selectable","removable","addOnBlur","isUserInput","separatorKeysCodes","gender","filteredOptions","valueChanges","pipe","value","_filter","filteredOptions_lang","filteredOptions_interests","filteredOptions_jobs","filteredOptions_industries","filteredOptions_schools1","filteredOptions_schools2","filteredOptions_degrees1","filteredOptions_degrees2","filteredOptions_fields1","filteredOptions_fields2","user$","subscribe","user","userId","uid","userProfile","profile","fb_image","profileImageUrl","createForm","setValue","school1Info","schoolName","school2Info","degree","fieldOfStudy","exampleForm","group","userAppName","name","required","age","event","thing","input","trim","push","exp","index","indexOf","splice","variable","filteredArray","filter","el","removeEmptyStrings","updateUser","res","open","duration","horizontalPosition","n","Date","now","file","target","files","filePath","fileRef","ref","task","upload","snapshotChanges","downloadURL","getDownloadURL","url","filterValue","toLowerCase","option","includes","FrontComponent","HomeComponent","NewUserFacebookComponent","createUserFacebook","onFileSelected","NewUserComponent","userInfo","imageurl","createUser","resetFields","onSubmit","PreferenceComponent","ngZone","profileBtnClick","ProfileComponent","channel","RatingComponent","showSuccessMsg","drawer1","drawer2","drawer3","chipControl","tags1","Set","tags2","tags3","submitted","alreadySub","toggleChip","chip","tagField","addChip","add","removeChip","has","getTest","tags","aws","item","toString","toPromise","ams","preference","pref","Object","length","sth","updatePreference","ShowProfileComponent","userID","users$","userID2usermail_","SignInComponent","modules","MaterialModule","SignUpComponent","material","AuthGuard","next","state","loggedIn","providedIn","routes","path","redirectTo","pathMatch","component","canActivate","children","AppRoutingModule","forRoot","AuthService","afAuth","authState","doc","email","password","signInWithEmailAndPassword","error","errorMessage","response","createUserWithEmailAndPassword","SetUserData","provider","FacebookAuthProvider","signInWithPopup","credential","userRef","userData","photoURL","displayName","emailVerified","set","merge","signOut","ChatService","auth","collection","payload","data","where","actions","map","a","getUser","messages_cnt","messages","metadata","connection","questionnaire","docRef","content","update","FieldValue","arrayUnion","chat","arrayRemove","joinKeys","c","uids","Array","from","v","userDocs","u","arr","forEach","FirebaseService","db","test$","background","career","parseInt","userFbName","userKey","major","selected_tags","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hexchat';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {  FormGroup, FormControl, FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatRadioModule} from '@angular/material/radio';\nimport { CommonModule } from '@angular/common';\n\n\n// import { SelectAutocompleteModule } from 'mat-select-autocomplete';\nimport { MultiSelectAllModule } from '@syncfusion/ej2-angular-dropdowns';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MAT_CHIPS_DEFAULT_OPTIONS} from '@angular/material/chips';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\n\n// routing\nimport { AppRoutingModule } from './shared/routing/app-routing.module';\n\nimport { AppComponent } from './app.component';\n// Firebase services + environment module\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\n// Google Analytics\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\n\n// Auth service\nimport { AuthService } from './shared/services/auth.service';\nimport { FirebaseService } from './shared/services/firebase.service';\n\n// Components that we created\nimport { HomeComponent } from './components/home/home.component';\nimport { SignInComponent } from './components/signin/signin.component';\nimport { SignUpComponent } from './components/signup/signup.component';\nimport { ProfileComponent} from './components/profile/profile.component';\nimport { PreferenceComponent } from './components/preference/preference.component';\nimport { RatingComponent } from './components/rating/rating.component';\nimport { ChatListComponent } from './components/chat-list/chat-list.component';\nimport { ChatMsgsComponent } from './components/chat-msgs/chat-msgs.component';\nimport { ChatComponent } from './components/chat/chat.component';\nimport { FrontComponent } from './components/front/front.component';\nimport { MaterialModule } from './material/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NewUserComponent } from './components/new-user/new-user.component';\nimport { EditUserComponent } from './components/edit-user/edit-user.component';\nimport { NewUserFacebookComponent } from './components/new-user-facebook/new-user-facebook.component';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { ShowProfileComponent } from './components/showprofile/showprofile.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PreferenceComponent,\n    SignInComponent,\n    SignUpComponent,\n    RatingComponent,\n    ChatListComponent,\n    ProfileComponent,\n    ChatMsgsComponent,\n    ProfileComponent,\n    ChatComponent,\n    FrontComponent,\n    NewUserComponent,\n    EditUserComponent,\n    NewUserFacebookComponent,\n    ShowProfileComponent\n  ],\n\n    imports: [\n        FlexLayoutModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppRoutingModule,\n        AngularFireModule.initializeApp(environment.firebaseConfig),\n        AngularFireAuthModule,\n        AngularFirestoreModule,\n        MaterialModule,\n        BrowserAnimationsModule,\n        MatButtonModule,\n        MatInputModule,\n        MatSliderModule,\n        MatDialogModule,\n        MultiSelectAllModule,\n        MatRadioModule,\n        MatChipsModule,\n        MatExpansionModule,\n        CommonModule,\n        AngularFireAnalyticsModule\n    ],\n  providers: [AuthService, FirebaseService,\n  // {\n  //     provide: MAT_CHIPS_DEFAULT_OPTIONS,\n  //     useValue: {\n  //       separatorKeyCodes: [ENTER, COMMA]\n  //     }\n  //   }\n    ],\n\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from \"@angular/router\";\nimport {AuthService} from \"../../shared/services/auth.service\";\n\nimport { ChatService } from '../../shared/services/chat.service';\n\n\n\n@Component({\n  selector: 'app-chat-list',\n  templateUrl: './chat-list.component.html',\n  styleUrls: ['./chat-list.component.css']\n})\nexport class ChatListComponent implements OnInit {\n\n  userChats$;\n\n  chatList = [\n    {\n    group_name: 'USF MSDS Students',\n    time: '9:30 AM',\n    last_msg: 'meeting at 10',\n    img_url: 'https://img.freepik.com/free-vector/group-young-people-posing-photo_52683-18823.jpg?size=338&ext=jpg'\n    },\n    {\n    group_name: 'fast.ai Cohort 4',\n    time: 'yesterday',\n    last_msg: 'nice to meet you all',\n    img_url: 'https://cdn.aarp.net/content/dam/aarp/travel/destination-guides/2018/04/1140-travel-destination-san-francisco-main-page.imgcache.rev2e8bf9592b441099e8e7efb70e1c1e4b.web.650.370.jpg'\n    },\n    {\n    group_name: 'Python developers',\n    time: '04/03/2020',\n    last_msg: 'great work!',\n    img_url: 'https://image.shutterstock.com/image-photo/positive-skilled-young-multiethnic-coders-260nw-1145542748.jpg'\n    }\n  ];\n//       id = userChats.\n     showChat = function (id) {\n        console.log(id)\n        this.router.navigate(['chats/', id], {relativeTo: this.route});\n      };\n\n\n  constructor(\n      private route: ActivatedRoute,\n      public authService: AuthService,\n      public router: Router,\n      public cs: ChatService\n  ) {}\n\n  ngOnInit(): void {\n    this.userChats$ = this.cs.getUserChats();\n  }\n\n}\n","<!--import google api icon just to use person icon-->\n<!--<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">-->\n<style>\nchat-list-header {\n  color: #4d2c91;\n}\n\ntd {\n  padding-top: 11.25px;\n  padding-right: 11.25px;\n  padding-bottom: 11.25px;\n  padding-left: 30px;\n}\n\n\n</style>\n<br>\n<div class=\"group-list\">\n<table class=\"table table-hover\">\n\n  <thead>\n  <tr>\n      <div class=\"chat-list-header\">Chat Rooms</div>\n  </tr>\n  </thead>\n\n  <tbody *ngFor=\"let chat of userChats$ | async\">\n    <tr (click)=\"showChat(chat.id);\">\n      <td scope=\"col\">\n          <span  routerLink=\"/chats/{{chat.id}}\">ChatId: {{chat.id}}</span>\n      </td>\n      <hr>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat-msgs',\n  templateUrl: './chat-msgs.component.html',\n  styleUrls: ['./chat-msgs.component.css']\n})\nexport class ChatMsgsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Chat Messages</h2>\n\n<div class=\"container\">\n  <img src=\"https://img.freepik.com/free-vector/group-young-people-posing-photo_52683-18823.jpg?size=338&ext=jpg\" alt=\"Avatar\" style=\"width:100%;\">\n  <p>Hello. How are you today?</p>\n  <span class=\"time-right\">11:00</span>\n</div>\n\n<div class=\"container darker\">\n  <img src=\"https://www.guampassportrenewal.com/sites/default/files/sage-2_o.jpg\" alt=\"Avatar\" class=\"right\" style=\"width:100%;\">\n  <p>Hey! I'm fine. Thanks for asking!</p>\n  <span class=\"time-left\">11:01</span>\n</div>\n\n<div class=\"container\">\n  <img src=\"https://img.freepik.com/free-vector/group-young-people-posing-photo_52683-18823.jpg?size=338&ext=jpg\" alt=\"Avatar\" style=\"width:100%;\">\n  <p>Sweet! So, what do you wanna do today?</p>\n  <span class=\"time-right\">11:02</span>\n</div>\n\n<div class=\"container darker\">\n  <img src=\"https://www.guampassportrenewal.com/sites/default/files/sage-2_o.jpg\" alt=\"Avatar\" class=\"right\" style=\"width:100%;\">\n  <p>Nah, I dunno. Play soccer.. or learn more coding perhaps?</p>\n  <span class=\"time-left\">11:05</span>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\nimport { ChatService } from '../../shared/services/chat.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\n\nexport class ChatComponent implements OnInit, AfterViewChecked {\n  @ViewChild('scroller') private chatContainer: ElementRef;\n  chat$: Observable<any>;\n  newMsg: string;\n  users$: Observable<any>;\n\n  showUser = function (id) {\n        console.log(\"user id on showUser\", id)\n        this.router.navigate(['user-profile/', id], {relativeTo: this.route});\n  };\n\n  constructor(\n    public cs: ChatService,\n    private route: ActivatedRoute,\n    public router: Router,\n    public authService: AuthService,\n    private afs: AngularFirestore,\n  ) { }\n//\n//   test() {\n//     const docRef = this.afs.collection(\"chats\").doc(\"2jC0rOg3gH4U4UKvb5ni\")\n//   }\n\n  ngOnInit() {\n    const chatId = this.route.snapshot.paramMap.get('id');\n    const source = this.cs.get(chatId);\n    this.chat$ = this.cs.joinUsers(source);\n    this.scrollBottom();\n  }\n\n\n  scrollToBottom(): void {\n    this.chatContainer.nativeElement.scrollTop\n    = this.chatContainer.nativeElement.scrollHeight;\n  }\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n\n\n  submit(chatId) {\n    if (!this.newMsg) {\n      return alert('you need to enter something');\n    }\n    this.cs.sendMessage(chatId, this.newMsg);\n    this.newMsg = '';\n    this.scrollBottom();\n  }\n\n  trackByCreated(i, msg){\n    return msg.createdAt;\n  }\n\n  private scrollBottom() {\n    setTimeout(() => window.scrollTo(0, document.body.scrollHeight), 500);\n  }\n\n}\n","<section class=\"msger\" *ngIf=\"chat$ | async as chat\">\n    <header class=\"msger-header\">\n        <div class=\"chat-header-title\">\n            Group Id: {{chat.id}}\n        </div>\n    </header>\n\n    <router-outlet></router-outlet>\n    <div class=\"msger-chat\" #scroller>\n        <div class=\"msg\" *ngFor=\"let msg of chat.messages; trackBy: trackByCreated\">\n            <div class=\"msg-img\" (click)=\"showUser(msg.uid)\"> <img [src]=\"msg.user?.photoURL\"> </div>\n  \n            <div class=\"msg-bubble\">\n                <div class=\"msg-info\">\n                 <span class=\"msg-info-name\" routerLink=\"/user-profile/{{msg.uid}}\">{{ msg.user?.email }}</span>\n                </div>\n                <div class=\"msg-text\">\n                    {{ msg.content }}\n                </div>\n            </div>\n  \n        </div>\n    </div>\n  \n\n    <div class=\"msger-inputarea\">\n      <input type=\"text\" class=\"msger-input\" placeholder=\"Enter your message...\" [(ngModel)]=\"newMsg\" (keydown.enter)=\"submit(chat.id)\">\n      <button (click)=\"submit(chat.id)\" class=\"msger-send-btn\">Send</button>\n    </div>\n\n</section>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {FirebaseService} from \"../../shared/services/firebase.service\";\n//for image:\nimport {AngularFireStorage} from \"@angular/fire/storage\";\nimport {AuthService} from \"../../shared/services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {finalize, map, startWith} from 'rxjs/operators';\nimport {MatChipInputEvent} from \"@angular/material/chips\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Category1} from \"../rating/rating.component\";\nimport {COMMA, ENTER} from \"@angular/cdk/keycodes\";\nimport * as countries from '../../../assets/Countries.json';\nimport * as languages from '../../../assets/Languages.json';\nimport * as titles from '../../../assets/JobTitles.json';\nimport * as industries from '../../../assets/Industries.json';\nimport * as degrees from '../../../assets/Degrees.json';\nimport * as fieldsOfStudy from '../../../assets/FieldOfStudy.json';\n\n\n@Component({\n    selector: 'app-edit-user',\n    templateUrl: './edit-user.component.html',\n    styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n    exampleForm: FormGroup;\n    userId;\n    userProfile;\n\n\n    //variables for image\n    title = \"cloudsSorage\";\n    selectedFile: File = null;\n    fb_image;\n    downloadURL: Observable<string>;\n    userInfo;\n    //-----\n\n    validation_messages = {\n        'name': [\n            {type: 'required', message: 'Name is required.'}\n        ],\n        'userAppName': [\n            {type: 'required', message: 'userAppName is required.'}\n        ],\n        'age': [\n            {type: 'required', message: 'Age is required.'},\n        ]\n    };\n    country = new FormControl();\n    options: string[] = countries.countryList;\n    countries: string[] = [];\n\n\n    language = new FormControl();\n    options_lang: string[] = languages.languageList;\n    languages: string[] = [];\n\n    interest = new FormControl();\n    options_interests: string[] = [\"singing\", \"dancing\"];\n    interests: string[] = [];\n\n    jobTitle = new FormControl();\n    options_jobs: string[] = titles.occupations;\n\n    industry = new FormControl();\n    options_industries: string[] = industries.industries;\n\n    schoolName1 = new FormControl();\n    options_schools1: string[] = [\"GSB\", \"MIT\"];\n\n    degree1 = new FormControl();\n    options_degrees1: string[] = degrees.degrees;\n\n    fieldOfStudy1 = new FormControl();\n    options_fieldOfStudy1: string[] = fieldsOfStudy.fields;\n\n    schoolName2 = new FormControl();\n    options_schools2: string[] = [\"GSB\", \"MIT\"];\n\n\n    degree2 = new FormControl();\n    options_degrees2: string[] = degrees.degrees;\n\n    fieldOfStudy2 = new FormControl();\n    options_fieldOfStudy2: string[] = fieldsOfStudy.fields;\n\n\n    // These are environment variables for chips/tags.\n    visible = true;\n    selectable = false;\n    removable = true;\n    addOnBlur = true;\n    isUserInput = true;\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n    filteredOptions: Observable<string[]>;\n    filteredOptions_lang: Observable<string[]>;\n    filteredOptions_interests: Observable<string[]>;\n    filteredOptions_jobs: Observable<string[]>;\n    filteredOptions_industries: Observable<string[]>;\n    filteredOptions_schools1: Observable<string[]>;\n    filteredOptions_schools2: Observable<string[]>;\n    filteredOptions_degrees1: Observable<string[]>;\n    filteredOptions_degrees2: Observable<string[]>;\n    filteredOptions_fields1: Observable<string[]>;\n    filteredOptions_fields2: Observable<string[]>;\n    // filteredOptions_industries: Observable<string[]>;\n\n    gender: string[] = ['Male', 'Female', 'Other'];\n\n\n    constructor(\n        public firebaseService: FirebaseService,\n        private fb: FormBuilder,\n        private storage: AngularFireStorage,\n        public authService: AuthService,\n        private router: Router,\n        public snackBar: MatSnackBar\n    ) {\n    }\n\n    ngOnInit() {\n\n        this.filteredOptions = this.country.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options))\n            );\n        this.filteredOptions_lang = this.language.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_lang))\n            );\n        this.filteredOptions_interests = this.interest.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_interests))\n            );\n        this.filteredOptions_jobs = this.jobTitle.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_jobs))\n            );\n        this.filteredOptions_industries = this.industry.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_industries))\n            );\n        this.filteredOptions_schools1 = this.schoolName1.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_schools1))\n            );\n        this.filteredOptions_schools2 = this.schoolName2.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_schools2))\n            );\n        this.filteredOptions_degrees1 = this.degree1.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_degrees1))\n            );\n        this.filteredOptions_degrees2 = this.degree2.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_degrees2))\n            );\n        this.filteredOptions_fields1 = this.fieldOfStudy1.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_fieldOfStudy1))\n            );\n        this.filteredOptions_fields2 = this.fieldOfStudy2.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_fieldOfStudy2))\n            );\n\n\n        this.authService.user$.subscribe(user => {\n            if (user) {\n                this.userId = user.uid;\n                this.userProfile = user.profile;\n                // this.\n                this.countries = this.userProfile.country;\n                this.languages = this.userProfile.languages;\n                this.interests = this.userProfile.interests;\n                this.fb_image = this.userProfile.profileImageUrl;\n                this.createForm();\n                this.jobTitle.setValue(this.userProfile.jobTitle);\n                this.industry.setValue(this.userProfile.industry);\n                this.schoolName1.setValue(this.userProfile.school1Info.schoolName);\n                this.schoolName2.setValue(this.userProfile.school2Info.schoolName);\n                this.degree1.setValue(this.userProfile.school1Info.degree);\n                this.degree2.setValue(this.userProfile.school2Info.degree);\n                this.fieldOfStudy1.setValue(this.userProfile.school1Info.fieldOfStudy);\n                this.fieldOfStudy2.setValue(this.userProfile.school2Info.fieldOfStudy);\n            }\n        });\n\n\n    }\n\n    createForm() {\n        this.exampleForm = this.fb.group({\n            userAppName: [this.userProfile.name, Validators.required],\n            age: [this.userProfile.age, Validators.required],\n            country: [''],\n            gender: [this.userProfile.gender, [Validators.required]],\n            language: [''],\n            interest: ['']\n\n        });\n    }\n\n    add(event: MatChipInputEvent, thing): void {\n        const input = event.input;\n        const value = event.value;\n        // Add a tag\n        if ((value || '').trim()) {\n            thing.push({name: value.trim()});\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n\n    remove(exp: Category1, thing): void {\n        const index = thing.indexOf(exp);\n\n        if (index >= 0) {\n            thing.splice(index, 1);\n        }\n    }\n\n    addCountry() {\n        this.countries.push(this.country.value);\n        this.country.setValue(\"\")\n    }\n\n    addLanguage() {\n        this.languages.push(this.language.value);\n        this.language.setValue(\"\")\n    }\n\n    addInterest() {\n        this.interests.push(this.interest.value);\n        this.interest.setValue(\"\")\n    }\n\n    resetFields() {\n        // this.avatarLink = \"https://s3.amazonaws.com/uifaces/faces/twitter/adellecharles/128.jpg\";\n        this.exampleForm = this.fb.group({\n            // name: new FormControl('', Validators.required),\n            userAppName: new FormControl('', Validators.required),\n            age: new FormControl('', Validators.required),\n        });\n    }\n\n\n    removeEmptyStrings(variable) {\n        var filteredArray = variable.filter(function (el) {\n            return el != \"\";\n        });\n        return filteredArray;\n    }\n\n\n    onSubmit(value) {\n        console.log(this.country.value)\n        if(this.country.value!=null) {this.countries.push(this.country.value);}\n        if(this.language.value!=null) {this.languages.push(this.language.value);}\n        if(this.interest.value!=null) {this.interests.push(this.interest.value);}\n\n        value.countries = this.removeEmptyStrings(this.countries);\n        value.languages = this.removeEmptyStrings(this.languages);\n        value.interests = this.removeEmptyStrings(this.interests);\n        value.jobTitle = this.jobTitle.value;\n        value.industry = this.industry.value;\n\n        value.school1Info = {\n            schoolName: this.schoolName1.value,\n            degree: this.degree1.value,\n            fieldOfStudy: this.fieldOfStudy1.value\n        };\n        value.school2Info = {\n            schoolName: this.schoolName2.value,\n            degree: this.degree2.value,\n            fieldOfStudy: this.fieldOfStudy2.value\n        };\n\n        this.firebaseService.updateUser(this.userId, value, this.userProfile.profileImageUrl)\n            .then(\n                res => {\n\n                    this.snackBar.open(\"Update successful !!\", \"Dismiss\", {\n                        duration: 2000,\n                        horizontalPosition: 'right'\n                    });\n                    // this.router.navigate(['preference']);\n                    // this.resetFields();\n                }\n            )\n    }\n\n\n    onFileSelected(event) {\n        var n = Date.now();\n        const file = event.target.files[0];\n        const filePath = `ProfileImages/${n}`;\n        const fileRef = this.storage.ref(filePath);\n        const task = this.storage.upload(`ProfileImages/${n}`, file);\n        task\n            .snapshotChanges()\n            .pipe(\n                finalize(() => {\n                    this.downloadURL = fileRef.getDownloadURL();\n                    this.downloadURL.subscribe(url => {\n                        if (url) {\n                            this.fb_image = url;\n                            this.userProfile.profileImageUrl = url;\n                        }\n                        console.log(this.fb_image);\n\n                    });\n                })\n            )\n            .subscribe(url => {\n                if (url) {\n                    console.log(url);\n                }\n            });\n    }\n\n    private _filter(value: string, options): string[] {\n        const filterValue = value.toLowerCase();\n        if (options) {\n            return options.filter(option => option.toLowerCase().includes(filterValue));\n        }\n\n    }\n\n\n}\n","<!--<div class=\"split left\">-->\n<!--    <div *ngIf=\"exampleForm\" class=\"centered\">-->\n<!--        <img class=\"user\" src={{this.fb_image}}>-->\n<!--        <br/>-->\n<!--        <h2>Welcome <br/>{{this.userProfile.name}}</h2>-->\n<!--    </div>-->\n<!--    <div class=\"form-group col-12\">-->\n<!--        <input #userPhoto-->\n<!--               (change)=\"onFileSelected($event)\"-->\n<!--               autocomplete=\"off\"-->\n<!--               id=\"file\"-->\n<!--               name=\"image\"-->\n<!--               style=\"display: none;\"-->\n<!--               title=\"Choose a file please\"-->\n<!--               type=\"file\"-->\n<!--        />-->\n<!--        <label for=\"file\">Upload new image</label>-->\n<!--    </div>-->\n<!--</div>-->\n\n\n<div class=\"\">\n    <div class=\"\">\n\n        <form (ngSubmit)=\"onSubmit(exampleForm.value)\" *ngIf=\"exampleForm\" [formGroup]=\"exampleForm\" class=\"create-form\"\n              novalidate>\n            <div class=\"row\">\n\n                <div class=\"col-12 col-md-8\">\n                    <div class=\"form-group\">\n                        <mat-form-field class=\"input-style\">\n                            <input class=\"form-control\" formControlName=\"userAppName\" matInput\n                                   placeholder=\"What should we call you?\">\n                        </mat-form-field>\n                        <ng-container *ngFor=\"let validation of validation_messages.userAppName\">\n                            <mat-error\n                                    *ngIf=\"exampleForm.get('userAppName').hasError(validation.type) && (exampleForm.get('userAppName').dirty || exampleForm.get('userAppName').touched)\">{{validation.message}}</mat-error>\n                        </ng-container>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <mat-radio-group\n                                aria-labelledby=\"example-radio-group-label\"\n                                class=\"input-style\"\n                                formControlName=\"gender\">\n                            <mat-radio-button *ngFor=\"let gen of gender\" [value]=\"gen\" class=\"example-radio-button\">\n                                {{gen}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            </mat-radio-button>\n                        </mat-radio-group>\n                        <!--                <div *ngIf=\"exampleForm.get('gender').hasError('required')\" class=\"error\">-->\n                        <!--                    Gender is required-->\n                        <!--                </div>-->\n                    </div>\n\n                    <div class=\"form-group\">\n                        <mat-form-field class=\"input-style\">\n                            <input class=\"form-control\" formControlName=\"age\" matInput max=\"100\" min=\"0\"\n                                   placeholder=\"How old are you?\"\n                                   type=\"number\">\n                        </mat-form-field>\n                        <ng-container *ngFor=\"let validation of validation_messages.age\">\n                            <mat-error\n                                    *ngIf=\"exampleForm.get('age').hasError(validation.type) && (exampleForm.get('age').dirty || exampleForm.get('age').touched)\">{{validation.message}}</mat-error>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group col-6 col-md-4\">\n                    <img class=\"user\" src=\"{{(this.fb_image) ? this.fb_image : '../../assets/images/dummy_profile.png'}}\">\n                    <br/>\n                    <input #userPhoto\n                           (change)=\"onFileSelected($event)\"\n                           autocomplete=\"off\"\n                           id=\"file\"\n                           name=\"image\"\n                           style=\"display: none;\"\n                           title=\"Choose a file please\"\n                           type=\"file\"\n                    />\n                    <label for=\"file\">Upload new image</label>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"country\"\n                            [matAutocomplete]=\"auto\"\n                            aria-label=\"Number\"\n                            matInput\n\n                            placeholder=\"Country\"\n                            type=\"text\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button (click)=\"addCountry()\" color=\"primary\" mat-mini-fab type=\"button\">+</button>\n\n                <mat-form-field *ngIf=\"this.countries?.length > 0\" class=\"example-chip-list\">\n                    <mat-chip-list #chipList aria-label=\"Background selection\">\n                        <mat-chip (removed)=\"remove(exp1, this.countries)\" *ngFor=\"let exp1 of this.countries\"\n                                  [removable]=\"removable\" [selectable]=\"selectable\">\n                            {{exp1}}\n                            <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                        </mat-chip>\n                        <label>\n                            <input (matChipInputTokenEnd)=\"add($event, this.countries)\"\n                                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                                   [matChipInputFor]=\"chipList\"\n                                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                   [multiple]=true\n                                   placeholder=\"Added countries\">\n                        </label>\n                    </mat-chip-list>\n                </mat-form-field>\n\n            </div>\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"language\"\n                            [matAutocomplete]=\"auto1\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Language\"\n                            type=\"text\">\n                    <mat-autocomplete #auto1=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_lang | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button (click)=\"addLanguage()\" color=\"primary\" mat-mini-fab type=\"button\">+</button>\n\n                <mat-form-field *ngIf=\"this.languages?.length > 0\" class=\"example-chip-list\">\n                    <mat-chip-list #chipList aria-label=\"Background selection\">\n                        <mat-chip (removed)=\"remove(exp1, this.languages)\" *ngFor=\"let exp1 of this.languages\"\n                                  [removable]=\"removable\" [selectable]=\"selectable\">\n                            {{exp1}}\n                            <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                        </mat-chip>\n                        <label>\n                            <input (matChipInputTokenEnd)=\"add($event, this.languages)\"\n                                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                                   [matChipInputFor]=\"chipList\"\n                                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                   [multiple]=true\n                                   placeholder=\"Added languages\">\n                        </label>\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n\n            <br/>\n            <mat-card>Interests</mat-card>\n            <br/>\n            <div class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"interest\"\n                            [matAutocomplete]=\"auto_interest\"\n                            aria-label=\"Number\"\n                            matInput\n\n                            placeholder=\"Interest\"\n                            type=\"text\">\n                    <mat-autocomplete #auto_interest=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_interests | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button (click)=\"addInterest()\" color=\"primary\" mat-mini-fab type=\"button\">+</button>\n\n                <mat-form-field *ngIf=\"this.interests?.length > 0\" class=\"example-chip-list\">\n                    <mat-chip-list #chipList aria-label=\"Background selection\">\n                        <mat-chip (removed)=\"remove(exp1, this.interests)\" *ngFor=\"let exp1 of this.interests\"\n                                  [removable]=\"removable\" [selectable]=\"selectable\">\n                            {{exp1}}\n                            <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                        </mat-chip>\n                        <label>\n                            <input (matChipInputTokenEnd)=\"add($event, this.interests)\"\n                                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                                   [matChipInputFor]=\"chipList\"\n                                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                   [multiple]=true\n                                   placeholder=\"Added interests\">\n                        </label>\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n\n            <br/>\n            <mat-card>Career networking</mat-card>\n            <div>\n                <br/>\n\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"jobTitle\"\n                            [matAutocomplete]=\"auto2\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Job Title\"\n                            type=\"text\">\n                    <mat-autocomplete #auto2=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_jobs | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"industry\"\n                            [matAutocomplete]=\"auto3\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Industry\"\n                            type=\"text\">\n                    <mat-autocomplete #auto3=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_industries | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n            </div>\n\n            <br/>\n            <mat-card>Education details</mat-card>\n            <br/>\n            <p>Latest education detail:</p>\n            <div>\n                <br/>\n\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n\n                            [formControl]=\"schoolName1\"\n                            [matAutocomplete]=\"auto4\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"School Name\"\n                            type=\"text\">\n                    <mat-autocomplete #auto4=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_schools1 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n\n                            [formControl]=\"degree1\"\n                            [matAutocomplete]=\"auto5\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Degree\"\n                            type=\"text\">\n                    <mat-autocomplete #auto5=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_degrees1 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n\n                            [formControl]=\"fieldOfStudy1\"\n                            [matAutocomplete]=\"auto6\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Field of Study\"\n                            type=\"text\">\n                    <mat-autocomplete #auto6=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_fields1 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n            </div>\n\n            <br/>\n\n            <p>Any other education detail:</p>\n            <div>\n\n                <br/>\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n\n                            [formControl]=\"schoolName2\"\n                            [matAutocomplete]=\"auto7\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"School Name\"\n                            type=\"text\">\n                    <mat-autocomplete #auto7=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_schools2 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n\n                            [formControl]=\"degree2\"\n                            [matAutocomplete]=\"auto8\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Degree\"\n                            type=\"text\">\n                    <mat-autocomplete #auto8=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_degrees2 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"fieldOfStudy2\"\n                            [matAutocomplete]=\"auto9\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Field of Study\"\n                            type=\"text\">\n                    <mat-autocomplete #auto9=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_fields2 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n            </div>\n\n            <div class=\"row submit-button-container\">\n                <div class=\"col-md-4\">\n                    <button [disabled]=\"!exampleForm.valid\" class=\"submit-button\" color=\"primary\" mat-raised-button\n                            type=\"submit\">Update\n                    </button>\n                </div>\n            </div>\n\n\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../../shared/services/chat.service';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-front',\n  templateUrl: './front.component.html',\n  styleUrls: ['./front.component.css']\n})\nexport class FrontComponent implements OnInit {\n  userChats$;\n  constructor(\n    public authService: AuthService,\n    public cs: ChatService\n  ) { }\n\n  ngOnInit() {\n    this.userChats$ = this.cs.getUserChats();\n  }\n}","\n<h1>Welcome to Mega Chat</h1>\n\n<div class=\"login\">\n  <div *ngIf=\" authService.user$ | async as user; else login\">\n    <img [src]=\"user.photoURL\" width=\"50px\">\n    <p>\n      <span class=\"tag is-dark\">{{ user.displayName }}</span>\n      <span class=\"tag is-light\">{{ user.uid }}</span>\n    </p>\n\n\n    <button class=\"button is-small\" (click)=\"authService.SignOut()\">Sign Out</button>\n    <hr>\n\n<!--    <button class=\"button\" routerLink=\"'/chats/' + chat.id\">Join Mega Chat 🎪</button>-->\n    <button class=\"button is-info\" (click)=\"cs.create()\">Create New Chat</button>\n\n    <hr>\n\n    <h3>My Chats</h3>\n\n    <ul>\n      <li *ngFor=\"let chat of userChats$ | async\">\n        <a routerLink=\"/chats/{{chat.id}}\">{{ chat.id }} - {{ chat.messages.length }} Messages </a>\n      </li>\n    </ul>\n  </div>\n\n  <ng-template #login>\n    <button class=\"button\" (click)=\"authService.FacebookAuth()\">Login with Facebook</button>\n  </ng-template>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../shared/services/auth.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Header with full-height image -->\n<!DOCTYPE html>\n<html>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Raleway\">\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<body>\n<div class=\"bgimg-1\" id=\"top\">\n  <mat-toolbar color=\"primary\" style=\"font-size: 17px; color:white\" class=\"baloo\">\n  <button mat-button class=\"hexchat-text\" routerLink=\"/home\">Hexchat</button>\n      <span class=\"fill-space\"></span>\n      <span>Already have an account?&ensp;</span>\n      <a mat-raised-button class=\"toolbar-button\" routerLink=\"/signin\">Login</a>\n</mat-toolbar>\n\n    <div class=\"firstsentecne\" >Rediscover Friendship</div>\n    <p style=\"text-align: center\"><button mat-raised-button color=\"primary\" class=\"button-shape baloo\" routerLink=\"/join\" type=\"submit\" >\n      Get Started\n    </button></p>\n    </div>\n\n<!-- About Section -->\n<div class=\"w3-container\" style=\"padding:128px 16px; min-height: 100%\" id=\"about\">\n  <h3 class=\"w3-center\">ABOUT HEXCHAT</h3>\n  <p class=\"w3-center w3-large\">Product Features</p>\n  <div class=\"w3-row-padding w3-center\" style=\"margin-top:64px\">\n    <div class=\"w3-quarter\">\n      <i class=\"fa fa-desktop w3-margin-bottom w3-jumbo w3-center\"></i>\n      <p class=\"w3-large\">Smart</p>\n      <p>Hexchat develops smart matching algorithms that know deeper about your preferences.</p>\n    </div>\n    <div class=\"w3-quarter\">\n      <i class=\"fa fa-heart w3-margin-bottom w3-jumbo\"></i>\n      <p class=\"w3-large\">Connect</p>\n      <p>Hexchat matches you to another 5 and creates a small chat room for you to find friends who think alike. </p>\n    </div>\n    <div class=\"w3-quarter\">\n      <i class=\"fa fa-diamond w3-margin-bottom w3-jumbo\"></i>\n      <p class=\"w3-large\">Share</p>\n      <p>Hexchat discovers interesting topics to spark conversations.</p>\n    </div>\n    <div class=\"w3-quarter\">\n      <i class=\"fa fa-cog w3-margin-bottom w3-jumbo\"></i>\n      <p class=\"w3-large\">Support</p>\n      <p>Hexchat is planning icebreaker bots, chat rooms with limited time and an invitation function.</p>\n    </div>\n  </div>\n</div>\n\n<!-- Promo Section - \"We know\" -->\n<div class=\"w3-container w3-light-grey\" style=\"padding:128px 16px\">\n  <div class=\"w3-row-padding\">\n    <div class=\"w3-col m6\">\n      <h3>Our Mission</h3>\n      <p>The modern world makes us closer physically yet separated. Closeness is meaningless if we are not connected. Hexchat aims to be a product to help users to create their connections, quickly and in scale!</p>\n<!--      <p><a href=\"#work\" class=\"w3-button w3-black\"><i class=\"fa fa-th\">&nbsp;</i> View Our Works</a></p>-->\n    </div>\n<!--    <div class=\"w3-col m6\">-->\n<!--        picture placeholder-->\n<!--&lt;!&ndash;      <img class=\"w3-image w3-round-large\" src=\"/\" alt=\"Buildings\" width=\"700\" height=\"394\">&ndash;&gt;-->\n<!--    </div>-->\n  </div>\n</div>\n\n<!-- Team Section -->\n<div class=\"w3-container\" style=\"padding:128px 16px\" id=\"team\">\n  <h3 class=\"w3-center\">THE TEAM</h3>\n  <p class=\"w3-center w3-large\">The ones who create this miracle</p>\n  <div class=\"w3-row-padding\" style=\"margin-top:64px\">\n    <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/akanksha.jpg\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Akanksha</h3>\n          <p class=\"w3-opacity\">Back End Engineer</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n          <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/akanksha130/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n    <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/annette.jpg\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Annette</h3>\n          <p class=\"w3-opacity\">Designer & Product Manager</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n          <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/zijun-annette-lin/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n    <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/daren_ma.jpg\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Daren</h3>\n          <p class=\"w3-opacity\">Front End Engineer</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n                  <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/daren-ma/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n    <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/geoffrey.png\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Geoffrey</h3>\n          <p class=\"w3-opacity\">Lead Product Manager</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n                  <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/geoffreyhung/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"w3-row-padding\">\n    <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/mikio_tada.jpg\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Mikio</h3>\n          <p class=\"w3-opacity\">Front End Engineer</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n                  <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/mikiotada/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n        <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/nishat_parveen.jpg\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Nishat</h3>\n          <p class=\"w3-opacity\">Back End Engineer</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n                  <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/nishat-parveen/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n        <div class=\"w3-col l3 m6 w3-margin-bottom\">\n      <div class=\"w3-card\">\n        <img src=\"assets/images/sakshi_singla.jpg\" alt=\"image\" style=\"width:100%\">\n        <div class=\"w3-container\">\n          <h3>Sakshi</h3>\n          <p class=\"w3-opacity\">Front End Engineer</p>\n<!--          <p>Phasellus eget enim eu lectus faucibus vestibulum. Suspendisse sodales pellentesque elementum.</p>-->\n                  <p><a class=\"w3-button w3-light-grey w3-block\" target=\"_blank\" href=\"https://www.linkedin.com/in/sakshi-singla/\"><i class=\"fa fa-linkedin-square\"></i> Connect</a></p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<footer class=\"w3-center w3-padding-64\" style=\"background-color: #9877d1; color: white\">\n  <a href=\"#top\" class=\"w3-button\" style=\"background-color: white;color: #60468f;\"><i class=\"fa fa-arrow-up w3-margin-right\" style=\"color: #60468f;\"></i>To the top</a>\n<!--  <p>Powered by <a href=\"https://www.w3schools.com/w3css/default.asp\" title=\"W3.CSS\" target=\"_blank\" class=\"w3-hover-text-green\">w3.css</a></p>-->\n</footer>\n</body>\n</html>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {FirebaseService} from \"../../shared/services/firebase.service\";\n//for image:\nimport {AngularFireStorage} from \"@angular/fire/storage\";\nimport {AuthService} from \"../../shared/services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {finalize, map, startWith} from 'rxjs/operators';\nimport {MatChipInputEvent} from \"@angular/material/chips\";\nimport {Category1} from \"../rating/rating.component\";\nimport {COMMA, ENTER} from \"@angular/cdk/keycodes\";\nimport * as countries from '../../../assets/Countries.json';\nimport * as languages from '../../../assets/Languages.json';\nimport * as titles from '../../../assets/JobTitles.json';\nimport * as industries from '../../../assets/Industries.json';\nimport * as degrees from '../../../assets/Degrees.json';\nimport * as fieldsOfStudy from '../../../assets/FieldOfStudy.json';\n\n\n@Component({\n    selector: 'app-new-user-facebook',\n    templateUrl: './new-user-facebook.component.html',\n    styleUrls: ['./new-user-facebook.component.css']\n})\nexport class NewUserFacebookComponent implements OnInit {\n\n    exampleForm: FormGroup;\n    userId;\n    userProfile;\n\n    //variables for image\n    title = \"cloudsSorage\";\n    selectedFile: File = null;\n    fb_image;\n    downloadURL: Observable<string>;\n    userInfo;\n    //-----\n\n    validation_messages = {\n        'name': [\n            {type: 'required', message: 'Name is required.'}\n        ],\n        'userAppName': [\n            {type: 'required', message: 'userAppName is required.'}\n        ],\n        'age': [\n            {type: 'required', message: 'Age is required.'},\n        ]\n    };\n    country = new FormControl();\n    options: string[] = countries.countryList;\n    countries: string[] = [];\n\n\n    language = new FormControl();\n    options_lang: string[] = languages.languageList;\n    languages: string[] = [];\n\n    interest = new FormControl();\n    options_interests: string[] = [\"singing\", \"dancing\"];\n    interests: string[] = [];\n\n    jobTitle = new FormControl();\n    options_jobs: string[] = titles.occupations;\n\n    industry = new FormControl();\n    options_industries: string[] = industries.industries;\n\n    schoolName1 = new FormControl();\n    options_schools1: string[] = [\"GSB\", \"MIT\"];\n\n    degree1 = new FormControl();\n    options_degrees1: string[] = degrees.degrees;\n\n    fieldOfStudy1 = new FormControl();\n    options_fieldOfStudy1: string[] = fieldsOfStudy.fields;\n\n    schoolName2 = new FormControl();\n    options_schools2: string[];\n\n\n    degree2 = new FormControl();\n    options_degrees2: string[] = degrees.degrees;\n\n    fieldOfStudy2 = new FormControl();\n    options_fieldOfStudy2: string[] = fieldsOfStudy.fields;\n\n\n    // These are environment variables for chips/tags.\n    visible = true;\n    selectable = false;\n    removable = true;\n    addOnBlur = true;\n    isUserInput = true;\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n    filteredOptions: Observable<string[]>;\n    filteredOptions_lang: Observable<string[]>;\n    filteredOptions_interests: Observable<string[]>;\n    filteredOptions_jobs: Observable<string[]>;\n    filteredOptions_industries: Observable<string[]>;\n    filteredOptions_schools1: Observable<string[]>;\n    filteredOptions_schools2: Observable<string[]>;\n    filteredOptions_degrees1: Observable<string[]>;\n    filteredOptions_degrees2: Observable<string[]>;\n    filteredOptions_fields1: Observable<string[]>;\n    filteredOptions_fields2: Observable<string[]>;\n    // filteredOptions_industries: Observable<string[]>;\n\n    gender: string[] = ['Male', 'Female', 'Other'];\n\n\n    constructor(\n        public firebaseService: FirebaseService,\n        private fb: FormBuilder,\n        private storage: AngularFireStorage,\n        public authService: AuthService,\n        private router: Router,\n    ) {\n    }\n\n    ngOnInit() {\n\n        this.filteredOptions = this.country.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options))\n            );\n        this.filteredOptions_lang = this.language.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_lang))\n            );\n        this.filteredOptions_interests = this.interest.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_interests))\n            );\n        this.filteredOptions_jobs = this.jobTitle.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_jobs))\n            );\n        this.filteredOptions_industries = this.industry.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_industries))\n            );\n        this.filteredOptions_schools1 = this.schoolName1.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_schools1))\n            );\n        this.filteredOptions_schools2 = this.schoolName2.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_schools2))\n            );\n        this.filteredOptions_degrees1 = this.degree1.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_degrees1))\n            );\n        this.filteredOptions_degrees2 = this.degree2.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_degrees2))\n            );\n        this.filteredOptions_fields1 = this.fieldOfStudy1.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_fieldOfStudy1))\n            );\n        this.filteredOptions_fields2 = this.fieldOfStudy2.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value, this.options_fieldOfStudy2))\n            );\n\n\n        this.authService.user$.subscribe(user => {\n            if (user) {\n                this.userId = user.uid;\n                this.userProfile = user.profile;\n\n                this.fb_image = this.userProfile.profileImageUrl;\n                this.createForm();\n            }\n        });\n\n\n    }\n\n    createForm() {\n        this.exampleForm = this.fb.group({\n            // name: [this.userProfile.name, Validators.required],\n            userAppName: ['', Validators.required],\n            age: ['', Validators.required],\n            country: [''],\n            gender: ['', [Validators.required]],\n            language: [''],\n            jobTitle: [''],\n            industry: [''],\n            interest: ['']\n\n        });\n    }\n\n    add(event: MatChipInputEvent, thing): void {\n        const input = event.input;\n        const value = event.value;\n        // Add a tag\n        if ((value || '').trim()) {\n            thing.push({name: value.trim()});\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n\n    remove(exp: Category1, thing): void {\n        const index = thing.indexOf(exp);\n\n        if (index >= 0) {\n            thing.splice(index, 1);\n        }\n    }\n\n    addCountry() {\n        this.countries.push(this.country.value);\n        this.country.setValue(\"\")\n    }\n\n    addLanguage() {\n        this.languages.push(this.language.value);\n        this.language.setValue(\"\")\n    }\n\n    addInterest() {\n        this.interests.push(this.interest.value);\n        this.interest.setValue(\"\")\n    }\n\n    resetFields() {\n        // this.avatarLink = \"https://s3.amazonaws.com/uifaces/faces/twitter/adellecharles/128.jpg\";\n        this.exampleForm = this.fb.group({\n            // name: new FormControl('', Validators.required),\n            userAppName: new FormControl('', Validators.required),\n            age: new FormControl('', Validators.required),\n        });\n    }\n\n\n    removeEmptyStrings(variable)\n        {\n          var filteredArray=  variable.filter(function (el) {\n                return el != \"\";\n            });\n          return filteredArray;\n        }\n\n\n    onSubmit(value) {\n\n        this.countries.push(this.country.value);\n        this.languages.push(this.language.value);\n        this.interests.push(this.interest.value);\n\n        value.countries = this.removeEmptyStrings(this.countries);\n        value.languages = this.removeEmptyStrings(this.languages);\n        value.interests = this.removeEmptyStrings(this.interests);\n        value.jobTitle = this.jobTitle.value;\n        value.industry = this.industry.value;\n\n        value.school1Info = {schoolName:this.schoolName1.value, degree:this.degree1.value,fieldOfStudy: this.fieldOfStudy1.value }\n        value.school2Info = {schoolName:this.schoolName2.value, degree:this.degree2.value,fieldOfStudy: this.fieldOfStudy2.value }\n\n        this.firebaseService.createUserFacebook(value, this.userProfile.name, this.userProfile.profileImageUrl, this.userId)\n            .then(\n                res => {\n                    this.router.navigate(['user']);\n                    // this.resetFields();\n                }\n            )\n    }\n\n\n    onFileSelected(event) {\n        var n = Date.now();\n        const file = event.target.files[0];\n        const filePath = `ProfileImages/${n}`;\n        const fileRef = this.storage.ref(filePath);\n        const task = this.storage.upload(`ProfileImages/${n}`, file);\n        task\n            .snapshotChanges()\n            .pipe(\n                finalize(() => {\n                    this.downloadURL = fileRef.getDownloadURL();\n                    this.downloadURL.subscribe(url => {\n                        if (url) {\n                            this.fb_image = url;\n                            this.userProfile.profileImageUrl = url;\n                        }\n                        console.log(this.fb_image);\n\n                    });\n                })\n            )\n            .subscribe(url => {\n                if (url) {\n                    console.log(url);\n                }\n            });\n    }\n\n    private _filter(value: string, options): string[] {\n        const filterValue = value.toLowerCase();\n        if(options) {\n            return options.filter(option => option.toLowerCase().includes(filterValue));\n        }\n\n    }\n\n\n}\n","<div class=\"split left\">\n    <div *ngIf=\"exampleForm\" class=\"centered\">\n\n        <img class=\"user\" src=\"{{(this.fb_image) ? this.fb_image : '../../assets/images/dummy_profile.png'}}\">\n        <br/>\n        <h2>Welcome <br/>{{this.userProfile.name}}</h2>\n    </div>\n    <div class=\"form-group col-12\">\n        <input #userPhoto\n               (change)=\"onFileSelected($event)\"\n               autocomplete=\"off\"\n               id=\"file\"\n               name=\"image\"\n               type=\"file\"\n               title=\"Choose a file please\"\n               style=\"display: none;\"\n        />\n        <label *ngIf=\"exampleForm\" for=\"file\">Upload new image</label>\n    </div>\n</div>\n\n\n<div class=\"split right\">\n    <div class=\"centered\">\n        <form (ngSubmit)=\"onSubmit(exampleForm.value)\" *ngIf=\"exampleForm\" [formGroup]=\"exampleForm\" class=\"create-form\"\n              novalidate>\n\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"input-style\">\n                    <input class=\"form-control\" formControlName=\"userAppName\" matInput\n                           placeholder=\"What should we call you?\">\n                </mat-form-field>\n                <ng-container *ngFor=\"let validation of validation_messages.userAppName\">\n                    <mat-error\n                            *ngIf=\"exampleForm.get('userAppName').hasError(validation.type) && (exampleForm.get('userAppName').dirty || exampleForm.get('userAppName').touched)\">{{validation}}</mat-error>\n                </ng-container>\n            </div>\n\n            <div class=\"form-group\">\n                <mat-radio-group\n                        aria-labelledby=\"example-radio-group-label\"\n                        class=\"input-style\"\n                        formControlName=\"gender\">\n                    <mat-radio-button *ngFor=\"let gen of gender\" [value]=\"gen\" class=\"example-radio-button\">\n                        {{gen}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    </mat-radio-button>\n                </mat-radio-group>\n                <!--                <div *ngIf=\"exampleForm.get('gender').hasError('required')\" class=\"error\">-->\n                <!--                    Gender is required-->\n                <!--                </div>-->\n            </div>\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"input-style\">\n                    <input class=\"form-control\" formControlName=\"age\" matInput max=\"100\" min=\"0\"\n                           placeholder=\"How old are you?\"\n                           type=\"number\">\n                </mat-form-field>\n                <ng-container *ngFor=\"let validation of validation_messages.age\">\n                    <mat-error\n                            *ngIf=\"exampleForm.get('age').hasError(validation.type) && (exampleForm.get('age').dirty || exampleForm.get('age').touched)\">{{validation}}</mat-error>\n                </ng-container>\n            </div>\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"country\"\n                            [matAutocomplete]=\"auto\"\n                            aria-label=\"Number\"\n                            matInput\n\n                            placeholder=\"Country\"\n                            type=\"text\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button (click)=\"addCountry()\" color=\"primary\" mat-mini-fab type=\"button\">+</button>\n\n                <mat-form-field *ngIf=\"this.countries?.length > 0\" class=\"example-chip-list\">\n                    <mat-chip-list #chipList aria-label=\"Background selection\">\n                        <mat-chip (removed)=\"remove(exp1, this.countries)\" *ngFor=\"let exp1 of this.countries\"\n                                  [removable]=\"removable\" [selectable]=\"selectable\">\n                            {{exp1}}\n                            <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                        </mat-chip>\n                        <label>\n                            <input (matChipInputTokenEnd)=\"add($event, this.countries)\"\n                                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                                   [matChipInputFor]=\"chipList\"\n                                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                   [multiple]=true\n                                   placeholder=\"Added countries\">\n                        </label>\n                    </mat-chip-list>\n                </mat-form-field>\n\n            </div>\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"language\"\n                            [matAutocomplete]=\"auto1\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Language\"\n                            type=\"text\">\n                    <mat-autocomplete #auto1=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_lang | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button (click)=\"addLanguage()\" color=\"primary\" mat-mini-fab type=\"button\">+</button>\n\n                <mat-form-field *ngIf=\"this.languages?.length > 0\" class=\"example-chip-list\">\n                    <mat-chip-list #chipList aria-label=\"Background selection\">\n                        <mat-chip (removed)=\"remove(exp1, this.languages)\" *ngFor=\"let exp1 of this.languages\"\n                                  [removable]=\"removable\" [selectable]=\"selectable\">\n                            {{exp1}}\n                            <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                        </mat-chip>\n                        <label>\n                            <input (matChipInputTokenEnd)=\"add($event, this.languages)\"\n                                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                                   [matChipInputFor]=\"chipList\"\n                                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                   [multiple]=true\n                                   placeholder=\"Added languages\">\n                        </label>\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n\n            <br/>\n            <mat-card>Interests</mat-card>\n            <br/>\n            <div class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"interest\"\n                            [matAutocomplete]=\"auto_interest\"\n                            aria-label=\"Number\"\n                            matInput\n\n                            placeholder=\"Interest\"\n                            type=\"text\">\n                    <mat-autocomplete #auto_interest=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_interests | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button (click)=\"addInterest()\" color=\"primary\" mat-mini-fab type=\"button\">+</button>\n\n                <mat-form-field *ngIf=\"this.interests?.length > 0\" class=\"example-chip-list\">\n                    <mat-chip-list #chipList aria-label=\"Background selection\">\n                        <mat-chip (removed)=\"remove(exp1, this.interests)\" *ngFor=\"let exp1 of this.interests\"\n                                  [removable]=\"removable\" [selectable]=\"selectable\">\n                            {{exp1}}\n                            <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                        </mat-chip>\n                        <label>\n                            <input (matChipInputTokenEnd)=\"add($event, this.interests)\"\n                                   [matChipInputAddOnBlur]=\"addOnBlur\"\n                                   [matChipInputFor]=\"chipList\"\n                                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                   [multiple]=true\n                                   placeholder=\"Added interests\">\n                        </label>\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n\n            <br/>\n            <mat-card>Career networking</mat-card>\n            <div>\n                <br/>\n\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"jobTitle\"\n                            [matAutocomplete]=\"auto2\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Job Title\"\n                            type=\"text\">\n                    <mat-autocomplete #auto2=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_jobs | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"industry\"\n                            [matAutocomplete]=\"auto3\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Industry\"\n                            type=\"text\">\n                    <mat-autocomplete #auto3=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_industries | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n            </div>\n\n            <br/>\n            <mat-card>Education details</mat-card>\n            <br/>\n            <p>Latest education detail:</p>\n            <div>\n                <br/>\n\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"schoolName1\"\n                            [matAutocomplete]=\"auto4\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"School Name\"\n                            type=\"text\">\n                    <mat-autocomplete #auto4=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_schools1 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"degree1\"\n                            [matAutocomplete]=\"auto5\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Degree\"\n                            type=\"text\">\n                    <mat-autocomplete #auto5=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_degrees1 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"fieldOfStudy1\"\n                            [matAutocomplete]=\"auto6\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Field of Study\"\n                            type=\"text\">\n                    <mat-autocomplete #auto6=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_fields1 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n            </div>\n\n            <br/>\n\n            <p>Any other education detail:</p>\n            <div>\n\n                <br/>\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"schoolName2\"\n                            [matAutocomplete]=\"auto7\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"School Name\"\n                            type=\"text\">\n                    <mat-autocomplete #auto7=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_schools2 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"degree2\"\n                            [matAutocomplete]=\"auto8\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Degree\"\n                            type=\"text\">\n                    <mat-autocomplete #auto8=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_degrees2 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <span class=\"form-group\">\n                <mat-form-field class=\"example-full-width\">\n                    <input\n                            [formControl]=\"fieldOfStudy2\"\n                            [matAutocomplete]=\"auto9\"\n                            aria-label=\"Number\"\n                            matInput\n                            placeholder=\"Field of Study\"\n                            type=\"text\">\n                    <mat-autocomplete #auto9=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions_fields2 | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </span>\n            </div>\n\n            <div class=\"row submit-button-container\">\n                <div class=\"col-md-4\">\n                    <button [disabled]=\"!exampleForm.valid\" class=\"submit-button\" color=\"primary\" mat-raised-button\n                            type=\"submit\">Create\n                    </button>\n                </div>\n            </div>\n\n\n        </form>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FirebaseService} from '../../shared/services/firebase.service';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from \"../../shared/services/auth.service\";\nimport {finalize, map, startWith} from 'rxjs/operators';\nimport * as countries from '../../../assets/Countries.json';\n//for image:\nimport {AngularFireStorage} from \"@angular/fire/storage\";\nimport {Observable} from \"rxjs\";\nimport {Router} from \"@angular/router\";\n\n// import {Observable} from \"rxjs\";\n\n@Component({\n    selector: 'app-new-user',\n    templateUrl: './new-user.component.html',\n    styleUrls: ['./new-user.component.css']\n})\nexport class NewUserComponent implements OnInit {\n\n    exampleForm: FormGroup;\n    validation_messages = {\n        'name': [\n            {type: 'required', message: 'Name is required.'}\n        ],\n\n        'age': [\n            {type: 'required', message: 'Age is required.'},\n        ]\n    };\n\n    //variables for image\n    title = \"cloudsSorage\";\n    selectedFile: File = null;\n    fb_image;\n    downloadURL: Observable<string>;\n    userInfo;\n    //-----\n\n    country = new FormControl();\n    options: string[] = countries.countryList;\n    filteredOptions: Observable<string[]>;\n    gender: string[] = ['Male', 'Female', 'Other'];\n\n    constructor(\n        public firebaseService: FirebaseService,\n        private fb: FormBuilder,\n        private storage: AngularFireStorage,\n        public authService: AuthService,\n        private router: Router,\n    ) {\n    }\n\n    ngOnInit() {\n        this.filteredOptions = this.country.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value))\n            );\n\n        this.createForm();\n        this.authService.user$.subscribe(user => this.userInfo = user);\n        // this.user=getValue(this.authService.user$)\n        console.log(this.userInfo)\n    }\n\n    createForm() {\n        this.exampleForm = this.fb.group({\n            name: ['', Validators.required],\n            age: ['', Validators.required],\n            imageurl: [''],\n            country: [''],\n            gender: ['', [Validators.required]],\n        });\n    }\n\n    resetFields() {\n        // this.avatarLink = \"https://s3.amazonaws.com/uifaces/faces/twitter/adellecharles/128.jpg\";\n        this.exampleForm = this.fb.group({\n            name: new FormControl('', Validators.required),\n            // surname: new FormControl('', Validators.required),\n            age: new FormControl('', Validators.required),\n        });\n    }\n\n    onSubmit(value) {\n        value.country = this.country.value;\n        this.firebaseService.createUser(value, this.fb_image, this.userInfo.uid)\n            .then(\n                res => {\n                    this.router.navigate(['preference']);\n                    this.resetFields();\n\n                }\n            )\n    }\n\n    onFileSelected(event) {\n        var n = Date.now();\n        const file = event.target.files[0];\n        const filePath = `ProfileImages/${n}`;\n        const fileRef = this.storage.ref(filePath);\n        const task = this.storage.upload(`ProfileImages/${n}`, file);\n        task\n            .snapshotChanges()\n            .pipe(\n                finalize(() => {\n                    this.downloadURL = fileRef.getDownloadURL();\n                    this.downloadURL.subscribe(url => {\n                        if (url) {\n                            this.fb_image = url;\n                        }\n                        console.log(this.fb_image);\n\n                    });\n                })\n            )\n            .subscribe(url => {\n                if (url) {\n                    console.log(url);\n                }\n            });\n    }\n\n    private _filter(value: string): string[] {\n        const filterValue = value.toLowerCase();\n        return this.options.filter(option => option.toLowerCase().includes(filterValue));\n    }\n\n\n}\n","<div class=\"form-group col-12\">\n    <input #userPhoto\n           (change)=\"onFileSelected($event)\"\n           autocomplete=\"off\"\n           id=\"file\"\n           name=\"image\"\n           type=\"file\"\n    />\n</div>\n<!--<app-upload-image></app-upload-image>-->\n<form (ngSubmit)=\"onSubmit(exampleForm.value)\" [formGroup]=\"exampleForm\" class=\"create-form\" novalidate>\n\n    <div class=\"form-group\">\n        <mat-form-field class=\"input-style\">\n            <input class=\"form-control\" formControlName=\"name\" matInput placeholder=\"Name\">\n        </mat-form-field>\n        <ng-container *ngFor=\"let validation of validation_messages.name\">\n            <mat-error\n                    *ngIf=\"exampleForm.get('name').hasError(validation.type) && (exampleForm.get('name').dirty || exampleForm.get('name').touched)\">{{validation}}</mat-error>\n        </ng-container>\n    </div>\n\n    <div class=\"form-group\">\n        <mat-radio-group\n                aria-labelledby=\"example-radio-group-label\"\n                class=\"input-style\"\n                formControlName=\"gender\">\n            <mat-radio-button *ngFor=\"let gen of gender\" [value]=\"gen\" class=\"example-radio-button\">\n                {{gen}}\n            </mat-radio-button>\n        </mat-radio-group>\n        <!--                <div *ngIf=\"exampleForm.get('gender').hasError('required')\" class=\"error\">-->\n        <!--                    Gender is required-->\n        <!--                </div>-->\n    </div>\n\n    <!--  <div class=\"form-group\">-->\n    <!--    <mat-form-field class=\"input-style\">-->\n    <!--      <input matInput placeholder=\"Surname\" class=\"form-control\" formControlName=\"surname\">-->\n    <!--    </mat-form-field>-->\n    <!--    <ng-container *ngFor=\"let validation of validation_messages.surname\">-->\n    <!--      <mat-error *ngIf=\"exampleForm.get('surname').hasError(validation.type) && (exampleForm.get('surname').dirty || exampleForm.get('surname').touched)\">{{validation}}</mat-error>-->\n    <!--    </ng-container>-->\n    <!--  </div>-->\n\n    <div class=\"form-group\">\n        <mat-form-field class=\"input-style\">\n            <input class=\"form-control\" formControlName=\"age\" matInput max=\"100\" min=\"0\" placeholder=\"Age\"\n                   type=\"number\">\n        </mat-form-field>\n        <ng-container *ngFor=\"let validation of validation_messages.age\">\n            <mat-error\n                    *ngIf=\"exampleForm.get('age').hasError(validation.type) && (exampleForm.get('age').dirty || exampleForm.get('age').touched)\">{{validation}}</mat-error>\n        </ng-container>\n    </div>\n\n    <div class=\"form-group\">\n        <mat-form-field class=\"example-full-width\">\n            <input\n                    [formControl]=\"country\"\n                    [matAutocomplete]=\"auto\"\n                    aria-label=\"Number\"\n                    matInput\n\n                    placeholder=\"Country\"\n                    type=\"text\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                    {{option}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n    </div>\n\n    <div class=\"row submit-button-container\">\n        <div class=\"col-md-4\">\n            <button [disabled]=\"!exampleForm.valid\" class=\"submit-button\" color=\"primary\" mat-raised-button\n                    type=\"submit\">Create\n            </button>\n        </div>\n    </div>\n\n</form>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-preference',\n  templateUrl: './preference.component.html',\n  styleUrls: ['./preference.component.css']\n})\n\nexport class PreferenceComponent implements OnInit {\n\n   profileBtnClick = function() {\n        this.router.navigate(['edit-user'], {relativeTo: this.route});\n};\n\n\n  constructor(\n    private route: ActivatedRoute,\n    public authService: AuthService,\n    public router: Router,\n    public ngZone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<html>\n<body>\n<div class=\"split left\">\n    <div *ngIf=\"authService.user$ | async as user\">\n        <mat-toolbar color=\"primary\">\n            <div class=\"media\">\n                <a routerLink=\"/user\">\n                    <img alt=\"{{user.displayName}}\"\n                         class=\"align-self-start mr-5 img-thumbnail rounded-circle\"\n                         src=\"{{(user.profile.profileImageUrl) ? user.profile.profileImageUrl : '/assets/images/dummy_profile.png'}}\">\n                </a>\n<!--                <div class=\"media-body\">-->\n<!--                    <h1>Hello: <strong>{{(user.displayName) ? user.displayName : 'User'}}</strong></h1>-->\n<!--                    <p>User ID: <strong>{{user.uid}}</strong></p>-->\n<!--                    <p>Email: <strong>{{user.email}}</strong></p>-->\n                    <!-- <p>Email Verified: <strong>{{user.emailVerified}}</strong></p> -->\n<!--                </div>-->\n            </div>\n\n            <span class=\"spacer\">{{user.displayName}}</span>\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"menu button\"\n            style=\"color: antiquewhite\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n              <button mat-menu-item (click)=\"profileBtnClick();\">\n                <mat-icon>face</mat-icon>\n                <span>Profile</span>\n              </button>\n              <button mat-menu-item (click)=\"authService.SignOut()\">\n                <mat-icon>logout</mat-icon>\n                <span>Logout</span>\n              </button>\n            </mat-menu>\n        </mat-toolbar>\n    </div>\n        <button color=#b2fef7\n                class=\"preference-btn\"\n            routerLink=\"/preference\">\n        My Tags\n        </button>\n    <app-chat-list></app-chat-list>\n</div>\n\n<div class=\"split right\">\n        <div class=\"centered\">\n            <router-outlet></router-outlet>\n        </div>\n</div>\n</body>\n</html>","import {Component, NgZone, OnInit} from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n\n  channel = false;\n\n    countChange(event) {\n      this.channel = event;\n    }\n  constructor(\n      public authService: AuthService,\n      public router: Router,\n      public ngZone: NgZone) {}\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Left Navbar -->\n<!--<div class=\"split left\">-->\n<!--    <app-chat-list (update)=\"countChange($event)\" [channel]=false></app-chat-list>-->\n<!--    <div class=\"text-center\" style=\"position: absolute; bottom: 5%; right:40%\">-->\n<!--        <button (click)=\"authService.SignOut()\" class=\"btn btn-primary btn-lg\" style=\"margin-top: auto;\" type=\"button\">-->\n<!--            Log out-->\n<!--        </button>-->\n<!--    </div>-->\n<!--</div>-->\n\n<!-- Upload Headshot -->\n\n<h1 class=\"h2\">User Profile</h1>\n<div *ngIf=\"authService.user$ | async as user\" class=\"row\">\n  <div class=\"text-center\">\n    <div class=\"col-md-12\">\n      <div class=\"media\">\n        <img alt=\"{{user.displayName}}\"\n             class=\"small\" src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\">\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"form-group\">\n  <label for=\"userPhoto1\">\n    Upload my photo here\n  </label>\n  <input class=\"form-control-file\" id=\"userPhoto1\" type=\"file\">\n</div>\n\n<form>\n  <!-- Personal Email -->\n  <div class=\"form-group\">\n    <label class=\"tab\">My Email Address</label>\n    <input class=\"form-control\" id=\"exampleFormControlInput1\"\n           placeholder=\"robot@hexchat.com\" type=\"email\">\n  </div>\n\n  <!-- Gender Info -->\n  <label class=\"tab\"> My gender is: </label>\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" id=\"userGender1\" name=\"inlineRadioOptions\" type=\"radio\" value=\"option1\">\n    <label class=\"form-check-label\" for=\"userGender1\">Female</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" id=\"userGender2\" name=\"inlineRadioOptions\" type=\"radio\" value=\"option2\">\n    <label class=\"form-check-label\" for=\"userGender2\">Male</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" id=\"userGender3\" name=\"inlineRadioOptions\" type=\"radio\" value=\"option3\">\n    <label class=\"form-check-label\" for=\"userGender3\">Other</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" id=\"userGender4\" name=\"inlineRadioOptions\" type=\"radio\" value=\"option4\">\n    <label class=\"form-check-label\" for=\"userGender4\">Secret</label>\n  </div>\n\n  <!-- Age Info -->\n  <div class=\"form-group\">\n    <label for=\"userAge\">I belong to this range of age.</label>\n    <select class=\"form-control\" id=\"userAge\">\n      <option>18-20</option>\n      <option>21-25</option>\n      <option>26-30</option>\n      <option>31-35</option>\n      <option>36-40</option>\n      <option>41-50</option>\n      <option>51-60</option>\n      <option>60+</option>\n    </select>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"col-md-6 mb-3\">\n      <label for=\"userCity\">I live in </label>\n      <input class=\"form-control\" id=\"userCity\" required type=\"text\">\n    </div>\n\n    <div class=\"col-md-3 mb-3\">\n      <label for=\"userState\">State</label>\n      <select class=\"custom-select\" id=\"userState\" required>\n        <option disabled selected value=\"\">Choose...</option>\n        <option>...</option>\n      </select>\n    </div>\n\n    <!-- Zipcode div-->\n    <div class=\"col-md-3 mb-3\">\n      <label for=\"userZipcode\">Zip</label>\n      <input class=\"form-control\" id=\"userZipcode\" required type=\"text\">\n    </div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input class=\"form-check-input\" id=\"userCheck\" required type=\"checkbox\" value=\"\">\n      <label class=\"form-check-label\" for=\"userCheck\">\n        Click to protect my personal information.\n      </label>\n    </div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <label for=\"userText\">Things I want to share...\n    </label>\n    <textarea class=\"form-control\" id=\"userText\"\n              placeholder=\"E.g. I like skiing and skating in my leisure time./I have a dog named Lambda.\"\n              rows=\"3\"></textarea>\n  </div>\n\n  <button class=\"btn btn-primary btn-lg\" type=\"button\" type=\"submit\">\n    Renew my profile\n  </button>\n\n</form>\n\n<!-- Borrow -->\n","<h2>Choose one field of preferences.</h2>\n<br/>\n\n\n<mat-accordion>\n<!--  Template for one group of tags.-->\n<mat-expansion-panel>\n  <mat-expansion-panel-header>\n    Background Tags\n  </mat-expansion-panel-header>\n\n    <mat-chip-list #chipList aria-label=\"Background selection\" [multiple]=\"true\" selectable>\n      <mat-chip *ngFor=\"let option of tags1\" [selected]=\"chipControl.tags1.has(option)\"\n                (click)=\"toggleChip(option, 'tags1')\">\n        {{option}}\n      </mat-chip>\n    </mat-chip-list>\n\n  <mat-action-row>\n<button type=\"button\" class=\"btn btn-primary\" color=\"primary\"\n          (click)=\"onSubmit(1, chipControl.tags1)\">Submit</button>\n  </mat-action-row>\n</mat-expansion-panel>\n\n<br/>\n\n\n  <mat-expansion-panel>\n  <mat-expansion-panel-header>\n    Industrial Tags\n  </mat-expansion-panel-header>\n\n    <mat-chip-list #Chiplist aria-label=\"Background selection\" [multiple]=\"true\" selectable>\n      <mat-chip *ngFor=\"let option of tags2\" [selected]=\"chipControl.tags2.has(option)\"\n                (click)=\"toggleChip(option, 'tags2')\">\n        {{option}}\n      </mat-chip>\n    </mat-chip-list>\n\n  <mat-action-row>\n  <button type=\"button\" class=\"btn btn-primary\" color=\"primary\"\n          (click)=\"onSubmit(2, chipControl.tags2)\">Submit</button>\n  </mat-action-row>\n</mat-expansion-panel>\n  <br/>\n\n<mat-expansion-panel>\n  <mat-expansion-panel-header>\n    Interest Tags\n  </mat-expansion-panel-header>\n\n    <mat-chip-list #Chiplist aria-label=\"Background selection\" [multiple]=\"true\" selectable>\n      <mat-chip *ngFor=\"let option of tags3\" [selected]=\"chipControl.tags3.has(option)\"\n\n                (click)=\"toggleChip(option, 'tags3')\">\n        {{option}}\n      </mat-chip>\n    </mat-chip-list>\n\n  <mat-action-row>\n    <button type=\"button\" class=\"btn btn-primary\" color=\"primary\"\n          (click)=\"onSubmit(3, chipControl.tags3)\">Submit</button>\n  </mat-action-row>\n</mat-expansion-panel>\n\n\n\n\n</mat-accordion>\n\n\n\n<!--<h4 *ngIf=\"submitted>1\">-->\n<!--  Thank you! You have already submitted your preference.-->\n\n<!--  We are hurrying to match you to a group.-->\n<!--</h4>-->\n\n\n\n<br/>\n\n\n<!--Below here is the function to add and remove tags.-->\n<!--<mat-expansion-panel>-->\n<!--  <mat-expansion-panel-header>-->\n<!--    Customized Tags-->\n<!--  </mat-expansion-panel-header>-->\n\n<!--<mat-form-field class=\"example-chip-list\">-->\n<!--  <mat-chip-list #chipList3 aria-label=\"Hobby selection\">-->\n<!--    <mat-chip *ngFor=\"let exp2 of drawer3\" [selectable]=\"selectable\"-->\n<!--              [removable]=\"removable\" (removed)=\"remove(exp2, this.drawer3)\">-->\n<!--      {{exp2.name}}-->\n<!--      <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>-->\n<!--    </mat-chip>-->\n<!--    <label>-->\n<!--      <input (matChipInputTokenEnd)=\"add($event, this.drawer3)\"-->\n<!--             [matChipInputAddOnBlur]=\"addOnBlur\"-->\n<!--             [matChipInputFor]=\"chipList3\"-->\n<!--             [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"-->\n<!--             [multiple]=true-->\n<!--             placeholder=\"Add your own specific interests and find mates.\">-->\n<!--    </label>-->\n<!--  </mat-chip-list>-->\n<!--</mat-form-field>-->\n\n<!--  <mat-action-row>-->\n<!--    <button type=\"button\" class=\"btn btn-primary\" color=\"primary\"-->\n<!--          (click)=\"onSubmit(drawer1, drawer2, drawer3)\">Submit</button>-->\n<!--  </mat-action-row>-->\n<!--</mat-expansion-panel>-->\n\n","import {Component, OnInit} from '@angular/core';\nimport {FirebaseService} from '../../shared/services/firebase.service';\nimport {AuthService} from '../../shared/services/auth.service';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport {first} from \"rxjs/operators\";\n\nexport interface Category1 {\n  name: string;\n}\n\n@Component({\n  selector: 'app-rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.css']\n})\n\nexport class RatingComponent implements OnInit {\n  showSuccessMsg = false;\n  userId;\n  // These are environment variables for chips/tags.\n  visible = true;\n  selectable = false;\n  removable = true;\n  addOnBlur = true;\n  isUserInput = true;\n  // userTags = this.firebaseService.getUserTags(this.userId);\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  tags1;\n  tags2;\n  tags3;\n  drawer1: Category1[] = [];\n  drawer2: Category1[] = [];\n  drawer3: Category1[] = [];\n  private tags;\n  chipControl = {tags1: new Set(), tags2: new Set(), tags3: new Set()};\n  submitted = this.alreadySub();\n\n\n  constructor(public firebaseService: FirebaseService,\n              public authService: AuthService,\n              private fb: FormBuilder) {}\n\n  async ngOnInit() {\n    this.authService.user$.subscribe(user => {\n      if (user) {\n        this.userId = user.uid;\n      }\n    });\n    this.tags = await this.firebaseService.getTest();\n    this.tags1 = await this.firebaseService.getTest().then(aws => aws.tags1);\n    this.tags2 = await this.firebaseService.getTest().then(aws => aws.tags2);\n    this.tags3 = await this.firebaseService.getTest().then(aws => aws.tags3);\n\n    for (const item of this.tags1) {\n    this.drawer1.push({name: item.toString()});\n    }\n\n    for (const item of this.tags2) {\n    this.drawer2.push({name: item.toString()});\n    }\n\n    for (const item of this.tags3) {\n    this.drawer3.push({name: item.toString()});\n    }\n\n\n  }\n\n  async alreadySub() {\n        const pref = await this.authService.user$.pipe(first()).toPromise()\n            .then(ams => ams.preference);\n        console.log(\"hi\", Object.keys(pref).length);\n\n    }\n\n\n  onSubmit(sth, tags) {\n        // value.avatar = this.item.avatar;\n        console.log('vali', [...tags]);\n        this.firebaseService.updatePreference(this.userId, sth, [...tags]);\n    }\n\n  toggleChip = (chip: any, tagField) => {\n    const addChip = () => { this.chipControl[tagField].add(chip); };\n    const removeChip = () => { this.chipControl[tagField].delete(chip); };\n\n    this.chipControl[tagField].has(chip) ? removeChip() : addChip();\n  }\n\n\n  // chips(tagField: string) {\n  //   const field = this.chipControl;\n  //   return field.tagField.value;\n  //    }\n\n  //   add(event: MatChipInputEvent, thing): void {\n  //   const input = event.input;\n  //   const value = event.value;\n  //   // Add a tag\n  //   if ((value || '').trim()) {\n  //     thing.push({name: value.trim()});\n  //   }\n  //\n  //   // Reset the input value\n  //   if (input) {\n  //     input.value = '';\n  //   }\n  // }\n  //\n  //\n  // remove(exp: Category1, thing): void {\n  //   const index = thing.indexOf(exp);\n  //\n  //   if (index >= 0) {\n  //     thing.splice(index, 1);\n  //   }\n  // }\n\n\n\n\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\nimport { ChatService } from '../../shared/services/chat.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-showprofile',\n  templateUrl: './showprofile.component.html',\n  styleUrls: ['./showprofile.component.css']\n})\nexport class ShowProfileComponent implements OnInit {\n  users$: Observable<any>;\n\n  constructor(\n    private route: ActivatedRoute,\n    public cs: ChatService,\n   ) { }\n\n  ngOnInit() {\n    const userID = this.route.snapshot.paramMap.get('id');\n    console.log(\"userid on paramMap\" ,userID)\n    this.users$ = this.cs.userID2usermail_(userID);\n  }\n\n}\n","<div *ngIf=\"users$ | async as users\">\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title><img [src]=\"users.profile.profileImageUrl\" class=\"header-image\"></mat-card-title>\n            <div>Name: {{users.profile.name}}</div>\n        </mat-card-header>\n        <mat-card-content>\n            <div>Gender: {{users.profile.gender}}</div>\n            <div>Age: {{users.profile.age}}</div>\n            <div>Country: {{users.profile.country}}</div>\n        </mat-card-content>\n    </mat-card>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\n\nexport class SignInComponent implements OnInit {\n\n  constructor(\n    // Inject AuthService class here so that these services will be available throughout the same template\n    public authService: AuthService\n    ) { }\n\n  ngOnInit() { }\n\n}\n\nimport { NgModule } from '@angular/core';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\n\nconst modules = [\n  MatCardModule,\n  MatInputModule,\n  MatButtonModule\n];\n\n@NgModule({\n  imports: modules,\n  exports: modules,\n})\nexport class MaterialModule {}\n","<html>\n\n\n  <body class=\"bgimg-1\">\n    <mat-toolbar color=\"primary\">\n  <button mat-button class=\"hexchat-text\" routerLink=\"/home\">Hexchat</button>\n<!--    <span style=\"padding-right: 1rem\">Home</span>-->\n</mat-toolbar>\n\n\n<mat-card>\n  <mat-card-content>\n\n      <mat-card-title style=\"color: #8161ba;\">Recommended</mat-card-title>\n      <button mat-raised-button class=\"fb connect\" (click)=\"authService.FacebookAuthLogin()\" >\n\n              Login with Facebook</button>\n        </mat-card-content>\n</mat-card>\n      <mat-card>\n  <mat-card-content>\n      <mat-card-title style=\"color: #9877d1;\">Email Login</mat-card-title>\n      <mat-form-field>\n        <input matInput placeholder=\"Email\" #userEmail required>\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput type=\"password\" placeholder=\"Password\" \n        (keyup.enter)=\"authService.SignIn(userEmail.value, userPassword.value)\"\n        #userPassword required>\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" style=\"color: white;\"\n              (click)=\"authService.SignIn(userEmail.value, userPassword.value)\">\n              Login</button>\n      <mat-card-actions>\n\n          <button mat-button color=\"primary\" routerLink=\"/join\">Not a user yet?</button>\n      </mat-card-actions>\n  </mat-card-content>\n</mat-card>\n\n\n</body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css', '../signin/signin.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<html>\n\n  <body class=\"bgimg-1\">\n    <mat-toolbar color=\"primary\">\n  <button mat-button class=\"hexchat-text\" routerLink=\"/home\">Hexchat</button>\n</mat-toolbar>\n\n\n<mat-card>\n  <mat-card-content>\n      <mat-card-title style=\"color: #9877d1;\">Recommended</mat-card-title>\n      <button mat-raised-button class=\"fb connect\" (click)=\"authService.FacebookAuth()\" >\n              Sign Up with Facebook</button>\n        </mat-card-content>\n</mat-card>\n      <mat-card>\n  <mat-card-content>\n      <mat-card-title style=\"color: #9877d1;\">Sign Up with Email</mat-card-title>\n      <mat-form-field>\n        <input matInput placeholder=\"Email\" #userEmail required>\n      </mat-form-field>\n\n     <mat-form-field>\n        <input matInput type=\"password\" placeholder=\"Password\"\n         (keyup.enter)=\"authService.SignUp(userEmail.value, userPassword.value)\"\n         #userPassword required>\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" style=\"color: white;\"\n              (click)=\"authService.SignUp(userEmail.value, userPassword.value)\">\n              Sign Up</button>\n      <mat-card-actions>\n\n          <button mat-button color=\"primary\" routerLink=\"/signin\">Already have an account?</button>\n      </mat-card-actions>\n  </mat-card-content>\n</mat-card>\n\n\n</body>\n</html>\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSnackBarModule} from '@angular/material/snack-bar'\n\n// import {MatOptionModule} from '@angular/material/option';\n\nconst material = [\n  FormsModule,\n  ReactiveFormsModule,\n  MatToolbarModule,\n  MatInputModule,\n  MatCardModule,\n  MatMenuModule,\n  MatIconModule,\n  MatButtonModule,\n  MatTableModule,\n  MatDividerModule,\n  MatSlideToggleModule,\n  MatSelectModule,\n  MatAutocompleteModule,\n  MatListModule,\n  MatSnackBarModule,\n  // MatOptionModule,\n  MatProgressSpinnerModule];\n\n@NgModule({\n  exports: [material],\n  imports: [CommonModule,\n      material\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n} from '@angular/router';\n\nimport { AuthService } from '../services/auth.service';\nimport { Observable } from 'rxjs';\nimport { tap, map, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ) { }\n\n  canActivate(next, state): Observable<boolean> {\n    return this.authService.user$.pipe(\n      take(1),\n      map(user => !!user), // <-- map to boolean\n      tap(loggedIn => {\n        if (!loggedIn) {\n          console.log('access denied');\n          this.router.navigate(['/']);\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// components\nimport { HomeComponent } from '../../components/home/home.component';\nimport { PreferenceComponent} from '../../components/preference/preference.component';\nimport { SignInComponent } from '../../components/signin/signin.component';\nimport { SignUpComponent } from '../../components/signup/signup.component';\n\nimport { RatingComponent } from '../../components/rating/rating.component';\nimport { ChatMsgsComponent } from '../../components/chat-msgs/chat-msgs.component';\nimport { ProfileComponent } from '../../components/profile/profile.component';\n\nimport { ChatComponent } from '../../components/chat/chat.component';\nimport { ShowProfileComponent } from '../../components/showprofile/showprofile.component';\nimport { FrontComponent } from '../../components/front/front.component';\n\nimport { NewUserComponent } from '../../components/new-user/new-user.component';\nimport { NewUserFacebookComponent } from '../../components/new-user-facebook/new-user-facebook.component';\nimport { EditUserComponent } from '../../components/edit-user/edit-user.component';\n\n// Import canActivate guard services\nimport { AuthGuard } from '../../shared/guard/auth.guard';\n\n// Include route guard in routes array\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'join', component: SignUpComponent, canActivate: []},\n  { path: 'signin', component: SignInComponent, canActivate: []},\n  // { path: 'new-user', component: NewUserComponent, canActivate: [AuthGuard]},\n  { path: 'new-user', component: NewUserFacebookComponent, canActivate: [AuthGuard]},\n  // { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n\n  { path: 'front', component: FrontComponent},\n  // { path: 'chats/:id', component: ChatComponent, canActivate: [AuthGuard]},\n\n  { path: 'user',\n    component: PreferenceComponent,\n    canActivate: [AuthGuard],\n    children:[\n      { path: '', component: RatingComponent},\n      { path: 'profile', component: ProfileComponent},\n      { path: 'edit-user', component: EditUserComponent},\n      { path: 'chats/:id', component: ChatComponent,\n        children:[\n            { path: 'user-profile/:id',\n              component: ShowProfileComponent,\n            }\n        ]\n       }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase/app';\nimport * as firebase from 'firebase';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { User } from './user.model';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, first, map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n//    user$: Observable<User>;\n    user$: Observable<any>;\n    // userData: any;\n\n  constructor(\n    private afAuth: AngularFireAuth, // Inject Firebase auth service\n    private afs: AngularFirestore,  // Inject FIrestore service\n    private router: Router,\n    public ngZone: NgZone          // NgZone service to remove outside scope warning\n  ) {\n    this.user$ = this.afAuth.authState.pipe(\n      switchMap(user => {\n        if (user) {\n          return this.afs.doc<User>(`users/${user.uid}`).valueChanges();\n        } else {\n          return of(null);\n        }\n      })\n    );\n  }\n\n  getUser() {\n    return this.user$.pipe(first()).toPromise();\n  }\n\n  // Sign in with email/password\n  async SignIn(email, password) {\n    const response = await firebase.auth().signInWithEmailAndPassword(email, password)\n      .catch(function(error) {\n        var errorMessage = error.message;\n        alert(errorMessage);\n        console.log(error);\n      });\n    // const token = await response.user.getIdToken();\n    console.log('THIS IS RESPONSE', response);\n    // console.log('THIS IS TOKEN', token);\n    this.router.navigate(['user']);\n    console.log('finish login and route to preference')\n    // this.SetUserData(response.user)\n  }\n\n  // Sign up with email/password\n  async SignUp(email, password) {\n    const response = await firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then(response => {\n        this.SetUserData(response.user)\n        console.log('THIS IS RESPONSE', response);\n        this.router.navigate(['new-user']);\n      })\n      .catch(function(error) {\n        var errorMessage = error.message;\n        alert(errorMessage);\n        console.log(error);\n      });\n    // const token = await response.user.getIdToken();\n    // console.log('THIS IS RESPONSE', response);\n    // console.log('THIS IS TOKEN', token);\n    // this.router.navigate(['new-user']);\n    // console.log('finish login and route to preference')\n    // this.SetUserData(response.user)\n  }\n\n  // Sign up with Facebook\n  async FacebookAuth() {\n    // return new auth.FacebookAuthProvider();\n    const provider = new firebase.auth.FacebookAuthProvider();\n    const credential = await this.afAuth.signInWithPopup(provider);\n    this.router.navigate(['new-user']);\n    console.log(credential.user);\n    return this.SetUserData(credential.user);\n  }\n\n    // Sign in with Facebook\n  async FacebookAuthLogin() {\n    // return new auth.FacebookAuthProvider();\n    const provider = new firebase.auth.FacebookAuthProvider();\n    const credential = await this.afAuth.signInWithPopup(provider);\n    this.router.navigate(['user']);\n    // return this.SetUserData(credential.user);\n  }\n\n  // Update data in Firestore\n  private SetUserData(user){\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      photoURL: user.photoURL,\n      displayName: user.displayName,\n      emailVerified: user.emailVerified,\n      profile: {\n        profileImageUrl: user.photoURL,\n        name: user.displayName\n      },\n      preference: {}\n    };\n    return userRef.set(userData, {\n      merge: true\n    });\n  }\n\n  async SignOut() {\n    await this.afAuth.signOut();\n    return this.router.navigate(['']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { firestore } from 'firebase/app';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Observable, combineLatest, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor(\n    private afs: AngularFirestore,\n    private auth: AuthService,\n    private router: Router\n  ) {}\n\n  get(chatId) {\n    return this.afs\n      .collection<any>('chats')\n      .doc(chatId)\n      .snapshotChanges()\n      .pipe(\n        map(doc => {\n          console.log('payload id', doc.payload.id);\n          // doc.payload.id is chatId\n          return { id: doc.payload.id,\n                   ...doc.payload.data() as {}\n           };\n        })\n      );\n  }\n\n  userID2usermail_(userID){\n      console.log(\"clicked userID is \", userID);\n      return this.afs\n      .collection<any>('users')\n      .doc(userID)\n      .snapshotChanges()\n      .pipe(\n        map(doc => {\n          console.log('payload id', doc.payload.id);\n          // doc.payload.id is chatId\n          return { id: doc.payload.id,\n                   ...doc.payload.data() as {}\n           };\n        })\n      );\n   }\n\n\n  getUserChats() {\n    return this.auth.user$.pipe(\n      switchMap(user => {\n        return this.afs\n          .collection('chats', ref => ref.where('uid', 'array-contains', user.uid))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data: Object = a.payload.doc.data();\n                const id = a.payload.doc.id;\n                return { id, ...data };\n              });\n            })\n          );\n      })\n    );\n  }\n\n  async create() {\n    const { uid } = await this.auth.getUser();\n\n    const data = {\n      uid,\n      createdAt: Date.now(),\n      messages_cnt: 0,\n      messages: [],\n      metadata: {},\n      connection: {},\n      questionnaire: {}\n    };\n\n    const docRef = await this.afs.collection('chats').add(data);\n\n    return this.router.navigate(['chats', docRef.id]);\n  }\n\n  async sendMessage(chatId, content) {\n    const { uid } = await this.auth.getUser();\n\n    const data = {\n      uid,\n      content,\n      createdAt: Date.now()\n    };\n\n    if (uid) {\n      const ref = this.afs.collection('chats').doc(chatId);\n      return ref.update({\n        messages: firestore.FieldValue.arrayUnion(data)\n      });\n    }\n  }\n\n  async deleteMessage(chat, msg) {\n    const { uid } = await this.auth.getUser();\n\n    const ref = this.afs.collection('chats').doc(chat.id);\n    console.log(msg);\n    if (chat.uid === uid || msg.uid === uid) {\n      // Allowed to delete\n      delete msg.user;\n      return ref.update({\n        messages: firestore.FieldValue.arrayRemove(msg)\n      });\n    }\n  }\n\n  joinUsers(chat$: Observable<any>) {\n    let chat;\n    const joinKeys = {};\n\n    return chat$.pipe(\n      switchMap(c => {\n        // Unique User IDs\n        chat = c;\n        const uids = Array.from(new Set(c.messages.map(v => v.uid)));\n\n        // Firestore User Doc Reads\n        const userDocs = uids.map(u =>\n          this.afs.doc(`users/${u}`).valueChanges()\n        );\n\n        return userDocs.length ? combineLatest(userDocs) : of([]);\n      }),\n      map(arr => {\n        arr.forEach(v => (joinKeys[(<any>v).uid] = v));\n        chat.messages = chat.messages.map(v => {\n          return { ...v, user: joinKeys[v.uid] };\n        });\n\n        return chat;\n      })\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {AngularFirestore} from '@angular/fire/firestore';\nimport {Observable, of} from 'rxjs';\nimport {first, switchMap} from 'rxjs/operators';\nimport {Test} from './user.model';\nimport {AngularFireAuth} from '@angular/fire/auth';\n\n\n@Injectable({\n    providedIn: 'root'\n})\n\n\nexport class FirebaseService {\n\n    test$: Observable<any>;\n\n    constructor(public db: AngularFirestore,\n                private afAuth: AngularFireAuth) {\n        this.test$ = this.afAuth.authState.pipe(\n            switchMap(user => {\n                if (user) {\n                    return this.db.doc<Test>(`group/1YsYSkVW2lZGUXynAI8l`).valueChanges();\n                } else {\n                    return of(null);\n                }\n            })\n        );\n\n    }\n\n\n    async getTest() {\n        const tags = await this.test$.pipe(first()).toPromise()\n            .then(ams => ams.tags);\n        const tags1 = Object.keys(tags.background);\n        const tags2 = Object.keys(tags.career);\n        const tags3 = Object.keys(tags.interest);\n        console.log({tags1, tags2, tags3});\n        return {tags1, tags2, tags3};\n\n    }\n\n    createUser(value, imageurl, uid) {\n        return this.db.collection('users').doc(uid).update({\n            profile: {\n                name: value.name,\n                gender: value.gender,\n                country: value.country,\n                age: parseInt(value.age),\n                profileImageUrl: imageurl\n            },\n            preference: {}\n        }).then(function () {\n            console.log('User profile created');\n        });\n\n    }\n\n    createUserFacebook(value, name, imageurl, uid) {\n        console.log(value.countries);\n        return this.db.collection('users').doc(uid).update({\n\n            profile: {\n                name: value.userAppName,\n                gender: value.gender,\n                // nameToSearch: value.name.toLowerCase(),\n                userFbName: name,\n                age: parseInt(value.age),\n                profileImageUrl: imageurl,\n                country: value.countries,\n                languages: value.languages,\n                interests: value.interests,\n                jobTitle: value.jobTitle,\n                industry: value.industry,\n                school1Info: value.school1Info,\n                school2Info: value.school2Info\n\n\n            },\n            preference: {}\n        }).then(function () {\n\n            console.log('User profile created');\n        });\n\n    }\n\n\n    updateUser(userKey,value,profileImageUrl) {\n        return this.db.collection('users').doc(userKey).update({\n            profile: {\n                name: value.userAppName,\n                age: parseInt(value.age),\n                gender: value.gender,\n                country: value.countries,\n                languages: value.languages,\n                interests: value.interests,\n                jobTitle: value.jobTitle,\n                industry: value.industry,\n                school1Info: value.school1Info,\n                school2Info: value.school2Info,\n                profileImageUrl: profileImageUrl\n            }\n        }).then(function () {\n            console.log('User profile updated');\n        });\n        // return this.db.collection('users').doc(userKey).set(value);\n    }\n\n\n    updatePreference(userKey, sth, tags) {\n        return this.db.collection('users').doc(userKey).update({\n            preference: {\n                major: sth,\n                selected_tags: tags\n            },\n            // tslint:disable-next-line:only-arrow-functions\n        });\n        // return this.db.collection('users').doc(userKey).set(value);\n    }\n\n    // getTags() {\n    //\n    //     const groupRef = this.db.collection('group',\n    //         ref => ref.orderBy('tags', 'asc'));\n    //     const secondRef = this.db.collection('group').doc('1YsYSkVW2lZGUXynAI8l');\n    //     // console.log('test-get', secondRef.get());\n    //     return secondRef.snapshotChanges().pipe(\n    //     map(doc => {\n    //       console.log('payload id', doc.payload.doc.id);\n    //       console.log('tryit', doc.payload.doc.data().tags);\n    //       return { id: doc.payload.doc.id,\n    //                ...doc.payload.doc.data() as {}\n    //        };\n    //     })\n    //     );\n    //\n    // }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n  apiKey: \"AIzaSyDRB2-4d-joGKpmSGWW3r2NsY1UeuMdN2Q\",\n  authDomain: \"msds603-85328.firebaseapp.com\",\n  databaseURL: \"https://msds603-85328.firebaseio.com\",\n  projectId: \"msds603-85328\",\n  storageBucket: \"msds603-85328.appspot.com\",\n  messagingSenderId: \"516534688358\",\n  appId: \"1:516534688358:web:a26ea92c106aa4ada9eba7\",\n  measurementId: \"G-FS6SEZ8M5X\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}