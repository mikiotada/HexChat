{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chat-list/chat-list.component.ts","webpack:///src/app/components/chat-list/chat-list.component.html","webpack:///src/app/components/chat-msgs/chat-msgs.component.ts","webpack:///src/app/components/chat-msgs/chat-msgs.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/preference/preference.component.ts","webpack:///src/app/components/preference/preference.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/rating/rating.component.ts","webpack:///src/app/components/rating/rating.component.html","webpack:///src/app/components/signin/signin.component.ts","webpack:///src/app/components/signin/signin.component.html","webpack:///src/app/components/signup/signup.component.ts","webpack:///src/app/components/signup/signup.component.html","webpack:///src/app/shared/guard/auth.guard.ts","webpack:///src/app/shared/routing/app-routing.module.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","imports","providers","bootstrap","ChatListComponent","channel","change","chatList","group_name","time","last_msg","img_url","emit","ChatMsgsComponent","HomeComponent","authService","PreferenceComponent","router","ngZone","event","countChange","ProfileComponent","RatingComponent","currentRate1","currentRate2","currentRate3","showSuccessMsg","SignInComponent","SignUpComponent","AuthGuard","next","state","isLoggedIn","navigate","providedIn","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","AuthService","afAuth","afs","authState","subscribe","user","userData","localStorage","setItem","JSON","stringify","parse","getItem","email","password","signInWithEmailAndPassword","result","run","SetUserData","error","window","alert","message","createUserWithEmailAndPassword","provider","FacebookAuthProvider","AuthLogin","signInWithPopup","console","log","uid","photoURL","displayName","emailVerified","userRef","doc","set","merge","signOut","removeItem","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,SAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,6D,CAEA;AAIA;AAMA;AAGA;;;QAkCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,yEAAD,C;AAAa,gBAPf,CACP,uEADO,EAEP,mFAFO,EAGP,gEAAkBC,aAAlB,CAAgC,sEAAYC,cAA5C,CAHO,EAIP,wEAJO,EAKP,8EALO,CAOe;;;;0HAGbF,S,EAAS;AAAA,uBArBlB,2DAqBkB,EApBlB,6EAoBkB,EAnBlB,gGAmBkB,EAlBlB,oFAkBkB,EAjBlB,oFAiBkB,EAhBlB,oFAgBkB,EAflB,4FAekB,EAdlB,uFAckB,EAblB,4FAakB,EAZlB,uFAYkB;AAZF,kBAGhB,uEAHgB,EAIhB,mFAJgB,EAIA,+DAJA,EAMhB,wEANgB,EAOhB,8EAPgB;AAYE,O;AALI,K;;;;;sEAKbA,S,EAAS;cAvBrB,sDAuBqB;eAvBZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EAEZ,6EAFY,EAGZ,gGAHY,EAIZ,oFAJY,EAKZ,oFALY,EAMZ,oFANY,EAOZ,4FAPY,EAQZ,uFARY,EASZ,4FATY,EAUZ,uFAVY,CADN;AAaRC,iBAAO,EAAE,CACP,uEADO,EAEP,mFAFO,EAGP,gEAAkBH,aAAlB,CAAgC,sEAAYC,cAA5C,CAHO,EAIP,wEAJO,EAKP,8EALO,CAbD;AAoBRG,mBAAS,EAAE,CAAC,yEAAD,CApBH;AAqBRC,mBAAS,EAAE,CAAC,2DAAD;AArBH,S;AAuBY,Q;;;;;;;;;;;;;;;;;;ACjDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWI;;AAAkC;AAAA;;AAAA;;AAAA;AAAA;;AAChC;;AAAgB;;AAAhB;;AACA;;AACE;;AAAgD;;AAAmB;;AACnE;;AAAK;;AAAiB;;AACxB;;AACA;;AAAiE;;AAAa;;AAChF;;;;;;AANuB;;AAAA;;AAE6B;;AAAA;;AAC3C;;AAAA;;AAE0D;;AAAA;;;;QDV1DC,iB;AA2CX,mCAAc;AAAA;;AAzCL,aAAAC,OAAA,GAAU,KAAV;AAET,aAAAC,MAAA,GAAgC,IAAI,0DAAJ,EAAhC;AAGA,aAAAC,QAAA,GAAW,CACT;AACAC,oBAAU,EAAE,mBADZ;AAEAC,cAAI,EAAE,SAFN;AAGAC,kBAAQ,EAAE,eAHV;AAIAC,iBAAO,EAAE;AAJT,SADS,EAOT;AACAH,oBAAU,EAAE,kBADZ;AAEAC,cAAI,EAAE,WAFN;AAGAC,kBAAQ,EAAE,sBAHV;AAIAC,iBAAO,EAAE;AAJT,SAPS,EAaT;AACAH,oBAAU,EAAE,mBADZ;AAEAC,cAAI,EAAE,YAFN;AAGAC,kBAAQ,EAAE,aAHV;AAIAC,iBAAO,EAAE;AAJT,SAbS,CAAX;AAoCiB;;;;wCAfJ;AACX,eAAKN,OAAL,GAAe,IAAf;AACA,eAAKC,MAAL,CAAYM,IAAZ,CAAiB,KAAKP,OAAtB;AACD;;;4CAEgB;AACf,eAAKA,OAAL,GAAe,KAAf;AACA,eAAKC,MAAL,CAAYM,IAAZ,CAAiB,KAAKP,OAAtB;AACD;;;0CACc;AACb,eAAKA,OAAL,GAAe,KAAf;AACA,eAAKC,MAAL,CAAYM,IAAZ,CAAiB,KAAKP,OAAtB;AACD;;;mCAKO,CACP;;;;;;;uBA9CUD,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,4d;AAAA;AAAA;ACP9B;;AAE2D;;AAC3D;;AACA;;AAEwD;;AACxD;;AACA;;AACA;;AACE;;AACE;;AAQF;;AACF;;;;AATQ;;AAAA;;;;;;;;;sEDJKA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTV,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;gBAE3B;;;gBACA,oD;iBAAO,Q;;;;;;;;;;;;;;;;;;;;AEVV;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaiB,iB;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,yX;AAAA;AAAA;ACP9B;;AAAI;;AAAa;;AAEjB;;AACE;;AACA;;AAAG;;AAAyB;;AAC5B;;AAAyB;;AAAK;;AAChC;;AAEA;;AACE;;AACA;;AAAG;;AAAiC;;AACpC;;AAAwB;;AAAK;;AAC/B;;AAEA;;AACE;;AACA;;AAAG;;AAAsC;;AACzC;;AAAyB;;AAAK;;AAChC;;AAEA;;AACE;;AACA;;AAAG;;AAAyD;;AAC5D;;AAAwB;;AAAK;;AAC/B;;;;;;;;sEDjBaA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTnB,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQakB,a;AAEX,6BACSC,WADT,EACiC;AAAA;;AAAxB,aAAAA,WAAA,GAAAA,WAAA;AACJ;;;;mCAEG,CACP;;;;;;;uBAPUD,a,EAAa,0I;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,qW;AAAA;AAAA;ACP1B;;AACE;;AAAwB;;AAA4B;;AAAuC;;AAAM;;AAAI;;AAAS;;AAC9G;;AACE;;AAA4B;;AAAqB;;AAAO;;AACxD;;AAA6B;;AAA6B;;AAAO;;AACjE;;AAAyB;;AAA6B;;AAAoC;;AAAO;;AAAI;;AAAS;;AAChH;;AACF;;;;;;;;;sEDAaA,a,EAAa;cALzB,uDAKyB;eALf;AACTpB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AER1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmEM;;AACI;;AACE;;AACE;;AACE;;AAEF;;AACA;;AACE;;AAAI;;AAAO;;AAAQ;;AAAkD;;AAAS;;AAC9E;;AAAG;;AAAS;;AAAQ;;AAAY;;AAAS;;AACzC;;AAAG;;AAAO;;AAAQ;;AAAc;;AAAS;;AAE3C;;AACF;;AACF;;AACF;;;;;;AAXwE;;AAAA;;AAC9D;;AAGiB;;AAAA;;AACC;;AAAA;;AACF;;AAAA;;;;;;AAM5B;;AAAuC;;AAAyB;;;;;;AAChE;;AAAmC;;AAA+B;;;;QD1E3DoB,mB;AAQX,mCACSD,WADT,EAESE,MAFT,EAGSC,MAHT,EAGuB;AAAA;;AAFd,aAAAH,WAAA,GAAAA,WAAA;AACA,aAAAE,MAAA,GAAAA,MAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AATP,aAAAb,OAAA,GAAQ,KAAR;AAUG;;;;oCARSc,K,EAAO;AACjB,eAAKd,OAAL,GAAec,KAAf;AACD;;;mCAQK,CACP;;;;;;;uBAfUH,mB,EAAmB,0I,EAAA,uH,EAAA,qH;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,e;AAAA,a;AAAA,wiB;AAAA;AAAA;ACgDhC;;AACA;;AAA+B;AAAA,mBAAU,IAAAI,WAAA,QAAV;AAA6B,WAA7B;;AAA+B;;AAC9D;;AACI;;AAAgD;AAAA,mBAAS,IAAAL,WAAA,UAAT;AAA8B,WAA9B;;AAA+D;;AAAO;;AAC1H;;AACA;;AAEE;;AACE;;AACE;;AAgBA;;AACA;;AAEF;;AACF;;;;AA5Ba;;AAAA;;AAQQ;;AAAA;;AAgBK;;AAAA;;AACH;;AAAA;;;;;;;;;sED1EZC,mB,EAAmB;cAN/B,uDAM+B;eANrB;AACTtB,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAMqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWE;;AACE;;AACE;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACF;;;;;;AALa;;AAAA;;AACc;;;;QDPhByB,gB;AAQX,gCACWN,WADX,EAEWE,MAFX,EAGWC,MAHX,EAG2B;AAAA;;AAFhB,aAAAH,WAAA,GAAAA,WAAA;AACA,aAAAE,MAAA,GAAAA,MAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AARX,aAAAb,OAAA,GAAU,KAAV;AAQ6B;;;;oCANfc,K,EAAO;AACjB,eAAKd,OAAL,GAAec,KAAf;AACD;;;mCAMK,CACP;;;;;;;uBAdUE,gB,EAAgB,0I,EAAA,uH,EAAA,qH;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,ulE;AAAA;AAAA;ACR7B;;AACA;;AAA+B;AAAA,mBAAU,IAAAD,WAAA,QAAV;AAA6B,WAA7B;;AAA+B;;AAC9D;;AACI;;AAAgD;AAAA,mBAAS,IAAAL,WAAA,UAAT;AAA8B,WAA9B;;AAA+D;;AAAO;;AAC1H;;AACA;;AAGA;;AACE;;AAAe;;AAAY;;AAC3B;;AAYA;;AACE;;AACE;;AACF;;AACA;;AACF;;AAEA;;AAEE;;AACE;;AAAmB;;AAAgB;;AACnC;;AAEF;;AAGA;;AAAoB;;AAAe;;AACnC;;AACE;;AACA;;AAAkD;;AAAM;;AAC1D;;AACA;;AACE;;AACA;;AAAkD;;AAAI;;AACxD;;AACA;;AACE;;AACA;;AAAkD;;AAAK;;AACzD;;AACA;;AACE;;AACA;;AAAkD;;AAAM;;AAC1D;;AAGA;;AACE;;AAAqB;;AAA8B;;AACnD;;AACE;;AAAQ;;AAAK;;AACb;;AAAQ;;AAAK;;AACb;;AAAQ;;AAAK;;AACb;;AAAQ;;AAAK;;AACb;;AAAQ;;AAAK;;AACb;;AAAQ;;AAAK;;AACb;;AAAQ;;AAAK;;AACb;;AAAQ;;AAAG;;AACb;;AACF;;AAEA;;AACE;;AACE;;AAAsB;;AAAU;;AAChC;;AACF;;AAEA;;AACE;;AAAuB;;AAAK;;AAC5B;;AACE;;AAAmC;;AAAS;;AAC5C;;AAAQ;;AAAG;;AACb;;AACF;;AAGA;;AACE;;AAAyB;;AAAG;;AAC5B;;AACF;;AACF;;AAIA;;AACE;;AACE;;AACA;;AACE;;AACF;;AACF;;AACF;;AAGA;;AACE;;AAAsB;;AACtB;;AACA;;AAEF;;AAEA;;AACE;;AACF;;AAEF;;AACF;;;;AAnHe;;AAAA;;AASI;;AAAA;;;;;;;;;sEDFNM,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT3B,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AET7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsDA;;AAA4C;;AAA4B;;;;QD/C3D0B,e;AAQX,iCAAc;AAAA;;AANd,aAAAC,YAAA,GAAe,CAAf;AACA,aAAAC,YAAA,GAAe,CAAf;AACA,aAAAC,YAAA,GAAe,CAAf;AACA,aAAAC,cAAA,GAAe,KAAf;AAGiB;;;;mCAET,CACP;;;;;;;uBAXUJ,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,6N;AAAA;AAAA;ACP5B;;AAAI;;AAAwB;;AAC5B;;AACA;;AAQA;;AACE;;AAEE;;AAAI;;AAAW;;AACf;;AACF;;AACA;;AAEE;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAK;;AAAM;;AAAG;;AAAgB;;AAAI;;AAC1C;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AACzG;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AACzG;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AACzG;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AACzG;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AAAS;;AAChH;;AACA;;AAEE;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAK;;AAAM;;AAAG;;AAAgB;;AAAI;;AAC1C;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AACzG;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AACzG;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AACzG;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AACzG;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AAAS;;AAChH;;AACF;;AAEA;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAK;;AAAM;;AAAG;;AAAgB;;AAAI;;AACtC;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AACzG;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AACzG;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AACzG;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AACzG;;AAAoD;AAAA,+BAAwB,CAAxB;AAA2B,mBAAF,qBAAmB,KAAjB;AAAsB,WAAjD;;AAAoD;;AAAC;;AAAS;;AAChH;;AACF;;AAEA;;AACA;;AACE;;AAA8C;AAAA,wCAA0B,IAA1B;AAA8B,WAA9B;;AAAgC;;AAAM;;AAEtF;;AACE;;AACF;;;;AAnCsB;;AAAA;;AAUA;;AAAA;;AAUJ;;AAAA;;AAef;;AAAA;;;;;;;;;sED/CUA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT5B,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa+B,e;AAEX,gCACE;AACOZ,iBAFT,EAEiC;AAAA;;AAAxB,aAAAA,WAAA,GAAAA,WAAA;AACF;;;;mCAEI,CAAG;;;;;;;uBAPHY,e,EAAe,0I;AAAA,K;;;YAAfA,e;AAAe,kC;AAAA,e;AAAA,a;AAAA,ghB;AAAA;AAAA;;;ACT5B;;AACI;;AAEE;;AACE;;AAAI;;AAAM;;AAKV;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAGF;;AACE;;AAA2D;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAZ,WAAA,6BAAT;AAAgE,WAAhE;;AAA3D;;AACF;;AAGA;;AACE;;AAAuC;AAAA,mBAAS,IAAAA,WAAA,eAAT;AAAmC,WAAnC;;AACrC;;AACA;;AACF;;AACF;;AAGA;;AACE;;AAAM;;AAAsB;;AAA2C;;AAAO;;AAAO;;AACvF;;AAEF;;AACF;;AApCF;;;;;;;;;sEDSaY,e,EAAe;cAN3B,uDAM2B;eANjB;AACTjC,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAMiB,Q;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQagC,e;AAEX,+BACSb,WADT,EACiC;AAAA;;AAAxB,aAAAA,WAAA,GAAAA,WAAA;AACJ;;;;mCAEG,CACP;;;;;;;uBAPUa,e,EAAe,0I;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,4qB;AAAA;AAAA;;;ACR5B;;AACE;;AACE;;AACE;;AAAI;;AAAO;;AAEX;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AAA4D;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAb,WAAA,6BAAT;AAA2D,WAA3D;;AAA5D;;AACF;;AAEA;;AACE;;AAAiB;;AAAsB;;AAAE;;AAAO;;AAClD;;AAGA;;AACE;;AAAwC;AAAA,mBAAS,IAAAA,WAAA,eAAT;AAAmC,WAAnC;;AACtC;;AACA;;AACF;;AACF;;AAEF;;AAEA;;AACE;;AAAM;;AAAyB;;AAAyD;;AAAM;;AAAS;;AACzG;;AACF;;AAEF;;;;;;;;;sEDhCaa,e,EAAe;cAL3B,uDAK2B;eALjB;AACTlC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaiC,S;AAEX,yBACSd,WADT,EAESE,MAFT,EAEuB;AAAA;;AADd,aAAAF,WAAA,GAAAA,WAAA;AACA,aAAAE,MAAA,GAAAA,MAAA;AACJ;;;;oCAGHa,I,EACAC,K,EAA0B;AAC1B,cAAK,KAAKhB,WAAL,CAAiBiB,UAAjB,KAAgC,IAArC,EAA2C;AACzC,iBAAKf,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;;AACD,iBAAO,IAAP;AACD;;;;;;;uBAdUJ,S,EAAS,0H,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVK,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACRtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,4C,CAGA;AAMA;AAGA;;;AACA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,OAAxB;AAAiCC,eAAS,EAAE;AAA5C,KADqB,EAErB;AAAEF,UAAI,EAAE,MAAR;AAAgBG,eAAS,EAAE;AAA3B,KAFqB,EAGrB;AAAEH,UAAI,EAAE,MAAR;AAAgBG,eAAS,EAAE,mFAA3B;AAA4CC,iBAAW,EAAE;AAAzD,KAHqB,EAIrB;AAAEJ,UAAI,EAAE,QAAR;AAAkBG,eAAS,EAAE,mFAA7B;AAA8CC,iBAAW,EAAE;AAA3D,KAJqB,EAKrB;AAAEJ,UAAI,EAAE,SAAR;AAAmBG,eAAS,EAAE,sFAA9B;AAAgDC,iBAAW,EAAE;AAA7D,KALqB,EAMrB;AAAEJ,UAAI,EAAE,YAAR;AAAsBG,eAAS,EAAE,+FAAjC;AAAsDC,iBAAW,EAAE,CAAC,kEAAD;AAAnE,KANqB,CAAvB;;QAaaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBP,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBM,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRxC,iBAAO,EAAE,CAAC,6DAAayC,OAAb,CAAqBP,MAArB,CAAD,CADD;AAER7C,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AC1B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAQA;AACA;;;QAMaqD,W;AAMX,2BACSC,MADT,EACkC;AACzBC,SAFT,EAEiC;AACxB5B,YAHT,EAISC,MAJT,CAIiC;AAJjC,Q;;;;;AACS,aAAA0B,MAAA,GAAAA,MAAA;AACA,aAAAC,GAAA,GAAAA,GAAA;AACA,aAAA5B,MAAA,GAAAA,MAAA;AACA,aAAAC,MAAA,GAAAA,MAAA,C,CAEX;;AACI,aAAK0B,MAAL,CAAYE,SAAZ,CAAsBC,SAAtB,CAAgC,UAAAC,IAAI,EAAI;AACnC;AACA,cAAIA,IAAJ,EAAU;AACP,iBAAI,CAACC,QAAL,GAAgBD,IAAhB;AACAE,wBAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe,KAAI,CAACJ,QAApB,CAA7B;AACAG,gBAAI,CAACE,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAX;AACF,WAJD,MAIM;AACN;AACGL,wBAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,IAA7B;AACAC,gBAAI,CAACE,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAX;AACF;AACD,SAXL;AAYD,O,CAED;;;;;+BACOC,K,EAAOC,Q,EAAU;AAAA;;AACtB,iBAAO,KAAKb,MAAL,CAAYc,0BAAZ,CAAuCF,KAAvC,EAA8CC,QAA9C,EACJzE,IADI,CACC,UAAC2E,MAAD,EAAY;AAChB,kBAAI,CAACzC,MAAL,CAAY0C,GAAZ,CAAgB,YAAM;AACpB,oBAAI,CAAC3C,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,aAFD;;AAGA,kBAAI,CAAC4B,WAAL,CAAiBF,MAAM,CAACX,IAAxB;AACD,WANI,WAMI,UAACc,KAAD,EAAW;AAClBC,kBAAM,CAACC,KAAP,CAAaF,KAAK,CAACG,OAAnB;AACD,WARI,CAAP;AASD,S,CAED;;;;+BACOT,K,EAAOC,Q,EAAU;AAAA;;AACtB,iBAAO,KAAKb,MAAL,CAAYsB,8BAAZ,CAA2CV,KAA3C,EAAkDC,QAAlD,EACJzE,IADI,CACC,UAAC2E,MAAD,EAAY;AAChB,kBAAI,CAACE,WAAL,CAAiBF,MAAM,CAACX,IAAxB;;AACA,kBAAI,CAAC/B,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,WAJI,WAII,UAAC6B,KAAD,EAAW;AAClBC,kBAAM,CAACC,KAAP,CAAaF,KAAK,CAACG,OAAnB;AACD,WANI,CAAP;AAOD,S,CAED;;;;AAMA;uCACe;AACb;AACA,cAAME,QAAQ,GAAG,IAAI,8CAAcC,oBAAlB,EAAjB;AACA,iBAAO,KAAKC,SAAL,CAAeF,QAAf,CAAP;AACD,S,CAED;;;;kCACUA,Q,EAAU;AAAA;;AAClB,iBAAO,KAAKvB,MAAL,CAAY0B,eAAZ,CAA4BH,QAA5B,EACFnF,IADE,CACG,UAAC2E,MAAD,EAAY;AAChB,kBAAI,CAACzC,MAAL,CAAY0C,GAAZ,CAAgB,YAAM;AAChBW,qBAAO,CAACC,GAAR,CAAY,uCAAZ;;AACA,oBAAI,CAACvD,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACH,aAHH;;AAIA,kBAAI,CAAC4B,WAAL,CAAiBF,MAAM,CAACX,IAAxB;AACD,WAPE,WAOM,UAACc,KAAD,EAAW;AAChBC,kBAAM,CAACC,KAAP,CAAaF,KAAb;AACH,WATE,CAAP;AAUC,S,CAGH;;;;oCACYd,I,EAAI;AACd,cAAMC,QAAQ,GAAS;AACrBwB,eAAG,EAAEzB,IAAI,CAACyB,GADW;AAErBjB,iBAAK,EAAER,IAAI,CAACQ,KAFS;AAGrBkB,oBAAQ,EAAE1B,IAAI,CAAC0B,QAHM;AAIrBC,uBAAW,EAAE3B,IAAI,CAAC2B,WAJG;AAKrBC,yBAAa,EAAE5B,IAAI,CAAC4B;AALC,WAAvB;AAOA,cAAMC,OAAO,GAAkC,KAAKhC,GAAL,CAASiC,GAAT,iBAAsB9B,IAAI,CAACyB,GAA3B,EAA/C;AACA,iBAAOI,OAAO,CAACE,GAAR,CAAY9B,QAAZ,EAAsB;AAC3B+B,iBAAK,EAAE;AADoB,WAAtB,CAAP;AAGD;;;kCAES;AAAA;;AACR,iBAAO,KAAKpC,MAAL,CAAYqC,OAAZ,GAAsBjG,IAAtB,CAA2B,YAAM;AACtCkE,wBAAY,CAACgC,UAAb,CAAwB,MAAxB;;AACA,kBAAI,CAACjE,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD,WAHM,CAAP;AAID;;;4BA/Ca;AACZ,cAAMe,IAAI,GAAGI,IAAI,CAACE,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,iBAAQP,IAAI,KAAK,IAAV,GAAkB,IAAlB,GAAyB,KAAhC;AACD;;;;;;;uBAvDUL,W,EAAW,0H,EAAA,gI,EAAA,8G,EAAA,4G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAHV;;;;;sEAGDA,W,EAAW;cAJvB,wDAIuB;eAJZ;AACVT,oBAAU,EAAE;AADF,S;AAIY,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfxB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMiD,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBrF,oBAAc,EAAE;AAChBsF,cAAM,EAAE,yCADQ;AAEhBC,kBAAU,EAAE,+BAFI;AAGhBC,mBAAW,EAAE,sCAHG;AAIhBC,iBAAS,EAAE,eAJK;AAKhBC,qBAAa,EAAE,2BALC;AAMhBC,yBAAiB,EAAE,cANH;AAOhBC,aAAK,EAAE,2CAPS;AAQhBC,qBAAa,EAAE;AARC;AAFS,KAApB;AAcP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACzBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYR,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBS,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIvB,OAAO,CAACT,KAAR,CAAcgC,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hexchat';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// routing\nimport { AppRoutingModule } from './shared/routing/app-routing.module';\n\nimport { AppComponent } from './app.component';\n// Firebase services + environment module\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\n// Auth service\nimport { AuthService } from './shared/services/auth.service';\n\n// Components that we created\nimport { HomeComponent } from './components/home/home.component';\nimport { SignInComponent } from './components/signin/signin.component';\nimport { SignUpComponent } from './components/signup/signup.component';\nimport { ProfileComponent} from './components/profile/profile.component';\nimport { PreferenceComponent } from './components/preference/preference.component';\nimport { RatingComponent } from './components/rating/rating.component';\nimport { ChatListComponent } from './components/chat-list/chat-list.component';\nimport { ChatMsgsComponent } from './components/chat-msgs/chat-msgs.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PreferenceComponent,\n    SignInComponent,\n    SignUpComponent,\n    RatingComponent,\n    ChatListComponent,\n    ProfileComponent,\n    ChatMsgsComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireAuthModule,\n    AngularFirestoreModule\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-chat-list',\n  templateUrl: './chat-list.component.html',\n  styleUrls: ['./chat-list.component.css']\n})\nexport class ChatListComponent implements OnInit {\n\n  @Input() channel = false;\n  @Output('update')\n  change: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n\n  chatList = [\n    {\n    group_name: 'USF MSDS Students',\n    time: '9:30 AM',\n    last_msg: 'meeting at 10',\n    img_url: 'https://img.freepik.com/free-vector/group-young-people-posing-photo_52683-18823.jpg?size=338&ext=jpg'\n    },\n    {\n    group_name: 'fast.ai Cohort 4',\n    time: 'yesterday',\n    last_msg: 'nice to meet you all',\n    img_url: 'https://cdn.aarp.net/content/dam/aarp/travel/destination-guides/2018/04/1140-travel-destination-san-francisco-main-page.imgcache.rev2e8bf9592b441099e8e7efb70e1c1e4b.web.650.370.jpg'\n    },\n    {\n    group_name: 'Python developers',\n    time: '04/03/2020',\n    last_msg: 'great work!',\n    img_url: 'https://image.shutterstock.com/image-photo/positive-skilled-young-multiethnic-coders-260nw-1145542748.jpg'\n    }\n  ];\n\n  changeChannel(): void {\n    this.channel = true;\n    this.change.emit(this.channel);\n  }\n\n  changeChannelBack(): void {\n    this.channel = false;\n    this.change.emit(this.channel);\n  }\n  changeToProfile(): void {\n    this.channel = false;\n    this.change.emit(this.channel);\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button type=\"button\"\n        class=\"btn btn-primary btn-block\"\n        routerLink=\"/preference\" routerLinkActive=\"active\">Go back to preferences\n</button>\n<button type=\"button\"\n        class=\"btn btn-primary btn-block\"\n        routerLink=\"/profile\" routerLinkActive=\"active\">Your Profile\n</button>\n<br>\n<table class=\"table table-hover\">\n  <tbody>\n    <tr *ngFor=\"let chat of chatList\" (click)=\"changeChannel()\" >\n      <th scope=\"col\"><img src={{chat.img_url}} class=\"avatar\"></th>\n      <td scope=\"col\">\n        <div style=\"font-weight: bold;font-size: 125%;\">{{chat.group_name}}</div>\n        <div>{{chat.last_msg}}</div>\n      </td>\n      <td align=\"right\" scope=\"col\" style=\"font-size: 90%; color=gray\">{{chat.time}}</td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat-msgs',\n  templateUrl: './chat-msgs.component.html',\n  styleUrls: ['./chat-msgs.component.css']\n})\nexport class ChatMsgsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Chat Messages</h2>\n\n<div class=\"container\">\n  <img src=\"https://img.freepik.com/free-vector/group-young-people-posing-photo_52683-18823.jpg?size=338&ext=jpg\" alt=\"Avatar\" style=\"width:100%;\">\n  <p>Hello. How are you today?</p>\n  <span class=\"time-right\">11:00</span>\n</div>\n\n<div class=\"container darker\">\n  <img src=\"https://www.guampassportrenewal.com/sites/default/files/sage-2_o.jpg\" alt=\"Avatar\" class=\"right\" style=\"width:100%;\">\n  <p>Hey! I'm fine. Thanks for asking!</p>\n  <span class=\"time-left\">11:01</span>\n</div>\n\n<div class=\"container\">\n  <img src=\"https://img.freepik.com/free-vector/group-young-people-posing-photo_52683-18823.jpg?size=338&ext=jpg\" alt=\"Avatar\" style=\"width:100%;\">\n  <p>Sweet! So, what do you wanna do today?</p>\n  <span class=\"time-right\">11:02</span>\n</div>\n\n<div class=\"container darker\">\n  <img src=\"https://www.guampassportrenewal.com/sites/default/files/sage-2_o.jpg\" alt=\"Avatar\" class=\"right\" style=\"width:100%;\">\n  <p>Nah, I dunno. Play soccer.. or learn more coding perhaps?</p>\n  <span class=\"time-left\">11:05</span>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../shared/services/auth.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Header with full-height image -->\n<header class=\"bgimg-1 w3-grayscale-min\" id=\"home\">\n  <p id=\"submissionlogin\"><button class=\"buttonlogin\"><a routerLink=\"/signin\"  type=\"submit\">LOG IN</a></button></p>\n  <div class=\"w3-display-left w3-text-white\" style=\"padding:130px\">\n    <span class=\"firstsentecne\">Rediscover Friendship</span><br>\n    <span class=\"secondsentecne\">Make new friends with hexchat</span><br>\n    <p id=\"submissionsignup\"><button class=\"buttonsignup\"><a routerLink=\"/join\" type=\"submit\">SIGN UP</a></button></p>\n  </div>\n</header>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { AuthService } from \"../../shared/services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-preference',\n  templateUrl: './preference.component.html',\n  styleUrls: ['./preference.component.css']\n})\n\nexport class PreferenceComponent implements OnInit {\n\n    channel=false\n\n    countChange(event) {\n      this.channel = event;\n    }\n\n  constructor(\n    public authService: AuthService,\n    public router: Router,\n    public ngZone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Top navigation -->\n<!--<nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">-->\n<!--  <a class=\"navbar-brand col-sm-3 col-md-2 mr-0\" routerLink=\"/register-student\">-->\n<!--    <span class=\"dasboard-text\">Dashboard</span>-->\n<!--  </a>-->\n<!--</nav>-->\n\n<!-- Sidebar navigation -->\n<!--<div class=\"container-fluid\">-->\n<!--  <div class=\"row\">-->\n\n<!--    <nav class=\"col-md-2 d-md-block bg-light sidebar\">-->\n<!--      <div class=\"sidebar-sticky\">-->\n<!--        <ul class=\"nav flex-column\">-->\n<!--          <li class=\"nav-item\">-->\n<!--            <a routerLink=\"#profile\" class=\"nav-link active\" type=\"submit\">-->\n<!--              <i class=\"fas fa-user\" ></i>User Profile-->\n<!--            </a>-->\n<!--          </li>-->\n<!--          &lt;!&ndash; Calling SignOut() Api from AuthService &ndash;&gt;-->\n<!--          <li class=\"nav-item\">-->\n<!--            <a class=\"nav-link\" type=\"submit\" (click)=\"authService.SignOut()\">-->\n<!--              <i class=\"fas fa-sign-out-alt\"></i>Log out-->\n<!--            </a>-->\n<!--          </li>-->\n<!--        </ul>-->\n<!--      </div>-->\n<!--    </nav>-->\n\n<!--    &lt;!&ndash; Main content &ndash;&gt;-->\n<!--    <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">-->\n<!--      <div class=\"inner-adjust\">-->\n\n<!--        <div class=\"pt-3 pb-2 mb-3 border-bottom\">-->\n<!--          <h1 class=\"h2\">User Profile</h1>-->\n<!--        </div>-->\n<!--        &lt;!&ndash; Show user data when logged in &ndash;&gt;-->\n<!--        <div class=\"row\" *ngIf=\"authService.userData as user\">-->\n<!--          <div class=\"col-md-12\">-->\n<!--            <div class=\"media\">-->\n<!--              <img class=\"align-self-start mr-5 img-thumbnail rounded-circle\" src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\"-->\n<!--                alt=\"{{user.displayName}}\">-->\n<!--              <div class=\"media-body\">-->\n<!--                <h1>Hello: <strong>{{(user.displayName) ? user.displayName : 'User'}}</strong></h1>-->\n<!--                <p>User ID: <strong>{{user.uid}}</strong></p>-->\n<!--                <p>Email: <strong>{{user.email}}</strong></p>-->\n<!--                <p>Email Verified: <strong>{{user.emailVerified}}</strong></p>-->\n<!--              </div>-->\n<!--            </div>-->\n<!--          </div>-->\n<!--        </div>-->\n\n<!--      </div>-->\n<!--    </main>-->\n\n<!--  </div>-->\n<!--</div>-->\n\n<div class=\"split left\">\n<app-chat-list [channel]=false (update)=\"countChange($event)\"></app-chat-list>\n<div style=\"position: absolute; bottom: 5%; right:40%\" class=\"text-center\">\n    <button style=\"margin-top: auto;\" type=\"button\" (click)=\"authService.SignOut()\" class=\"btn btn-primary btn-lg\">Log out</button>\n</div>\n</div>\n\n  <div class=\"split right\">\n    <div>\n      <div class=\"row\" *ngIf=\"authService.userData as user\">\n          <div class=\"col-md-12\">\n            <div class=\"media\">\n              <a routerLink=\"/home\">\n                <img class=\"align-self-start mr-5 img-thumbnail rounded-circle\" src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\"\n                  alt=\"{{user.displayName}}\">\n              </a>\n              <div class=\"media-body\">\n                <h1>Hello: <strong>{{(user.displayName) ? user.displayName : 'User'}}</strong></h1>\n                <p>User ID: <strong>{{user.uid}}</strong></p>\n                <p>Email: <strong>{{user.email}}</strong></p>\n                <!-- <p>Email Verified: <strong>{{user.emailVerified}}</strong></p> -->\n              </div>\n            </div>\n          </div>\n        </div>\n      <div class=\"centered\" *ngIf=\"!channel\"><app-rating></app-rating></div>\n      <div class=\"msgs\"  *ngIf=\"channel\"><app-chat-msgs></app-chat-msgs></div>\n\n    </div>\n  </div>\n","import {Component, NgZone, OnInit} from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n\n  channel = false;\n\n    countChange(event) {\n      this.channel = event;\n    }\n  constructor(\n      public authService: AuthService,\n      public router: Router,\n      public ngZone: NgZone) {}\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Left Navbar -->\n<div class=\"split left\">\n<app-chat-list [channel]=false (update)=\"countChange($event)\"></app-chat-list>\n<div style=\"position: absolute; bottom: 5%; right:40%\" class=\"text-center\">\n    <button style=\"margin-top: auto;\" type=\"button\" (click)=\"authService.SignOut()\" class=\"btn btn-primary btn-lg\">Log out</button>\n</div>\n</div>\n\n<!-- Upload Headshot -->\n<div class=\"split right\">\n  <h1 class=\"h2\">User Profile</h1>\n  <div class=\"row\" *ngIf=\"authService.userData as user\">\n    <div class=\"text-center\">\n      <div class=\"col-md-12\">\n        <div class=\"media\">\n          <img src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\"\n               class=\"small\" alt=\"{{user.displayName}}\">\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <label for=\"userPhoto1\">\n      Upload my photo here\n    </label>\n    <input type=\"file\" class=\"form-control-file\" id=\"userPhoto1\" >\n  </div>\n\n  <form>\n    <!-- Personal Email -->\n    <div class=\"form-group\">\n      <label class=\"tab\">My Email Address</label>\n      <input type=\"email\" class=\"form-control\"\n             id=\"exampleFormControlInput1\" placeholder=\"robot@hexchat.com\">\n    </div>\n\n    <!-- Gender Info -->\n    <label class=\"tab\"> My gender is:  </label>\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"userGender1\" value=\"option1\">\n      <label class=\"form-check-label\" for=\"userGender1\">Female</label>\n    </div>\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"userGender2\" value=\"option2\">\n      <label class=\"form-check-label\" for=\"userGender2\">Male</label>\n    </div>\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"userGender3\" value=\"option3\">\n      <label class=\"form-check-label\" for=\"userGender3\">Other</label>\n    </div>\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"userGender4\" value=\"option4\">\n      <label class=\"form-check-label\" for=\"userGender4\">Secret</label>\n    </div>\n\n    <!-- Age Info -->\n    <div class=\"form-group\">\n      <label for=\"userAge\">I belong to this range of age.</label>\n      <select class=\"form-control\" id=\"userAge\">\n        <option>18-20</option>\n        <option>21-25</option>\n        <option>26-30</option>\n        <option>31-35</option>\n        <option>36-40</option>\n        <option>41-50</option>\n        <option>51-60</option>\n        <option>60+</option>\n      </select>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"col-md-6 mb-3\">\n        <label for=\"userCity\">I live in </label>\n        <input type=\"text\" class=\"form-control\" id=\"userCity\" required>\n      </div>\n\n      <div class=\"col-md-3 mb-3\">\n        <label for=\"userState\">State</label>\n        <select class=\"custom-select\" id=\"userState\" required>\n          <option selected disabled value=\"\">Choose...</option>\n          <option>...</option>\n        </select>\n      </div>\n\n      <!-- Zipcode div-->\n      <div class=\"col-md-3 mb-3\">\n        <label for=\"userZipcode\">Zip</label>\n        <input type=\"text\" class=\"form-control\" id=\"userZipcode\" required>\n      </div>\n    </div>\n\n\n\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"userCheck\" required>\n        <label class=\"form-check-label\" for=\"userCheck\">\n          Click to protect my personal information.\n        </label>\n      </div>\n    </div>\n\n\n    <div class=\"form-group\">\n      <label for=\"userText\">Things I want to share...\n      </label>\n      <textarea class=\"form-control\" id=\"userText\" rows=\"3\"\n                placeholder=\"E.g. I like skiing and skating in my leisure time./I have a dog named Lambda.\"></textarea>\n    </div>\n\n    <button type=\"button\" class=\"btn btn-primary btn-lg\" type=\"submit\">\n      Renew my profile\n    </button>\n\n  </form>\n</div>\n<!-- Borrow -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.css']\n})\nexport class RatingComponent implements OnInit {\n\n  currentRate1 = 3;\n  currentRate2 = 3;\n  currentRate3 = 3;\n  showSuccessMsg=false;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n\n\n}\n","<h2>Select your preferences:</h2>\n<br/>\n<br/>\n<!--<ng-template #t let-fill=\"fill\">-->\n<!--  <span class=\"star\" [class.full]=\"fill === 100\">-->\n<!--    <span class=\"half\" [style.width.%]=\"fill\">&hearts;</span>&hearts;-->\n<!--  </span>-->\n<!--</ng-template>-->\n\n<!--<ngb-rating [(rate)]=\"currentRate\" [starTemplate]=\"t\" [readonly]=\"true\" [max]=\"5\"></ngb-rating>-->\n<table style=\"width:100%\">\n  <tr>\n\n    <th>Group name:</th>\n    <th></th>\n  </tr>\n  <tr>\n\n    <td>USF MSDS Students</td>\n    <td><pre>Rate: <b>{{currentRate1}}</b></pre>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate1 = 1; showSuccessMsg = false;\">1</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate1 = 2; showSuccessMsg = false;\">2</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate1 = 3; showSuccessMsg = false;\">3</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate1 = 4; showSuccessMsg = false;\">4</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate1 = 5; showSuccessMsg = false;\">5</button></td>\n  </tr>\n  <tr>\n\n    <td>fast.ai Cohort 4</td>\n    <td><pre>Rate: <b>{{currentRate2}}</b></pre>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate2 = 1; showSuccessMsg = false;\">1</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate2 = 2; showSuccessMsg = false;\">2</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate2 = 3; showSuccessMsg = false;\">3</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate2 = 4; showSuccessMsg = false;\">4</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate2 = 5; showSuccessMsg = false;\">5</button></td>\n  </tr>\n<tr>\n\n<td>Python developers</td>\n<td><pre>Rate: <b>{{currentRate3}}</b></pre>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate3 = 1; showSuccessMsg = false;\">1</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate3 = 2; showSuccessMsg = false;\">2</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate3 = 3; showSuccessMsg = false;\">3</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate3 = 4; showSuccessMsg = false;\">4</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"currentRate3 = 5; showSuccessMsg = false;\">5</button></td>\n  </tr>\n</table>\n\n<br/>\n<div class=\"text-center\">\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"showSuccessMsg = true\">Submit</button>\n\n</div>\n  <br>\n<p *ngIf=\"showSuccessMsg == true\" id=\"demo\">Data submitted successfully!</p>\n\n\n\n<!--<hr>-->","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\n\nexport class SignInComponent implements OnInit {\n\n  constructor(\n    // Inject AuthService class here so that these services will be available throughout the same template\n    public authService: AuthService\n    ) { }\n\n  ngOnInit() { }\n\n}","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n  \n      <div class=\"authBlock\">\n        <h3>Log In</h3>\n        <!-- <div class=\"formGroup\">\n          <input type=\"text\" class=\"formControl\" placeholder=\"Username\" #userName required>\n        </div> -->\n\n        <div class=\"formGroup\">\n          <input type=\"text\" class=\"formControl\" placeholder=\"Enter Email\" #userEmail required>\n        </div>\n  \n        <div class=\"formGroup\">\n          <input type=\"password\" class=\"formControl\" placeholder=\"Enter Password\" #userPassword required>\n        </div>\n\n      <!-- Calling SignIn Api from AuthService -->\n      <div class=\"formGroup\">\n        <input type=\"button\" class=\"btn btnPrimary\" value=\"Log in\" (click)=\"authService.SignIn(userEmail.value, userPassword.value)\">\n      </div>\n  \n      <!-- Continue with Facebook -->\n      <div class=\"formGroup\">\n        <button type=\"button\" class=\"buttonfb\" (click)=\"authService.FacebookAuth()\">\n          <i class=\"fab fa-facebook-plus-g\"></i>\n          Continue with Facebook\n        </button>\n      </div>\n  \n  \n      <div class=\"redirectToLogin\">\n        <span>Don't have an account?<span class=\"redirect\" routerLink=\"/join\"> Sign Up</span></span>\n      </div>\n  \n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../shared/services/auth.service\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n  <div class=\"displayTableCell\">\n    <div class=\"authBlock\">\n      <h3>Sign Up</h3>\n\n      <div class=\"formGroup\">\n        <input type=\"email\" class=\"formControl\" placeholder=\"Enter Email Address\" #userEmail required>\n      </div>\n\n      <div class=\"formGroup\">\n        <input type=\"password\" class=\"formControl\" placeholder=\"Enter Password\" #userPwd required>\n      </div>\n\n      <div class=\"formGroup\">\n        <input type=\"text\" class=\"formControl\" placeholder=\"Enter User name\" #displayName required>\n      </div>\n\n      <div class=\"formGroup\">\n        <input type=\"button\" class=\"btn btnPrimary\" value=\"Sign Up\" (click)=\"authService.SignUp(userEmail.value, userPwd.value)\">\n      </div>\n\n      <div class=\"formGroup\">\n        <span class=\"or\"><span class=\"orInner\">Or</span></span>\n      </div>\n\n        <!-- Continue with Facebook -->\n      <div class=\"formGroup\">\n        <button type=\"button\"  class=\"buttonfb\" (click)=\"authService.FacebookAuth()\">\n          <i class=\"fab fa-facebook-plus-g\"></i>\n          Join with Facebook\n        </button>\n      </div>\n      \n    </div>\n\n    <div class=\"redirectToLogin\">\n      <span>Already have an account? <button class=\"login\" type=\"button\" routerLink=\"/signin\">Log In</button></span>\n    </div>\n  </div>\n\n</div>\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if ( this.authService.isLoggedIn !== true ){\n      this.router.navigate(['/']);\n    }\n    return true;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// components\nimport { HomeComponent } from '../../components/home/home.component';\nimport { PreferenceComponent} from '../../components/preference/preference.component';\nimport { SignInComponent } from '../../components/signin/signin.component';\nimport { SignUpComponent } from '../../components/signup/signup.component';\nimport { ProfileComponent } from '../../components/profile/profile.component';\n// Import canActivate guard services\nimport { AuthGuard } from '../../shared/guard/auth.guard';\n\n// Include route guard in routes array\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'join', component: SignUpComponent, canActivate: []},\n  { path: 'signin', component: SignInComponent, canActivate: []},\n  { path: 'profile', component: ProfileComponent, canActivate: []},\n  { path: 'preference', component: PreferenceComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase/app';\nimport * as firebase from 'firebase';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { User } from './user.model';\n\n// import { Observable, of } from 'rxjs';\n// import { switchMap, first, map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n//    user$: Observable<User>;\n//    user$: Observable<any>;\n    userData: any;\n\n  constructor(\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\n    public afs: AngularFirestore,  // Inject FIrestore service\n    public router: Router,\n    public ngZone: NgZone          // NgZone service to remove outside scope warning\n  ) {\n//   get the auth state, then fetch the Firestore user document or return null\n    this.afAuth.authState.subscribe(user => {\n         // logged in\n         if (user) {\n            this.userData = user;\n            localStorage.setItem('user', JSON.stringify(this.userData));\n            JSON.parse(localStorage.getItem('user'));\n         } else{\n         // logged out\n            localStorage.setItem('user', null);\n            JSON.parse(localStorage.getItem('user'));\n         }\n        });\n  }\n\n  // Sign in with email/password\n  SignIn(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['preference']);\n        });\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message);\n      });\n  }\n\n  // Sign up with email/password\n  SignUp(email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.SetUserData(result.user);\n        this.router.navigate(['preference']);\n      }).catch((error) => {\n        window.alert(error.message);\n      });\n  }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null) ? true : false;\n  }\n\n  // Sign in with Facebook\n  FacebookAuth() {\n    // return new auth.FacebookAuthProvider();\n    const provider = new firebase.auth.FacebookAuthProvider();\n    return this.AuthLogin(provider);\n  }\n\n  // Auth logic to turn auth providers\n  AuthLogin(provider) {\n    return this.afAuth.signInWithPopup(provider)\n        .then((result) => {\n          this.ngZone.run(() => {\n                console.log('You have been successfully logged in!');\n                this.router.navigate(['preference']);\n            });\n          this.SetUserData(result.user);\n        }).catch((error) => {\n            window.alert(error);\n        });\n    }\n\n\n  // sign in with social auth\n  SetUserData(user){\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      photoURL: user.photoURL,\n      displayName: user.displayName,\n      emailVerified: user.emailVerified\n    };\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    return userRef.set(userData, {\n      merge: true\n    });\n  }\n\n  SignOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['']);\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n  apiKey: \"AIzaSyDRB2-4d-joGKpmSGWW3r2NsY1UeuMdN2Q\",\n  authDomain: \"msds603-85328.firebaseapp.com\",\n  databaseURL: \"https://msds603-85328.firebaseio.com\",\n  projectId: \"msds603-85328\",\n  storageBucket: \"msds603-85328.appspot.com\",\n  messagingSenderId: \"516534688358\",\n  appId: \"1:516534688358:web:a26ea92c106aa4ada9eba7\",\n  measurementId: \"G-FS6SEZ8M5X\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}